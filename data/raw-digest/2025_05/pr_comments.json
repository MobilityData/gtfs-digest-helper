[
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082100405",
    "pull_request_review_id":2829062267,
    "id":2082100405,
    "node_id":"PRRC_kwDOAlVrjc58GlS1",
    "diff_hunk":"@@ -538,7 +539,7 @@ Fare rules for transfers between legs of travel defined in [`fare_leg_rules.txt`\n \n To process the cost of a multi-leg journey:\n \n-1. The applicable fare leg groups defined in `fare_leg_rules.txt` should be determined for all individual legs of travel based on the rider\u2019s journey.\n+1. The applicable fare leg groups defined in `fare_leg_rules.txt` should be determined for all individual legs or effective fare legs of travel based on the rider\u2019s journey.",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n1. The applicable fare leg groups defined in `fare_leg_rules.txt` should be determined for all effective fare legs of travel based on the rider\u2019s journey.\r\n```\r\n\r\nDepending on how an \"effective fare leg\" is defined, it could also be an individual leg. It's a list of 1 to N joined legs. So always just referring to \"effective fare leg\" (without mentioning \"individual legs\") would be fine and would allow for a shorter documentation (which usually equals to better readability IMO).",
    "created_at":"2025-05-09T16:49:29Z",
    "updated_at":"2025-05-09T16:54:35Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2082100405",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082100405"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2082100405"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082100405\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":542.0,
    "original_line":542,
    "side":"RIGHT",
    "original_position":31,
    "position":31,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082102951",
    "pull_request_review_id":2829062267,
    "id":2082102951,
    "node_id":"PRRC_kwDOAlVrjc58Gl6n",
    "diff_hunk":"@@ -559,7 +560,7 @@ To process the cost of a multi-leg journey:\n | `to_leg_group_id` | Foreign ID referencing `fare_leg_rules.leg_group_id` | Optional | Identifies a group of post-transfer fare leg rules.<br><br>If there are no matching `fare_transfer_rules.to_leg_group_id` values to the `leg_group_id` being filtered, empty `fare_transfer_rules.to_leg_group_id` will be matched by default.<br><br>An empty entry in `fare_transfer_rules.to_leg_group_id` corresponds to all leg groups defined under `fare_leg_rules.leg_group_id` excluding the ones listed under `fare_transfer_rules.to_leg_group_id` |\n | `transfer_count` | Non-zero integer | **Conditionally Forbidden** | Defines how many consecutive transfers the transfer rule may be applied to.<br><br>Valid options are:<br>`-1` - No limit.<br>`1` or more - Defines how many transfers the transfer rule may span.<br><br>If a sub-journey matches multiple records with different `transfer_count`s, then the rule with the minimum `transfer_count` that is greater than or equal to the current transfer count of the sub-journey is to be selected.<br><br>Conditionally Forbidden:<br>- **Forbidden** if `fare_transfer_rules.from_leg_group_id` does not equal `fare_transfer_rules.to_leg_group_id`.<br>- **Required** if `fare_transfer_rules.from_leg_group_id` equals `fare_transfer_rules.to_leg_group_id`. |\n | `duration_limit` | Positive integer | Optional | Defines the duration limit of the transfer.<br><br>Must be expressed in integer increments of seconds.<br><br>If there is no duration limit, `fare_transfer_rules.duration_limit` must be empty. |\n-| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the current leg and the arrival fare validation of the next leg.<br>`1` - Between the departure fare validation of the current leg and the departure fare validation of the next leg.<br>`2` - Between the arrival fare validation of the current leg and the departure fare validation of the next leg.<br>`3` - Between the arrival fare validation of the current leg and the arrival fare validation of the next leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |\n+| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the current leg and the arrival fare validation of the next leg.<br>`1` - Between the departure fare validation of the current leg and the departure fare validation of the next leg.<br>`2` - Between the arrival fare validation of the current leg and the departure fare validation of the next leg.<br>`3` - Between the arrival fare validation of the current leg and the arrival fare validation of the next leg.<br><br>When a transfer rule with the same `from_leg_group_id` and `to_leg_group_id` is matched multiple times consecutively within a multi-leg journey, the `duration_limit` specified by the rule should be measured starting from the first matched leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the first matched leg and the arrival fare validation of the last matched leg.<br>`1` - Between the departure fare validation of the first matched leg and the departure fare validation of the last matched leg.<br>`2` - Between the arrival fare validation of the first matched leg and the departure fare validation of the last matched leg.<br>`3` - Between the arrival fare validation of the first matched leg and the arrival fare validation of the last matched leg.<br><br>When a transfer rule with the same `from_leg_group_id` and `to_leg_group_id` is matched multiple times consecutively within a multi-leg journey, the `duration_limit` specified by the rule should be measured starting from the first matched leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |\r\n```\r\n\r\nI would eliminate all occurrences of \"current leg\" and replace them with \"first matched leg\" to make it clear from the beginning.",
    "created_at":"2025-05-09T16:51:22Z",
    "updated_at":"2025-05-24T13:22:28Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2082102951",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082102951"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2082102951"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082102951\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":563,
    "side":"RIGHT",
    "original_position":40,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082106402",
    "pull_request_review_id":2829062267,
    "id":2082106402,
    "node_id":"PRRC_kwDOAlVrjc58Gmwi",
    "diff_hunk":"@@ -403,14 +404,14 @@ There must not be overlapping time intervals for the same `timeframe_group_id` a\n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `timeframe_group_id` | ID | **Required** | Identifies a timeframe or set of timeframes. |\n-|  `start_time` | Time | **Conditionally Required** |  Defines the beginning of a timeframe. The interval includes the start time.<br> Values greater than `24:00:00` are forbidden. An empty value in `start_time` is considered `00:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.end_time` is defined.<br> - **Forbidden** otherwise |\n-|  `end_time` | Time | **Conditionally Required** |  Defines the end of a timeframe. The interval does not include the end time.<br> Values greater than `24:00:00` are forbidden. An empty value in `end_time` is considered `24:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.start_time` is defined.<br> - **Forbidden** otherwise |\n+|  `start_time` | Local time | **Conditionally Required** |  Defines the beginning of a timeframe. The interval includes the start time.<br> Values greater than `24:00:00` are forbidden. An empty value in `start_time` is considered `00:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.end_time` is defined.<br> - **Forbidden** otherwise |\n+|  `end_time` | Local time | **Conditionally Required** |  Defines the end of a timeframe. The interval does not include the end time.<br> Values greater than `24:00:00` are forbidden. An empty value in `end_time` is considered `24:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.start_time` is defined.<br> - **Forbidden** otherwise |\n | `service_id` | Foreign ID referencing `calendar.service_id` or `calendar_dates.service_id` | **Required** | Identifies a set of dates that a timeframe is in effect. |\n \n #### Timeframe Local Time Semantics\n - When evaluating a fare event\u2019s time against [timeframes.txt](#timeframestxt), the event time is computed in local time using the local timezone, as determined by the `stop_timezone`, if specified, of the stop or parent station for the fare event. If not specified, the feed\u2019s agency timezone should be used instead.",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"This would require that the feed has only one agency or at least all agencies to have the same timezone to be non-ambiguous in case there's no stop timezone.",
    "created_at":"2025-05-09T16:54:04Z",
    "updated_at":"2025-05-09T16:54:35Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2082106402",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082106402"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2082106402"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2082106402\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":412.0,
    "original_line":412,
    "side":"RIGHT",
    "original_position":19,
    "position":19,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2099815266",
    "pull_request_review_id":2856985489,
    "id":2099815266,
    "node_id":"PRRC_kwDOAlVrjc59KKNi",
    "diff_hunk":"@@ -403,14 +404,14 @@ There must not be overlapping time intervals for the same `timeframe_group_id` a\n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `timeframe_group_id` | ID | **Required** | Identifies a timeframe or set of timeframes. |\n-|  `start_time` | Time | **Conditionally Required** |  Defines the beginning of a timeframe. The interval includes the start time.<br> Values greater than `24:00:00` are forbidden. An empty value in `start_time` is considered `00:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.end_time` is defined.<br> - **Forbidden** otherwise |\n-|  `end_time` | Time | **Conditionally Required** |  Defines the end of a timeframe. The interval does not include the end time.<br> Values greater than `24:00:00` are forbidden. An empty value in `end_time` is considered `24:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.start_time` is defined.<br> - **Forbidden** otherwise |\n+|  `start_time` | Local time | **Conditionally Required** |  Defines the beginning of a timeframe. The interval includes the start time.<br> Values greater than `24:00:00` are forbidden. An empty value in `start_time` is considered `00:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.end_time` is defined.<br> - **Forbidden** otherwise |\n+|  `end_time` | Local time | **Conditionally Required** |  Defines the end of a timeframe. The interval does not include the end time.<br> Values greater than `24:00:00` are forbidden. An empty value in `end_time` is considered `24:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.start_time` is defined.<br> - **Forbidden** otherwise |\n | `service_id` | Foreign ID referencing `calendar.service_id` or `calendar_dates.service_id` | **Required** | Identifies a set of dates that a timeframe is in effect. |\n \n #### Timeframe Local Time Semantics\n - When evaluating a fare event\u2019s time against [timeframes.txt](#timeframestxt), the event time is computed in local time using the local timezone, as determined by the `stop_timezone`, if specified, of the stop or parent station for the fare event. If not specified, the feed\u2019s agency timezone should be used instead.",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"The specification falls back to the agency time zone, so if there is no stop time zone, it should fallback to the actual agency used.\r\n\r\nFor example, if there are two agencies, A work on UTC+0, B work on UTC+1, and the current time is UTC 00:30 with a timeframe which start at 01:00 local time, my understanding is that it is in the timeframe if you use a service of B, but not a service of A.",
    "created_at":"2025-05-21T09:26:51Z",
    "updated_at":"2025-05-21T09:26:52Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2099815266",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2099815266"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2099815266"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2099815266\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":412.0,
    "original_line":412,
    "side":"RIGHT",
    "original_position":19,
    "position":19,
    "subject_type":"line",
    "in_reply_to_id":2082106402.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105428351",
    "pull_request_review_id":2865736371,
    "id":2105428351,
    "node_id":"PRRC_kwDOAlVrjc59fkl_",
    "diff_hunk":"@@ -538,7 +539,7 @@ Fare rules for transfers between legs of travel defined in [`fare_leg_rules.txt`\n \n To process the cost of a multi-leg journey:\n \n-1. The applicable fare leg groups defined in `fare_leg_rules.txt` should be determined for all individual legs of travel based on the rider\u2019s journey.\n+1. The applicable fare leg groups defined in `fare_leg_rules.txt` should be determined for all individual legs or effective fare legs of travel based on the rider\u2019s journey.",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"bdferris-v2",
      "id":26211219,
      "node_id":"MDQ6VXNlcjI2MjExMjE5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26211219?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/bdferris-v2",
      "html_url":"https:\/\/github.com\/bdferris-v2",
      "followers_url":"https:\/\/api.github.com\/users\/bdferris-v2\/followers",
      "following_url":"https:\/\/api.github.com\/users\/bdferris-v2\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/bdferris-v2\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/bdferris-v2\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/bdferris-v2\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/bdferris-v2\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/bdferris-v2\/repos",
      "events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Effective Fare Leg is currently defined as \"A sub-journey of two or more legs\" so indeed, this would need to change to support the semantics you've proposed.  That said, I think I tend to lean towards the status-quo definition.  I think there is value in distinguishing between an individual leg and an effective leg in the spec, as it usually more directly highlights in the text where you need to thing about how an individual leg vs effective leg impacts semantics.",
    "created_at":"2025-05-23T21:10:41Z",
    "updated_at":"2025-05-23T21:10:41Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105428351",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105428351"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105428351"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105428351\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":542.0,
    "original_line":542,
    "side":"RIGHT",
    "original_position":31,
    "position":31,
    "subject_type":"line",
    "in_reply_to_id":2082100405.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105432168",
    "pull_request_review_id":2865744368,
    "id":2105432168,
    "node_id":"PRRC_kwDOAlVrjc59flho",
    "diff_hunk":"@@ -403,14 +404,14 @@ There must not be overlapping time intervals for the same `timeframe_group_id` a\n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `timeframe_group_id` | ID | **Required** | Identifies a timeframe or set of timeframes. |\n-|  `start_time` | Time | **Conditionally Required** |  Defines the beginning of a timeframe. The interval includes the start time.<br> Values greater than `24:00:00` are forbidden. An empty value in `start_time` is considered `00:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.end_time` is defined.<br> - **Forbidden** otherwise |\n-|  `end_time` | Time | **Conditionally Required** |  Defines the end of a timeframe. The interval does not include the end time.<br> Values greater than `24:00:00` are forbidden. An empty value in `end_time` is considered `24:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.start_time` is defined.<br> - **Forbidden** otherwise |\n+|  `start_time` | Local time | **Conditionally Required** |  Defines the beginning of a timeframe. The interval includes the start time.<br> Values greater than `24:00:00` are forbidden. An empty value in `start_time` is considered `00:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.end_time` is defined.<br> - **Forbidden** otherwise |\n+|  `end_time` | Local time | **Conditionally Required** |  Defines the end of a timeframe. The interval does not include the end time.<br> Values greater than `24:00:00` are forbidden. An empty value in `end_time` is considered `24:00:00`. <br><br> Conditionally Required:<br> - **Required** if `timeframes.start_time` is defined.<br> - **Forbidden** otherwise |\n | `service_id` | Foreign ID referencing `calendar.service_id` or `calendar_dates.service_id` | **Required** | Identifies a set of dates that a timeframe is in effect. |\n \n #### Timeframe Local Time Semantics\n - When evaluating a fare event\u2019s time against [timeframes.txt](#timeframestxt), the event time is computed in local time using the local timezone, as determined by the `stop_timezone`, if specified, of the stop or parent station for the fare event. If not specified, the feed\u2019s agency timezone should be used instead.",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"bdferris-v2",
      "id":26211219,
      "node_id":"MDQ6VXNlcjI2MjExMjE5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26211219?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/bdferris-v2",
      "html_url":"https:\/\/github.com\/bdferris-v2",
      "followers_url":"https:\/\/api.github.com\/users\/bdferris-v2\/followers",
      "following_url":"https:\/\/api.github.com\/users\/bdferris-v2\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/bdferris-v2\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/bdferris-v2\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/bdferris-v2\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/bdferris-v2\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/bdferris-v2\/repos",
      "events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Per the spec for `agency_timezone`, if multiple agencies are specified in the dataset, each must have the same agency_timezone.  So there should only ever be a single \"feed\"-level timezone either way.",
    "created_at":"2025-05-23T21:12:16Z",
    "updated_at":"2025-05-23T21:12:16Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105432168",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105432168"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105432168"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105432168\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":412.0,
    "original_line":412,
    "side":"RIGHT",
    "original_position":19,
    "position":19,
    "subject_type":"line",
    "in_reply_to_id":2082106402.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105452763",
    "pull_request_review_id":2865774097,
    "id":2105452763,
    "node_id":"PRRC_kwDOAlVrjc59fqjb",
    "diff_hunk":"@@ -559,7 +560,7 @@ To process the cost of a multi-leg journey:\n | `to_leg_group_id` | Foreign ID referencing `fare_leg_rules.leg_group_id` | Optional | Identifies a group of post-transfer fare leg rules.<br><br>If there are no matching `fare_transfer_rules.to_leg_group_id` values to the `leg_group_id` being filtered, empty `fare_transfer_rules.to_leg_group_id` will be matched by default.<br><br>An empty entry in `fare_transfer_rules.to_leg_group_id` corresponds to all leg groups defined under `fare_leg_rules.leg_group_id` excluding the ones listed under `fare_transfer_rules.to_leg_group_id` |\n | `transfer_count` | Non-zero integer | **Conditionally Forbidden** | Defines how many consecutive transfers the transfer rule may be applied to.<br><br>Valid options are:<br>`-1` - No limit.<br>`1` or more - Defines how many transfers the transfer rule may span.<br><br>If a sub-journey matches multiple records with different `transfer_count`s, then the rule with the minimum `transfer_count` that is greater than or equal to the current transfer count of the sub-journey is to be selected.<br><br>Conditionally Forbidden:<br>- **Forbidden** if `fare_transfer_rules.from_leg_group_id` does not equal `fare_transfer_rules.to_leg_group_id`.<br>- **Required** if `fare_transfer_rules.from_leg_group_id` equals `fare_transfer_rules.to_leg_group_id`. |\n | `duration_limit` | Positive integer | Optional | Defines the duration limit of the transfer.<br><br>Must be expressed in integer increments of seconds.<br><br>If there is no duration limit, `fare_transfer_rules.duration_limit` must be empty. |\n-| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the current leg and the arrival fare validation of the next leg.<br>`1` - Between the departure fare validation of the current leg and the departure fare validation of the next leg.<br>`2` - Between the arrival fare validation of the current leg and the departure fare validation of the next leg.<br>`3` - Between the arrival fare validation of the current leg and the arrival fare validation of the next leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |\n+| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the current leg and the arrival fare validation of the next leg.<br>`1` - Between the departure fare validation of the current leg and the departure fare validation of the next leg.<br>`2` - Between the arrival fare validation of the current leg and the departure fare validation of the next leg.<br>`3` - Between the arrival fare validation of the current leg and the arrival fare validation of the next leg.<br><br>When a transfer rule with the same `from_leg_group_id` and `to_leg_group_id` is matched multiple times consecutively within a multi-leg journey, the `duration_limit` specified by the rule should be measured starting from the first matched leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"bdferris-v2",
      "id":26211219,
      "node_id":"MDQ6VXNlcjI2MjExMjE5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26211219?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/bdferris-v2",
      "html_url":"https:\/\/github.com\/bdferris-v2",
      "followers_url":"https:\/\/api.github.com\/users\/bdferris-v2\/followers",
      "following_url":"https:\/\/api.github.com\/users\/bdferris-v2\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/bdferris-v2\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/bdferris-v2\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/bdferris-v2\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/bdferris-v2\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/bdferris-v2\/repos",
      "events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I'd go further and replace both \"current\"+\"next\" with \"first\"+\"last\".  \"First matched leg\" is ok but wondering if \"first leg in transfer sub-journey\" would clearer?  (Not sure if I feel too strongly on that point)",
    "created_at":"2025-05-23T21:34:56Z",
    "updated_at":"2025-05-23T21:34:56Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105452763",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105452763"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105452763"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105452763\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":563,
    "side":"RIGHT",
    "original_position":40,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2082102951.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105815713",
    "pull_request_review_id":2866296863,
    "id":2105815713,
    "node_id":"PRRC_kwDOAlVrjc59hDKh",
    "diff_hunk":"@@ -559,7 +560,7 @@ To process the cost of a multi-leg journey:\n | `to_leg_group_id` | Foreign ID referencing `fare_leg_rules.leg_group_id` | Optional | Identifies a group of post-transfer fare leg rules.<br><br>If there are no matching `fare_transfer_rules.to_leg_group_id` values to the `leg_group_id` being filtered, empty `fare_transfer_rules.to_leg_group_id` will be matched by default.<br><br>An empty entry in `fare_transfer_rules.to_leg_group_id` corresponds to all leg groups defined under `fare_leg_rules.leg_group_id` excluding the ones listed under `fare_transfer_rules.to_leg_group_id` |\n | `transfer_count` | Non-zero integer | **Conditionally Forbidden** | Defines how many consecutive transfers the transfer rule may be applied to.<br><br>Valid options are:<br>`-1` - No limit.<br>`1` or more - Defines how many transfers the transfer rule may span.<br><br>If a sub-journey matches multiple records with different `transfer_count`s, then the rule with the minimum `transfer_count` that is greater than or equal to the current transfer count of the sub-journey is to be selected.<br><br>Conditionally Forbidden:<br>- **Forbidden** if `fare_transfer_rules.from_leg_group_id` does not equal `fare_transfer_rules.to_leg_group_id`.<br>- **Required** if `fare_transfer_rules.from_leg_group_id` equals `fare_transfer_rules.to_leg_group_id`. |\n | `duration_limit` | Positive integer | Optional | Defines the duration limit of the transfer.<br><br>Must be expressed in integer increments of seconds.<br><br>If there is no duration limit, `fare_transfer_rules.duration_limit` must be empty. |\n-| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the current leg and the arrival fare validation of the next leg.<br>`1` - Between the departure fare validation of the current leg and the departure fare validation of the next leg.<br>`2` - Between the arrival fare validation of the current leg and the departure fare validation of the next leg.<br>`3` - Between the arrival fare validation of the current leg and the arrival fare validation of the next leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |\n+| `duration_limit_type` | Enum | **Conditionally Required** | Defines the relative start and end of `fare_transfer_rules.duration_limit`.<br><br>Valid options are:<br>`0` - Between the departure fare validation of the current leg and the arrival fare validation of the next leg.<br>`1` - Between the departure fare validation of the current leg and the departure fare validation of the next leg.<br>`2` - Between the arrival fare validation of the current leg and the departure fare validation of the next leg.<br>`3` - Between the arrival fare validation of the current leg and the arrival fare validation of the next leg.<br><br>When a transfer rule with the same `from_leg_group_id` and `to_leg_group_id` is matched multiple times consecutively within a multi-leg journey, the `duration_limit` specified by the rule should be measured starting from the first matched leg.<br><br>Conditionally Required:<br>- **Required** if `fare_transfer_rules.duration_limit` is defined.<br>- **Forbidden** if `fare_transfer_rules.duration_limit` is empty. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"9ff1c18656364d1969d48fd50683427b83109a08",
    "original_commit_id":"dacce377444ce03cdedc8edbbfb8944ad594be82",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I agree. For the duration, it only makes sense to measure time from the first to the last leg of the fare transfer. \"current\" and \"next\" are a bit confusing here.",
    "created_at":"2025-05-24T13:21:41Z",
    "updated_at":"2025-05-24T13:21:41Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105815713",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105815713"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/561#discussion_r2105815713"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/561"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2105815713\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":563,
    "side":"RIGHT",
    "original_position":40,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2082102951.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2114624501",
    "pull_request_review_id":2879406951,
    "id":2114624501,
    "node_id":"PRRC_kwDOAlVrjc5-Cpv1",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"antrim",
      "id":6495639,
      "node_id":"MDQ6VXNlcjY0OTU2Mzk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6495639?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/antrim",
      "html_url":"https:\/\/github.com\/antrim",
      "followers_url":"https:\/\/api.github.com\/users\/antrim\/followers",
      "following_url":"https:\/\/api.github.com\/users\/antrim\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/antrim\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/antrim\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/antrim\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/antrim\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/antrim\/repos",
      "events_url":"https:\/\/api.github.com\/users\/antrim\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/antrim\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Key stakeholders besides just transit providers, their vendors, and apps would qualify as Producers and Consumers:\r\n* Researchers and data analysts using GTFS are Consumers\r\n* And stakeholders such as DOTs that sponsor regional GTFS projects, aggregators, pilot projects, orgs that produce a subset of GTFS (e.g. Pathways, Fares, or Flex), etc. seem valid Producers\r\n* Consultants could also qualify as Consumers or Producers, depending on the work they are doing\r\n\r\nPrecedent is that Consumers and Producers cast nearly all of the votes on GTFS changes. How do we define an eligible General Contributor?",
    "created_at":"2025-05-29T19:35:38Z",
    "updated_at":"2025-05-29T19:35:39Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2114624501",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2114624501"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2114624501"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2114624501\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":36,
    "side":"RIGHT",
    "original_position":36,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2060818022.0
  }
]
[
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036227156",
    "pull_request_review_id":2754939117,
    "id":2036227156,
    "node_id":"PRRC_kwDOAlVrjc55XlxU",
    "diff_hunk":"@@ -190,6 +190,11 @@ message TripUpdate {\n     \/\/ To specify a completely certain prediction, set its uncertainty to 0.\n     optional int32 uncertainty = 3;\n \n+    \/\/ Scheduled time for a new or replacement trip.",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n    \/\/ Scheduled time for a NEW, REPLACEMENT, or DUPLICATED trip.\r\n```\r\nThis change makes it match behavior defined in reference.md",
    "created_at":"2025-04-09T22:34:36Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036227156",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036227156"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036227156"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036227156\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":193,
    "side":"RIGHT",
    "original_position":4,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036227359",
    "pull_request_review_id":2754939117,
    "id":2036227359,
    "node_id":"PRRC_kwDOAlVrjc55Xl0f",
    "diff_hunk":"@@ -190,6 +190,11 @@ message TripUpdate {\n     \/\/ To specify a completely certain prediction, set its uncertainty to 0.\n     optional int32 uncertainty = 3;\n \n+    \/\/ Scheduled time for a new or replacement trip.\n+    \/\/ In Unix time (i.e., number of seconds since January 1st 1970 00:00:00\n+    \/\/ UTC).",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n    \/\/ UTC).\r\n    \/\/ NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.\r\n```",
    "created_at":"2025-04-09T22:34:51Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036227359",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036227359"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036227359"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036227359\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":195.0,
    "original_line":195,
    "side":"RIGHT",
    "original_position":6,
    "position":6,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036230513",
    "pull_request_review_id":2754939117,
    "id":2036230513,
    "node_id":"PRRC_kwDOAlVrjc55Xmlx",
    "diff_hunk":"@@ -809,17 +844,18 @@ message TripDescriptor {\n     \/\/ A trip that existed in the schedule but was removed.\n     CANCELED = 3;\n \n-    \/\/ Should not be used - for backwards-compatibility only.\n-    REPLACEMENT = 5 [deprecated = true];\n+    \/\/ A trip that replaces an existing trip in the schedule.\n+    REPLACEMENT = 5;\n \n     \/\/ An extra trip that was added in addition to a running schedule, for example, to replace a broken vehicle or to\n     \/\/ respond to sudden passenger load. Used with TripUpdate.TripProperties.trip_id, TripUpdate.TripProperties.start_date,\n     \/\/ and TripUpdate.TripProperties.start_time to copy an existing trip from static GTFS but start at a different service\n     \/\/ date and\/or time. Duplicating a trip is allowed if the service related to the original trip in (CSV) GTFS\n     \/\/ (in calendar.txt or calendar_dates.txt) is operating within the next 30 days. The trip to be duplicated is\n     \/\/ identified via TripUpdate.TripDescriptor.trip_id. This enumeration does not modify the existing trip referenced by\n-    \/\/ TripUpdate.TripDescriptor.trip_id - if a producer wants to cancel the original trip, it must publish a separate\n-    \/\/ TripUpdate with the value of CANCELED or DELETED. Trips defined in GTFS frequencies.txt with exact_times that is\n+    \/\/ TripUpdate.TripDescriptor.trip_id - if a producer wants to replace the original trip, a value of `REPLACEMENT` should be used instead.",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"This new text looks ok, but why was the previous text  \"if a producer wants to cancel the original trip, it must publish a separate TripUpdate with the value of CANCELED or DELETED\" removed? It seems appropriate to keep this previous text and the new text.",
    "created_at":"2025-04-09T22:39:14Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036230513",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036230513"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036230513"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036230513\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":856,
    "side":"RIGHT",
    "original_position":96,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036233856",
    "pull_request_review_id":2754939117,
    "id":2036233856,
    "node_id":"PRRC_kwDOAlVrjc55XnaA",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED or UNSCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\r\n```\r\nThese changes to `stop_time_update` address all `trip.schedule_relationship` values except UNSCHEDULED. This proposed change would maintain functionality for UNSCHEDULED from before these changes.",
    "created_at":"2025-04-09T22:44:01Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036233856",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036233856"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036233856"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036233856\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":168,
    "side":"RIGHT",
    "original_position":13,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036234960",
    "pull_request_review_id":2754939117,
    "id":2036234960,
    "node_id":"PRRC_kwDOAlVrjc55XnrQ",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\nTiming information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for NEW, REPLACEMENT, or DUPLICATED trips.\r\n```\r\n\"added\" is being deprecated",
    "created_at":"2025-04-09T22:45:38Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036234960",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036234960"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036234960"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036234960\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":175,
    "side":"RIGHT",
    "original_position":21,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036235560",
    "pull_request_review_id":2754939117,
    "id":2036235560,
    "node_id":"PRRC_kwDOAlVrjc55Xn0o",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\r\n```",
    "created_at":"2025-04-09T22:46:36Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036235560",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036235560"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036235560"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036235560\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":187,
    "side":"RIGHT",
    "original_position":37,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036235779",
    "pull_request_review_id":2754939117,
    "id":2036235779,
    "node_id":"PRRC_kwDOAlVrjc55Xn4D",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\r\n```",
    "created_at":"2025-04-09T22:46:57Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036235779",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036235779"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036235779"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036235779\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":188,
    "side":"RIGHT",
    "original_position":38,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036236385",
    "pull_request_review_id":2754939117,
    "id":2036236385,
    "node_id":"PRRC_kwDOAlVrjc55XoBh",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"\"Conditionally forbidden\" needs to be added in the Term Definitions sections at the top of reference.md",
    "created_at":"2025-04-09T22:47:25Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036236385",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036236385"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036236385"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036236385\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":190.0,
    "original_line":189,
    "side":"RIGHT",
    "original_position":39,
    "position":47,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036267440",
    "pull_request_review_id":2754939117,
    "id":2036267440,
    "node_id":"PRRC_kwDOAlVrjc55Xvmw",
    "diff_hunk":"@@ -809,17 +844,18 @@ message TripDescriptor {\n     \/\/ A trip that existed in the schedule but was removed.\n     CANCELED = 3;\n \n-    \/\/ Should not be used - for backwards-compatibility only.\n-    REPLACEMENT = 5 [deprecated = true];\n+    \/\/ A trip that replaces an existing trip in the schedule.",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n    \/\/ A trip that replaces an existing trip in the schedule. REPLACEMENT is equivalent to using DELETED for the existing trip and NEW for the replacement trip.\r\n    \/\/ NOTE: This field is still experimental, and subject to change. It may be formally adopted in the future.\r\n```\r\nSince this is being undeprecated, I suggest marking it as experimental.",
    "created_at":"2025-04-09T23:23:42Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036267440",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036267440"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036267440"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036267440\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":849.0,
    "original_line":847,
    "side":"RIGHT",
    "original_position":85,
    "position":87,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036269868",
    "pull_request_review_id":2754939117,
    "id":2036269868,
    "node_id":"PRRC_kwDOAlVrjc55XwMs",
    "diff_hunk":"@@ -454,12 +475,14 @@ Note that if the trip_id is not known, then station sequence ids in TripUpdate a\n \n TripDescriptor.route_id cannot be used within an Alert EntitySelector to specify a route-wide alert that affects all trips for a route - use EntitySelector.route_id instead.\n \n+If `schedule_relationship` is `NEW`, `trip_id` must be set to a value not listed in the GTFS feed, and `route_id` must be set to a value listed in `routes.txt` in the GTFS static, to associate the trip to a route. `start_date` should be set, and `direction_id` may be set for the new trip.\n+\n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **trip_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | The trip_id from the GTFS feed that this selector refers to. For non frequency-based trips (trips not defined in GTFS frequencies.txt), this field is enough to uniquely identify the trip. For frequency-based trips defined in GTFS frequencies.txt, trip_id, start_time, and start_date are all required. For scheduled-based trips (trips not defined in GTFS frequencies.txt), trip_id can only be omitted if the trip can be uniquely identified by a combination of route_id, direction_id, start_time, and start_date, and all those fields are provided. When schedule_relationship is DUPLICATED within a TripUpdate, the trip_id identifies the trip from static GTFS to be duplicated. When schedule_relationship is DUPLICATED within a VehiclePosition, the trip_id identifies the new duplicate trip and must contain the value for the corresponding TripUpdate.TripProperties.trip_id. |\n-| **route_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | The route_id from the GTFS that this selector refers to. If trip_id is omitted, route_id, direction_id, start_time, and schedule_relationship=SCHEDULED must all be set to identify a trip instance. TripDescriptor.route_id should not be used within an Alert EntitySelector to specify a route-wide alert that affects all trips for a route - use EntitySelector.route_id instead. |\n+| **trip_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | The trip_id from the GTFS feed that this selector refers to. For non frequency-based trips (trips not defined in GTFS frequencies.txt), this field is enough to uniquely identify the trip. For frequency-based trips defined in GTFS frequencies.txt, trip_id, start_time, and start_date are all required. For scheduled-based trips (trips not defined in GTFS frequencies.txt), trip_id can only be omitted if the trip can be uniquely identified by a combination of route_id, direction_id, start_time, and start_date, and all those fields are provided. When schedule_relationship is NEW, it must be specified with a unique value not defined in the GTFS static. When schedule_relationship is DUPLICATED within a TripUpdate, the trip_id identifies the trip from static GTFS to be duplicated. When schedule_relationship is DUPLICATED within a VehiclePosition, the trip_id identifies the new duplicate trip and must contain the value for the corresponding TripUpdate.TripProperties.trip_id. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **trip_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | The trip_id from the GTFS feed that this selector refers to. For non frequency-based trips (trips not defined in GTFS frequencies.txt), this field is enough to uniquely identify the trip. For frequency-based trips defined in GTFS frequencies.txt, trip_id, start_time, and start_date are all required. For scheduled-based trips (trips not defined in GTFS frequencies.txt), trip_id can only be omitted if the trip can be uniquely identified by a combination of route_id, direction_id, start_time, and start_date, and all those fields are provided. When schedule_relationship is NEW, it must be specified with a unique value not defined in the GTFS static. When schedule_relationship is REPLACEMENT, the trip_id identifies the trip from static GTFS to be replaced. When schedule_relationship is DUPLICATED within a TripUpdate, the trip_id identifies the trip from static GTFS to be duplicated. When schedule_relationship is DUPLICATED within a VehiclePosition, the trip_id identifies the new duplicate trip and must contain the value for the corresponding TripUpdate.TripProperties.trip_id. |\r\n```\r\nClarify `trip_id` requirement for REPLACEMENT",
    "created_at":"2025-04-09T23:27:22Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036269868",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036269868"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036269868"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036269868\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":484,
    "side":"RIGHT",
    "original_position":127,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036282440",
    "pull_request_review_id":2754939117,
    "id":2036282440,
    "node_id":"PRRC_kwDOAlVrjc55XzRI",
    "diff_hunk":"@@ -215,7 +220,7 @@ The relation between this StopTime and the static schedule.\n |-------------|---------------|\n | **SCHEDULED** | The vehicle is proceeding in accordance with its static schedule of stops, although not necessarily according to the times of the schedule. This is the **default** behavior. At least one of arrival and departure must be provided. Frequency-based trips (GTFS frequencies.txt with exact_times = 0) should not have a SCHEDULED value and should use UNSCHEDULED instead. |\n | **SKIPPED** | The stop is skipped, i.e., the vehicle will not stop at this stop. Arrival and departure are optional. When set `SKIPPED` is not propagated to subsequent stops in the same trip (i.e., the vehicle will stop at subsequent stops in the trip unless those stops also have a `stop_time_update` with `schedule_relationship: SKIPPED`). Delay from a previous stop in the trip *does* propagate over the `SKIPPED` stop. In other words, if a `stop_time_update` with an `arrival` or `departure` prediction is not set for a stop after the `SKIPPED` stop, the prediction upstream of the `SKIPPED` stop will be propagated to the stop after the `SKIPPED` stop and subsequent stops in the trip until a `stop_time_update` for a subsequent stop is provided.  |\n-| **NO_DATA** | No data is given for this stop. It indicates that there is no realtime timing information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime timing information. When NO_DATA is set neither arrival nor departure should be supplied. |\n+| **NO_DATA** | No real-time data is given for this stop. It indicates that there is no realtime timing information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime timing information. When NO_DATA is set, arrival or departure must not be supplied, unless `TripDescriptor.schedule_relationship` is `NEW` or `REPLACEMENT`, in such case only the scheduled time, but not predictions, must be supplied. When `TripDescriptor.schedule_relationship` is `NEW` or `REPLACEMENT`, `arrival` and `departure` must still be given with scheduled times, as the StopTimeUpdate defines the stop list of the trip. In this case it indicates that the schedule is unrelated to the static GTFS, but real-time prediction is not available yet. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Just to confirm, the only scenario where scheduled times **must** be provided for a NEW or REPLACEMENT trip is when a stop has `schedule_relationship = NO_DATA`?",
    "created_at":"2025-04-09T23:42:54Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036282440",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036282440"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036282440"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036282440\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":224.0,
    "original_line":223,
    "side":"RIGHT",
    "original_position":72,
    "position":80,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036285333",
    "pull_request_review_id":2754939117,
    "id":2036285333,
    "node_id":"PRRC_kwDOAlVrjc55Xz-V",
    "diff_hunk":"@@ -468,17 +491,19 @@ TripDescriptor.route_id cannot be used within an Alert EntitySelector to specify\n \n ## _enum_ ScheduleRelationship\n \n-The relation between this trip and the static schedule. If a trip is done in accordance with temporary schedule, not reflected in GTFS, then it shouldn't be marked as SCHEDULED, but marked as ADDED.\n+The relation between this trip and the static schedule. If a new trip is done in accordance with temporary schedule, not reflected in GTFS, then it shouldn't be marked as SCHEDULED, but marked as NEW. If a trip is done in accordance with a modified schedule, not reflected in GTFS, then it shouldn't be marked as SCHEDULED, but marked as REPLACEMENT.\n \n **Values**\n \n | _**Value**_ | _**Comment**_ |\n |-------------|---------------|\n | **SCHEDULED** | Trip that is running in accordance with its GTFS schedule, or is close enough to the scheduled trip to be associated with it. |\n-| **ADDED** | An extra trip that was added in addition to a running schedule, for example, to replace a broken vehicle or to respond to sudden passenger load. *NOTE: Currently, behavior is unspecified for feeds that use this mode. There are discussions on the GTFS GitHub [(1)](https:\/\/github.com\/google\/transit\/issues\/106) [(2)](https:\/\/github.com\/google\/transit\/pull\/221) [(3)](https:\/\/github.com\/google\/transit\/pull\/219) around fully specifying or deprecating ADDED trips and the documentation will be updated when those discussions are finalized.* |\n+| **ADDED** | *NOTE: This value has been deprecated as the behavior was unspecified. Use **DUPLICATED** for an extra trip that is the same as a scheduled trip except the start date or time, or **NEW** for an extra trip that is unrelated to an existing trip.* |\n | **UNSCHEDULED** | A trip that is running with no schedule associated to it - this value is used to identify trips defined in GTFS frequencies.txt with exact_times = 0. It should not be used to describe trips not defined in GTFS frequencies.txt, or trips in GTFS frequencies.txt with exact_times = 1. Trips with `schedule_relationship: UNSCHEDULED` must also set all StopTimeUpdates `schedule_relationship: UNSCHEDULED`|\n | **CANCELED** | A trip that existed in the schedule but was removed. |\n+| **REPLACEMENT** | A trip that replaces an existing scheduled trip, for example, with a changed schedule or a diverted routing. The complete journey of the replacement trip must be specified via `StopTimeUpdate`s, and the original schedule from the GTFS static isn't used for the replaced instance.<br>`REPLACEMENT` can be used if the trip is operating on a revised schedule, but must not be used to communicate real-time schedule deviations (predictions) if the vehicle is aimed to follow the schedule listed in `stop_times.txt` the static GTFS. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **REPLACEMENT** | A trip that replaces an existing scheduled trip, for example, with a changed schedule or a diverted routing. The complete journey of the replacement trip must be specified via `StopTimeUpdate`s, and the original schedule from the GTFS static isn't used for the replaced instance.<br>`REPLACEMENT` can be used if the trip is operating on a revised schedule, but must not be used to communicate real-time schedule deviations (predictions) if the vehicle is aimed to follow the schedule listed in `stop_times.txt` the static GTFS.<br>REPLACEMENT is equivalent to using DELETED for the existing trip and NEW for the replacement trip.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |\r\n```\r\nSince this is being undeprecated, I suggest marking it as experimental.",
    "created_at":"2025-04-09T23:47:43Z",
    "updated_at":"2025-04-09T23:54:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036285333",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036285333"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2036285333"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2036285333\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":504,
    "side":"RIGHT",
    "original_position":148,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037132577",
    "pull_request_review_id":2756338321,
    "id":2037132577,
    "node_id":"PRRC_kwDOAlVrjc55bC0h",
    "diff_hunk":"@@ -809,17 +844,18 @@ message TripDescriptor {\n     \/\/ A trip that existed in the schedule but was removed.\n     CANCELED = 3;\n \n-    \/\/ Should not be used - for backwards-compatibility only.\n-    REPLACEMENT = 5 [deprecated = true];\n+    \/\/ A trip that replaces an existing trip in the schedule.",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"After some thoughts I have decided not to add the sentence of \"REPLACEMENT is equivalent to using DELETED for the existing trip and NEW for the replacement trip.\"\r\n\r\nDELETED then NEW requires the use of a different trip id but REPLACEMENT is specifically using the same trip id.",
    "created_at":"2025-04-10T11:27:45Z",
    "updated_at":"2025-04-10T11:27:45Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037132577",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037132577"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037132577"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037132577\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":849.0,
    "original_line":847,
    "side":"RIGHT",
    "original_position":85,
    "position":87,
    "subject_type":"line",
    "in_reply_to_id":2036267440.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037141403",
    "pull_request_review_id":2756353279,
    "id":2037141403,
    "node_id":"PRRC_kwDOAlVrjc55bE-b",
    "diff_hunk":"@@ -809,17 +844,18 @@ message TripDescriptor {\n     \/\/ A trip that existed in the schedule but was removed.\n     CANCELED = 3;\n \n-    \/\/ Should not be used - for backwards-compatibility only.\n-    REPLACEMENT = 5 [deprecated = true];\n+    \/\/ A trip that replaces an existing trip in the schedule.\n+    REPLACEMENT = 5;\n \n     \/\/ An extra trip that was added in addition to a running schedule, for example, to replace a broken vehicle or to\n     \/\/ respond to sudden passenger load. Used with TripUpdate.TripProperties.trip_id, TripUpdate.TripProperties.start_date,\n     \/\/ and TripUpdate.TripProperties.start_time to copy an existing trip from static GTFS but start at a different service\n     \/\/ date and\/or time. Duplicating a trip is allowed if the service related to the original trip in (CSV) GTFS\n     \/\/ (in calendar.txt or calendar_dates.txt) is operating within the next 30 days. The trip to be duplicated is\n     \/\/ identified via TripUpdate.TripDescriptor.trip_id. This enumeration does not modify the existing trip referenced by\n-    \/\/ TripUpdate.TripDescriptor.trip_id - if a producer wants to cancel the original trip, it must publish a separate\n-    \/\/ TripUpdate with the value of CANCELED or DELETED. Trips defined in GTFS frequencies.txt with exact_times that is\n+    \/\/ TripUpdate.TripDescriptor.trip_id - if a producer wants to replace the original trip, a value of `REPLACEMENT` should be used instead.",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I have just restored it. There should be no reason to remove the previous text.",
    "created_at":"2025-04-10T11:33:48Z",
    "updated_at":"2025-04-10T11:33:48Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037141403",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037141403"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037141403"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037141403\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":856,
    "side":"RIGHT",
    "original_position":96,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2036230513.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037146286",
    "pull_request_review_id":2756361056,
    "id":2037146286,
    "node_id":"PRRC_kwDOAlVrjc55bGKu",
    "diff_hunk":"@@ -468,17 +491,19 @@ TripDescriptor.route_id cannot be used within an Alert EntitySelector to specify\n \n ## _enum_ ScheduleRelationship\n \n-The relation between this trip and the static schedule. If a trip is done in accordance with temporary schedule, not reflected in GTFS, then it shouldn't be marked as SCHEDULED, but marked as ADDED.\n+The relation between this trip and the static schedule. If a new trip is done in accordance with temporary schedule, not reflected in GTFS, then it shouldn't be marked as SCHEDULED, but marked as NEW. If a trip is done in accordance with a modified schedule, not reflected in GTFS, then it shouldn't be marked as SCHEDULED, but marked as REPLACEMENT.\n \n **Values**\n \n | _**Value**_ | _**Comment**_ |\n |-------------|---------------|\n | **SCHEDULED** | Trip that is running in accordance with its GTFS schedule, or is close enough to the scheduled trip to be associated with it. |\n-| **ADDED** | An extra trip that was added in addition to a running schedule, for example, to replace a broken vehicle or to respond to sudden passenger load. *NOTE: Currently, behavior is unspecified for feeds that use this mode. There are discussions on the GTFS GitHub [(1)](https:\/\/github.com\/google\/transit\/issues\/106) [(2)](https:\/\/github.com\/google\/transit\/pull\/221) [(3)](https:\/\/github.com\/google\/transit\/pull\/219) around fully specifying or deprecating ADDED trips and the documentation will be updated when those discussions are finalized.* |\n+| **ADDED** | *NOTE: This value has been deprecated as the behavior was unspecified. Use **DUPLICATED** for an extra trip that is the same as a scheduled trip except the start date or time, or **NEW** for an extra trip that is unrelated to an existing trip.* |\n | **UNSCHEDULED** | A trip that is running with no schedule associated to it - this value is used to identify trips defined in GTFS frequencies.txt with exact_times = 0. It should not be used to describe trips not defined in GTFS frequencies.txt, or trips in GTFS frequencies.txt with exact_times = 1. Trips with `schedule_relationship: UNSCHEDULED` must also set all StopTimeUpdates `schedule_relationship: UNSCHEDULED`|\n | **CANCELED** | A trip that existed in the schedule but was removed. |\n+| **REPLACEMENT** | A trip that replaces an existing scheduled trip, for example, with a changed schedule or a diverted routing. The complete journey of the replacement trip must be specified via `StopTimeUpdate`s, and the original schedule from the GTFS static isn't used for the replaced instance.<br>`REPLACEMENT` can be used if the trip is operating on a revised schedule, but must not be used to communicate real-time schedule deviations (predictions) if the vehicle is aimed to follow the schedule listed in `stop_times.txt` the static GTFS. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"added the experimental sentence - however I have decided not to explicitly write as DELETED then NEW in the proposal as there is a subtle difference: REPLACEMENT keeps the trip id but DELETED then NEW requires the use of a new trip id. I mentioned it previously because OpenTripPlanner treats it as DELETED then NEW in its implementation.",
    "created_at":"2025-04-10T11:37:05Z",
    "updated_at":"2025-04-10T11:37:05Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037146286",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037146286"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037146286"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037146286\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":504,
    "side":"RIGHT",
    "original_position":148,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2036285333.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037148595",
    "pull_request_review_id":2756364971,
    "id":2037148595,
    "node_id":"PRRC_kwDOAlVrjc55bGuz",
    "diff_hunk":"@@ -215,7 +220,7 @@ The relation between this StopTime and the static schedule.\n |-------------|---------------|\n | **SCHEDULED** | The vehicle is proceeding in accordance with its static schedule of stops, although not necessarily according to the times of the schedule. This is the **default** behavior. At least one of arrival and departure must be provided. Frequency-based trips (GTFS frequencies.txt with exact_times = 0) should not have a SCHEDULED value and should use UNSCHEDULED instead. |\n | **SKIPPED** | The stop is skipped, i.e., the vehicle will not stop at this stop. Arrival and departure are optional. When set `SKIPPED` is not propagated to subsequent stops in the same trip (i.e., the vehicle will stop at subsequent stops in the trip unless those stops also have a `stop_time_update` with `schedule_relationship: SKIPPED`). Delay from a previous stop in the trip *does* propagate over the `SKIPPED` stop. In other words, if a `stop_time_update` with an `arrival` or `departure` prediction is not set for a stop after the `SKIPPED` stop, the prediction upstream of the `SKIPPED` stop will be propagated to the stop after the `SKIPPED` stop and subsequent stops in the trip until a `stop_time_update` for a subsequent stop is provided.  |\n-| **NO_DATA** | No data is given for this stop. It indicates that there is no realtime timing information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime timing information. When NO_DATA is set neither arrival nor departure should be supplied. |\n+| **NO_DATA** | No real-time data is given for this stop. It indicates that there is no realtime timing information available. When set NO_DATA is propagated through subsequent stops so this is the recommended way of specifying from which stop you do not have realtime timing information. When NO_DATA is set, arrival or departure must not be supplied, unless `TripDescriptor.schedule_relationship` is `NEW` or `REPLACEMENT`, in such case only the scheduled time, but not predictions, must be supplied. When `TripDescriptor.schedule_relationship` is `NEW` or `REPLACEMENT`, `arrival` and `departure` must still be given with scheduled times, as the StopTimeUpdate defines the stop list of the trip. In this case it indicates that the schedule is unrelated to the static GTFS, but real-time prediction is not available yet. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Yes. Otherwise as real-time information is available, the timing of the trip is known.",
    "created_at":"2025-04-10T11:38:42Z",
    "updated_at":"2025-04-10T11:38:42Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037148595",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037148595"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037148595"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037148595\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":224.0,
    "original_line":223,
    "side":"RIGHT",
    "original_position":72,
    "position":80,
    "subject_type":"line",
    "in_reply_to_id":2036282440.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037156154",
    "pull_request_review_id":2756376662,
    "id":2037156154,
    "node_id":"PRRC_kwDOAlVrjc55bIk6",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"It is already there",
    "created_at":"2025-04-10T11:43:00Z",
    "updated_at":"2025-04-10T11:43:01Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037156154",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037156154"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2037156154"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2037156154\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":190.0,
    "original_line":189,
    "side":"RIGHT",
    "original_position":39,
    "position":47,
    "subject_type":"line",
    "in_reply_to_id":2036236385.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2038224378",
    "pull_request_review_id":2758221151,
    "id":2038224378,
    "node_id":"PRRC_kwDOAlVrjc55fNX6",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"8aea1c8b4a75734742a158b03cee2a158e7ebe58",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I'm not seeing it. Maybe you're looking at the [GTFS static\/schedule reference](https:\/\/github.com\/google\/transit\/blob\/master\/gtfs\/spec\/en\/reference.md)? It is there.",
    "created_at":"2025-04-10T20:00:08Z",
    "updated_at":"2025-04-10T20:00:08Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2038224378",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2038224378"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2038224378"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2038224378\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":190.0,
    "original_line":189,
    "side":"RIGHT",
    "original_position":39,
    "position":47,
    "subject_type":"line",
    "in_reply_to_id":2036236385.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2039989257",
    "pull_request_review_id":2761061117,
    "id":2039989257,
    "node_id":"PRRC_kwDOAlVrjc55l8QJ",
    "diff_hunk":"@@ -819,7 +856,10 @@ message TripDescriptor {\n     \/\/ (in calendar.txt or calendar_dates.txt) is operating within the next 30 days. The trip to be duplicated is\n     \/\/ identified via TripUpdate.TripDescriptor.trip_id. This enumeration does not modify the existing trip referenced by\n     \/\/ TripUpdate.TripDescriptor.trip_id - if a producer wants to cancel the original trip, it must publish a separate\n-    \/\/ TripUpdate with the value of CANCELED or DELETED. Trips defined in GTFS frequencies.txt with exact_times that is\n+    \/\/ TripUpdate with the value of CANCELED or DELETED. if a producer wants to replace the original trip, a value of ",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"81c4d03b17bebab7171b5c9f8d5d81b125a699f6",
    "user":{
      "login":"bdferris-v2",
      "id":26211219,
      "node_id":"MDQ6VXNlcjI2MjExMjE5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26211219?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/bdferris-v2",
      "html_url":"https:\/\/github.com\/bdferris-v2",
      "followers_url":"https:\/\/api.github.com\/users\/bdferris-v2\/followers",
      "following_url":"https:\/\/api.github.com\/users\/bdferris-v2\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/bdferris-v2\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/bdferris-v2\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/bdferris-v2\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/bdferris-v2\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/bdferris-v2\/repos",
      "events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"nit: Capitalize \"if a producer\"",
    "created_at":"2025-04-11T17:26:16Z",
    "updated_at":"2025-04-11T17:26:16Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2039989257",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2039989257"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2039989257"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2039989257\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":859,
    "side":"RIGHT",
    "original_position":97,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2040394976",
    "pull_request_review_id":2743753511,
    "id":2040394976,
    "node_id":"PRRC_kwDOAlVrjc55nfTg",
    "diff_hunk":"@@ -190,6 +190,12 @@ message TripUpdate {\n     \/\/ To specify a completely certain prediction, set its uncertainty to 0.\n     optional int32 uncertainty = 3;\n \n+    \/\/ Scheduled time for a NEW, REPLACEMENT, or DUPLICATED trip.",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"81c4d03b17bebab7171b5c9f8d5d81b125a699f6",
    "user":{
      "login":"jfabi",
      "id":3793006,
      "node_id":"MDQ6VXNlcjM3OTMwMDY=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/3793006?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/jfabi",
      "html_url":"https:\/\/github.com\/jfabi",
      "followers_url":"https:\/\/api.github.com\/users\/jfabi\/followers",
      "following_url":"https:\/\/api.github.com\/users\/jfabi\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/jfabi\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/jfabi\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/jfabi\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/jfabi\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/jfabi\/repos",
      "events_url":"https:\/\/api.github.com\/users\/jfabi\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/jfabi\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"**suggestion**: This is covered in the\u00a0`reference.md`, but it may be good to be explicit here that this field is forbidden for other trip relationships.",
    "created_at":"2025-04-11T23:07:37Z",
    "updated_at":"2025-04-11T23:17:42Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2040394976",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2040394976"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2040394976"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2040394976\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":193.0,
    "original_line":193,
    "side":"RIGHT",
    "original_position":4,
    "position":4,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060818022",
    "pull_request_review_id":2795170307,
    "id":2060818022,
    "node_id":"PRRC_kwDOAlVrjc561ZZm",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"antrim",
      "id":6495639,
      "node_id":"MDQ6VXNlcjY0OTU2Mzk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6495639?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/antrim",
      "html_url":"https:\/\/github.com\/antrim",
      "followers_url":"https:\/\/api.github.com\/users\/antrim\/followers",
      "following_url":"https:\/\/api.github.com\/users\/antrim\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/antrim\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/antrim\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/antrim\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/antrim\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/antrim\/repos",
      "events_url":"https:\/\/api.github.com\/users\/antrim\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/antrim\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I believe that GTFS change process currently allows anyone to vote, but the norm has been that only Producers and Consumers vote. Please correct me if this isn't exactly right.\r\n\r\nQuestions about \u201cGeneral Contributor\u201d role:\r\n\r\n- What organizations or individuals do we expect to be \u201cGeneral Contributors\u201d?\r\n- What value do we expect their votes to add, since they can already follow along and participate in discussions? \r\n- Is there any qualifier for a General Contributor\u2019s participation, similar to how a Producer must share GTFS data or Consumer must provide a link to an application? i.e. description of interests or qualifications or GTFS community participation requirement? It seems like anyone might claim the role of a General Contributor. \r\n\r\nThe benefits of explicitly enabling General Contributor votes are not clear to me yet, and I\u2019m not sure they outweigh the risks.",
    "created_at":"2025-04-25T20:02:33Z",
    "updated_at":"2025-04-25T20:37:50Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060818022",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060818022"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060818022"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060818022\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":36,
    "side":"RIGHT",
    "original_position":36,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060824285",
    "pull_request_review_id":2795170307,
    "id":2060824285,
    "node_id":"PRRC_kwDOAlVrjc561a7d",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.\n+\n+## Maintainer\n+\n+The Maintainer supports and facilitates the specification [Change Process](change-process.md), and their role as an impartial facilitator is to guide the community toward making consensus-driven decisions. MobilityData currently serves as the Maintainer of GTFS. \n+\n+**Responsibilities**:",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"antrim",
      "id":6495639,
      "node_id":"MDQ6VXNlcjY0OTU2Mzk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6495639?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/antrim",
      "html_url":"https:\/\/github.com\/antrim",
      "followers_url":"https:\/\/api.github.com\/users\/antrim\/followers",
      "following_url":"https:\/\/api.github.com\/users\/antrim\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/antrim\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/antrim\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/antrim\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/antrim\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/antrim\/repos",
      "events_url":"https:\/\/api.github.com\/users\/antrim\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/antrim\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Should the Maintainer role also include some of the following?\r\n\r\n- The Maintainer may solicit and develop use cases to facilitate community collaboration specification development\r\n- The Maintainer may develop draft Specification documents for consideration by the community (Contributors)?",
    "created_at":"2025-04-25T20:09:28Z",
    "updated_at":"2025-04-25T20:37:50Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060824285",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060824285"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060824285"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060824285\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":42.0,
    "original_line":42,
    "side":"RIGHT",
    "original_position":42,
    "position":42,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060827234",
    "pull_request_review_id":2795170307,
    "id":2060827234,
    "node_id":"PRRC_kwDOAlVrjc561bpi",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.\n+\n+## Maintainer\n+\n+The Maintainer supports and facilitates the specification [Change Process](change-process.md), and their role as an impartial facilitator is to guide the community toward making consensus-driven decisions. MobilityData currently serves as the Maintainer of GTFS. \n+\n+**Responsibilities**:",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"antrim",
      "id":6495639,
      "node_id":"MDQ6VXNlcjY0OTU2Mzk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6495639?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/antrim",
      "html_url":"https:\/\/github.com\/antrim",
      "followers_url":"https:\/\/api.github.com\/users\/antrim\/followers",
      "following_url":"https:\/\/api.github.com\/users\/antrim\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/antrim\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/antrim\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/antrim\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/antrim\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/antrim\/repos",
      "events_url":"https:\/\/api.github.com\/users\/antrim\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/antrim\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"This may also be an appropriate segue to discuss MobilityData governance. How does MobilityData decide which initiatives in which to invest staff time? MobilityData board candidates are screened by a committee. Who is on the committee? How is this determined? According to what criteria?",
    "created_at":"2025-04-25T20:12:31Z",
    "updated_at":"2025-04-25T20:37:50Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060827234",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060827234"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060827234"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060827234\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":42.0,
    "original_line":42,
    "side":"RIGHT",
    "original_position":42,
    "position":42,
    "subject_type":"line",
    "in_reply_to_id":2060824285.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060830729",
    "pull_request_review_id":2795170307,
    "id":2060830729,
    "node_id":"PRRC_kwDOAlVrjc561cgJ",
    "diff_hunk":"@@ -0,0 +1,383 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* The community votes to confirm consensus before testing.\n+* [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.    \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.\n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. A \"single change\" is a self-contained modification with a focused scope, addressing one concept, feature, or rule without bundling unrelated updates. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period length based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. Each of these contributors can only be considered either a Consumer or Producer even if they are able to represent both roles. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.) <br>- A contributor votes Against the proposal without including actionable feedback.  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes and provide commentary in the Pull Request comment section.\n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment. For the Producer, this means a public GTFS feed; for the Consumer, this means a public-facing, production version of an application.\n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 2 contributors with at least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. Each of these contributors can only be considered either a Consumer or Producer even if they are able to represent both roles. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"antrim",
      "id":6495639,
      "node_id":"MDQ6VXNlcjY0OTU2Mzk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6495639?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/antrim",
      "html_url":"https:\/\/github.com\/antrim",
      "followers_url":"https:\/\/api.github.com\/users\/antrim\/followers",
      "following_url":"https:\/\/api.github.com\/users\/antrim\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/antrim\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/antrim\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/antrim\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/antrim\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/antrim\/repos",
      "events_url":"https:\/\/api.github.com\/users\/antrim\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/antrim\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"At least 2 Producer and 2 Consumer +1 votes are required for adoption. There is no statement that any of these votes should be from the Producer(s) or Consumer(s) that undertook testing. I\u2019m sure it is assumed that parties that initiated testing would usually vote in the adoption step. Should there be any clarifying language?",
    "created_at":"2025-04-25T20:15:24Z",
    "updated_at":"2025-04-25T20:37:50Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060830729",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060830729"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060830729"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060830729\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":355,
    "side":"RIGHT",
    "original_position":355,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060848513",
    "pull_request_review_id":2795170307,
    "id":2060848513,
    "node_id":"PRRC_kwDOAlVrjc561g2B",
    "diff_hunk":"@@ -0,0 +1,383 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* The community votes to confirm consensus before testing.\n+* [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.    \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.\n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"antrim",
      "id":6495639,
      "node_id":"MDQ6VXNlcjY0OTU2Mzk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/6495639?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/antrim",
      "html_url":"https:\/\/github.com\/antrim",
      "followers_url":"https:\/\/api.github.com\/users\/antrim\/followers",
      "following_url":"https:\/\/api.github.com\/users\/antrim\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/antrim\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/antrim\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/antrim\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/antrim\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/antrim\/repos",
      "events_url":"https:\/\/api.github.com\/users\/antrim\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/antrim\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"What about providing a template or guide similar to PULL_REQUEST_TEMPLATE.md? This is a really useful framework.\r\nhttps:\/\/github.com\/google\/transit\/blob\/master\/.github\/ISSUE_TEMPLATE\/spec_change.yml",
    "created_at":"2025-04-25T20:31:05Z",
    "updated_at":"2025-04-25T20:37:50Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060848513",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060848513"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2060848513"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2060848513\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":90.0,
    "original_line":90,
    "side":"RIGHT",
    "original_position":90,
    "position":90,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064049929",
    "pull_request_review_id":2799944539,
    "id":2064049929,
    "node_id":"PRRC_kwDOAlVrjc57BucJ",
    "diff_hunk":"@@ -1141,8 +1140,9 @@ message TripModifications {\n   message SelectedTrips {\n     \/\/ A list of trips affected with this replacement that all have the same new `shape_id`.\n     repeated string trip_ids = 1;\n-    \/\/ The ID of the new shape for the modified trips in this SelectedTrips.\n-    \/\/ May refer to a new shape added using a GTFS-RT Shape message, or to an existing shape defined in the GTFS-Static feed\u2019s shapes.txt.\n+    \/\/ The ID of the new shape for the modified trips in this SelectedTrips. \n+    \/\/ May refer to a new shape added using a `Shape` message in the same gtfs-rt feed, or to an existing shape defined in the GTFS-Static feed\u2019s shapes.txt. ",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"f9ec34b575506f8222c07950c7b42c47ed85611f",
    "original_commit_id":"0ab5d15553691fa9b4279f94c93d05aa4e1d0882",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n    \/\/ May refer to a new shape added using a `Shape` message in the same GTFS-RT feed, or to an existing shape defined in the GTFS-Static feed\u2019s shapes.txt. \r\n```",
    "created_at":"2025-04-28T16:27:35Z",
    "updated_at":"2025-04-28T16:27:35Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064049929",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064049929"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064049929"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064049929\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":1144,
    "side":"RIGHT",
    "original_position":36,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064050431",
    "pull_request_review_id":2799945227,
    "id":2064050431,
    "node_id":"PRRC_kwDOAlVrjc57Buj_",
    "diff_hunk":"@@ -1200,7 +1200,8 @@ message ReplacementStop {\n   \/\/ This value MUST be monotonically increasing and may only be a negative number if the first stop of the original trip is the reference stop.\n   optional int32 travel_time_to_stop = 1;\n \n-  \/\/ The replacement stop ID which will now be visited by the trip. May refer to a new stop added using a GTFS-RT Stop message, or to an existing stop defined in the GTFS-Static feed\u2019s stops.txt. The stop MUST have location_type=0 (routable stops).\n+  \/\/ The replacement stop ID which will now be visited by the trip. May refer to a new stop added using a GTFS-RT `Stop` message in the same gtfs-rt feed, or to an existing stop defined in the (CSV) GTFS feed\u2019s `stops.txt`.  ",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"f9ec34b575506f8222c07950c7b42c47ed85611f",
    "original_commit_id":"0ab5d15553691fa9b4279f94c93d05aa4e1d0882",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n  \/\/ The replacement stop ID which will now be visited by the trip. May refer to a new stop added using a GTFS-RT `Stop` message in the same GTFS-RT feed, or to an existing stop defined in the (CSV) GTFS feed\u2019s `stops.txt`.\r\n```",
    "created_at":"2025-04-28T16:27:53Z",
    "updated_at":"2025-04-28T16:30:27Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064050431",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064050431"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064050431"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064050431\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":1203,
    "side":"RIGHT",
    "original_position":46,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064052292",
    "pull_request_review_id":2799948257,
    "id":2064052292,
    "node_id":"PRRC_kwDOAlVrjc57BvBE",
    "diff_hunk":"@@ -244,7 +244,7 @@ Defines updated properties of the trip\n | **trip_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One |  Defines the identifier of a new trip that is a duplicate of an existing trip defined in (CSV) GTFS trips.txt but will start at a different service date and\/or time (defined using `TripProperties.start_date` and `TripProperties.start_time`). See definition of `trips.trip_id` in (CSV) GTFS. Its value must be different than the ones used in the (CSV) GTFS. This field is required if `schedule_relationship` is `DUPLICATED`, otherwise this field must not be populated and will be ignored by consumers. <br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |\n | **start_date** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Service date on which the duplicated trip will be run. Must be provided in YYYYMMDD format. This field is required if `schedule_relationship` is `DUPLICATED`, otherwise this field must not be populated and will be ignored by consumers. <br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |\n | **start_time** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Defines the departure start time of the trip when it\u2019s duplicated. See definition of `stop_times.departure_time` in (CSV) GTFS. Scheduled arrival and departure times for the duplicated trip are calculated based on the offset between the original trip `departure_time` and this field. For example, if a GTFS trip has stop A with a `departure_time` of `10:00:00` and stop B with `departure_time` of `10:01:00`, and this field is populated with the value of `10:30:00`, stop B on the duplicated trip will have a scheduled `departure_time` of `10:31:00`. Real-time prediction `delay` values are applied to this calculated schedule time to determine the predicted time. For example, if a departure `delay` of `30` is provided for stop B, then the predicted departure time is `10:31:30`. Real-time prediction `time` values do not have any offset applied to them and indicate the predicted time as provided.  For example, if a departure `time` representing 10:31:30 is provided for stop B, then the predicted departure time is `10:31:30`.This field is required if `schedule_relationship` is `DUPLICATED`, otherwise this field must not be populated and will be ignored by consumers. <br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |\n-| **shape_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | Specifies the shape of the vehicle travel path for this trip when it differs from the original. Refers to a shape defined in the (CSV) GTFS or a new shape entity in a real-time feed. See definition of `trips.shape_id` in (CSV) GTFS. <br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |\n+| **shape_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | Specifies the identifier of the shape of the vehicle travel path when the trip shape differs from the shape specified in (CSV) GTFS or to specify it in real-time when it's not provided by (CSV) GTFS, such as a vehicle that takes differing paths based on rider demand. See definition of `trips.shape_id` in (CSV) GTFS. <br>If a shape is neither defined in (CSV) GTFS nor in real-time, the shape is considered unknown. This field can refer to a shape defined in the (CSV) GTFS in shapes.txt or a `Shape` in the same (protobuf) real-time feed. The order of stops (stop sequences) for this trip must remain the same as (CSV) GTFS. If it refers to a `Shape` entity in the same real-time feed, the value of this field should be the one of the `shape_id` inside the entity, and _not_ the `id` of `FeedEntity`.<br>Stops that are a part of the original trip but will no longer be made, such as when a detour occurs, should be marked as schedule_relationship=SKIPPED or more details can be provided via a `TripModifications` message.  <br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"f9ec34b575506f8222c07950c7b42c47ed85611f",
    "original_commit_id":"0ab5d15553691fa9b4279f94c93d05aa4e1d0882",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **shape_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | Specifies the identifier of the shape of the vehicle travel path when the trip shape differs from the shape specified in (CSV) GTFS or to specify it in real-time when it's not provided by (CSV) GTFS, such as a vehicle that takes differing paths based on rider demand. See definition of `trips.shape_id` in (CSV) GTFS. <br>If a shape is neither defined in (CSV) GTFS nor in real-time, the shape is considered unknown. This field can refer to a shape defined in the (CSV) GTFS in shapes.txt or a `Shape` in the same (protobuf) real-time feed. The order of stops (stop sequences) for this trip must remain the same as (CSV) GTFS. If it refers to a `Shape` entity in the same real-time feed, the value of this field should be the one of the `shape_id` inside the entity, and _not_ the `id` of `FeedEntity`.<br>Stops that are a part of the original trip but will no longer be made, such as when a detour occurs, should be marked as schedule_relationship=SKIPPED or more details can be provided via a `TripModifications` message.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future. |\r\n```",
    "created_at":"2025-04-28T16:29:11Z",
    "updated_at":"2025-04-28T16:29:11Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064052292",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064052292"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064052292"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064052292\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":247,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064053115",
    "pull_request_review_id":2799949561,
    "id":2064053115,
    "node_id":"PRRC_kwDOAlVrjc57BvN7",
    "diff_hunk":"@@ -691,7 +691,7 @@ List of selected trips with an associated shape.\n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip_ids** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Many | One | A list of trip_id from the original (CSV) GTFS that are affected by the containing replacement. Need to contain at least one trip_id.  |\n-| **shape_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Required | One | The ID of the new shape for the modified trips in this SelectedTrips. May refer to a new shape added using a GTFS-RT Shape message, or to an existing shape defined in the GTFS-Static feed\u2019s shapes.txt. |\n+| **shape_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Required | One | The ID of the new shape for the modified trips in this SelectedTrips. May refer to a new shape added using a `Shape` message in the same gtfs-rt feed, or to an existing shape defined in the GTFS-Static feed\u2019s shapes.txt. If it refers to a `Shape` entity in the real-time feed, the value of this field should be the one of the `shape_id` inside the entity, and _not_ the `id` of `FeedEntity`. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"f9ec34b575506f8222c07950c7b42c47ed85611f",
    "original_commit_id":"0ab5d15553691fa9b4279f94c93d05aa4e1d0882",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **shape_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Required | One | The ID of the new shape for the modified trips in this SelectedTrips. May refer to a new shape added using a `Shape` message in the same GTFS-RT feed, or to an existing shape defined in the GTFS-Static feed\u2019s shapes.txt. If it refers to a `Shape` entity in the real-time feed, the value of this field should be the one of the `shape_id` inside the entity, and _not_ the `id` of `FeedEntity`. |\r\n```",
    "created_at":"2025-04-28T16:29:44Z",
    "updated_at":"2025-04-28T16:29:44Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064053115",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064053115"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064053115"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064053115\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":694,
    "side":"RIGHT",
    "original_position":23,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064054033",
    "pull_request_review_id":2799950820,
    "id":2064054033,
    "node_id":"PRRC_kwDOAlVrjc57BvcR",
    "diff_hunk":"@@ -707,5 +707,5 @@ _If a modification affects the first stop of the trip, that stop also serves as\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Required | One | The replacement stop ID which will now be visited by the trip. May refer to a new stop added using a GTFS-RT `Stop` message, or to an existing stop defined in the (CSV) GTFS feed\u2019s `stops.txt`. The stop MUST have `location_type=0` (routable stops). |\n+| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Required | One | The replacement stop ID which will now be visited by the trip. May refer to a new stop added using a GTFS-RT `Stop` message in the same gtfs-rt feed, or to an existing stop defined in the (CSV) GTFS feed\u2019s `stops.txt`.  If it refers to a `Shape` entity in the real-time feed, the value of this field should be the one of the `stop_id` inside the entity, and _not_ the `id` of `FeedEntity`. The stop MUST have `location_type=0` (routable stops). |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"f9ec34b575506f8222c07950c7b42c47ed85611f",
    "original_commit_id":"0ab5d15553691fa9b4279f94c93d05aa4e1d0882",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Required | One | The replacement stop ID which will now be visited by the trip. May refer to a new stop added using a GTFS-RT `Stop` message in the same GTFS-RT feed, or to an existing stop defined in the (CSV) GTFS feed\u2019s `stops.txt`. If it refers to a `Shape` entity in the real-time feed, the value of this field should be the one of the `stop_id` inside the entity, and _not_ the `id` of `FeedEntity`. The stop MUST have `location_type=0` (routable stops). |\r\n```",
    "created_at":"2025-04-28T16:30:09Z",
    "updated_at":"2025-04-28T16:30:10Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064054033",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064054033"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/542#discussion_r2064054033"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/542"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064054033\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":710,
    "side":"RIGHT",
    "original_position":32,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064405306",
    "pull_request_review_id":2800515113,
    "id":2064405306,
    "node_id":"PRRC_kwDOAlVrjc57DFM6",
    "diff_hunk":"@@ -0,0 +1,383 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* The community votes to confirm consensus before testing.\n+* [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.    \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.\n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"That's actually already included in the proposal and yes it will be really useful!\r\n> Introduced Pull Request Template (https:\/\/github.com\/google\/transit\/issues\/543)\r\n\r\nUnfortunately, GitHub formats issue and pull request templates differently. Issue templates appear as structured forms, while pull request templates are simply inserted into the body text. So they don't display in the same way.\r\n\r\n[Here](https:\/\/github.com\/google\/transit\/tree\/master\/.github\/ISSUE_TEMPLATE) are the existing issue templates used in the repo.",
    "created_at":"2025-04-28T19:43:28Z",
    "updated_at":"2025-04-28T19:43:28Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064405306",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064405306"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064405306"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064405306\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":90.0,
    "original_line":90,
    "side":"RIGHT",
    "original_position":90,
    "position":90,
    "subject_type":"line",
    "in_reply_to_id":2060848513.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064412263",
    "pull_request_review_id":2800524255,
    "id":2064412263,
    "node_id":"PRRC_kwDOAlVrjc57DG5n",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Yes, the current process allows anyone to vote, and there is considerable support in the community for maintaining that openness. In fact, there are several examples of contributors who may not fit the traditional definitions of producers or consumers but are knowledgeable about GTFS and have meaningfully participated in votes \u2014 such as in the [GTFS-Flex](https:\/\/github.com\/google\/transit\/pull\/433#issuecomment-2007385323) vote. There's also a strong case for including data analysts, entrepreneurs, consultants, and researchers who are experienced with GTFS but may not currently maintain a public feed or app.\r\n\r\nThe new process seeks to formalize the criteria for those who qualify as a producer or consumer, while still allowing others to participate. It gives greater weight to producer and consumer votes, helping to reduce risks compared to the current system where roles are not clearly defined.\r\n\r\nAs mentioned in the opening post, we propose trying this framework for six months. If we find that stricter qualifications are needed, we can make adjustments at that time. There is a balance to strike \u2014 we want to minimize the risk of uninformed disruption while keeping the process as open and low-barrier as possible. We believe the proposed two-stage voting process (unanimous consensus before testing, and 80% approval for adoption) further mitigates risks for early adopters.",
    "created_at":"2025-04-28T19:46:18Z",
    "updated_at":"2025-04-28T19:46:18Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064412263",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064412263"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064412263"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064412263\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":36,
    "side":"RIGHT",
    "original_position":36,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2060818022.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064471027",
    "pull_request_review_id":2800606535,
    "id":2064471027,
    "node_id":"PRRC_kwDOAlVrjc57DVPz",
    "diff_hunk":"@@ -0,0 +1,383 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* The community votes to confirm consensus before testing.\n+* [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal. \n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.    \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.\n+* The [Contributors](roles.md\/#contributors) and the [Maintainer](roles.md\/#maintainer) review the proposed changes.   \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. A \"single change\" is a self-contained modification with a focused scope, addressing one concept, feature, or rule without bundling unrelated updates. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period length based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. Each of these contributors can only be considered either a Consumer or Producer even if they are able to represent both roles. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.) <br>- A contributor votes Against the proposal without including actionable feedback.  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes and provide commentary in the Pull Request comment section.\n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment. For the Producer, this means a public GTFS feed; for the Consumer, this means a public-facing, production version of an application.\n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 2 contributors with at least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. Each of these contributors can only be considered either a Consumer or Producer even if they are able to represent both roles. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Thanks for flagging this! We agree that there might be some lack of clarity on this point. Our intent is to allow first adopters to support the proposal they tested by voting, provided they are not acting as the advocate for the proposal.\r\n\r\nTo address this, [we have updated the text](https:\/\/github.com\/MobilityData\/transit\/blob\/69b7efae4505cd9c571b000cf9acc5669abcbcc3\/gtfs\/Governance\/change-process.md?plain=1#L267) in both voting requirements to expand the \"Participant Composition\" section and clearly state that first adopters can vote and count toward the minimum Producer and Consumer votes, as long as they are not serving as the proposal's advocate.",
    "created_at":"2025-04-28T20:12:23Z",
    "updated_at":"2025-04-28T20:14:25Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064471027",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064471027"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064471027"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064471027\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":355,
    "side":"RIGHT",
    "original_position":355,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2060830729.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064477734",
    "pull_request_review_id":2800616896,
    "id":2064477734,
    "node_id":"PRRC_kwDOAlVrjc57DW4m",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.\n+\n+## Maintainer\n+\n+The Maintainer supports and facilitates the specification [Change Process](change-process.md), and their role as an impartial facilitator is to guide the community toward making consensus-driven decisions. MobilityData currently serves as the Maintainer of GTFS. \n+\n+**Responsibilities**:",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Thanks, Aaron. Regarding your first comment, it's important to note that every proposal is different and may have unique needs, which is why we see this as an initial step towards more explicit governance that can help lay the groundwork for more established processes, such as creating a proposal document or forming a working group, when needed.\r\n\r\nWe believe the tasks you suggest are already covered under the Maintainer responsibilities section a few lines below. There, we note that the Maintainer is responsible for providing \"constructive feedback and recommendations to help refine proposals\" and for acting \"as the Advocate for proposals.\"\r\n\r\nThat said, we are open to explicitly adding these activities to the Maintainer role if there is strong support from multiple Contributors. This could also be addressed during the planned review 6 months after implementation. For now, we believe that activities like soliciting use cases and developing draft specification documents are already encompassed within the responsibilities currently listed.",
    "created_at":"2025-04-28T20:15:36Z",
    "updated_at":"2025-04-28T20:15:36Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064477734",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064477734"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2064477734"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2064477734\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":42.0,
    "original_line":42,
    "side":"RIGHT",
    "original_position":42,
    "position":42,
    "subject_type":"line",
    "in_reply_to_id":2060824285.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2067166698",
    "pull_request_review_id":2804693192,
    "id":2067166698,
    "node_id":"PRRC_kwDOAlVrjc57NnXq",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. General Contributors can vote in proposals.\n+\n+## Maintainer\n+\n+The Maintainer supports and facilitates the specification [Change Process](change-process.md), and their role as an impartial facilitator is to guide the community toward making consensus-driven decisions. MobilityData currently serves as the Maintainer of GTFS. \n+\n+**Responsibilities**:",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"e7a0d980afa0afffc22cf5eb9ff6cd036449ee37",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"> This may also be an appropriate segue to discuss MobilityData governance. How does MobilityData decide which initiatives in which to invest staff time? MobilityData board candidates are screened by a committee. Who is on the committee? How is this determined? According to what criteria?\r\n\r\nThanks, @antrim , for the second question. This proposal is focused specifically on the governance of the GTFS specification and its community. It aims to establish an independent governance structure separate from that of MobilityData, as we maintain multiple specifications.\r\n\r\nThat said, we understand you also have questions about the governance of MobilityData as an organization. We suggest directing those questions to our Executive Director, Eric Plosky, for a more detailed discussion.\r\n\r\nAt a high level, MobilityData is an international, membership-based organization that balances the interests and needs of the community, members, sponsors, and granters. It is governed by an international Board of Directors.\r\n\r\nDon't hesitate to reach out to Eric to continue this conversation.",
    "created_at":"2025-04-29T19:04:00Z",
    "updated_at":"2025-04-29T19:04:00Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2067166698",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2067166698"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2067166698"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2067166698\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":42.0,
    "original_line":42,
    "side":"RIGHT",
    "original_position":42,
    "position":42,
    "subject_type":"line",
    "in_reply_to_id":2060824285.0
  }
]
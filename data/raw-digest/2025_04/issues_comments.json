[
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768892408",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2768892408",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2768892408,
    "node_id":"IC_kwDOAlVrjc6lCfH4",
    "user":{
      "login":"google-cla[bot]",
      "id":55858104,
      "node_id":"MDM6Qm90NTU4NTgxMDQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/in\/42202?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D",
      "html_url":"https:\/\/github.com\/apps\/google-cla",
      "followers_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/followers",
      "following_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/repos",
      "events_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/google-cla%5Bbot%5D\/received_events",
      "type":"Bot",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T10:21:41Z",
    "updated_at":"2025-04-01T10:21:41Z",
    "body":"Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\nView this [failed invocation](https:\/\/github.com\/google\/transit\/pull\/547\/checks?check_run_id=39762340286) of the CLA check for more information.\n\nFor the most up to date status, view the checks section at the bottom of the pull request.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768892408\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":{
      "id":42202,
      "client_id":"Iv1.a7c919fe7396ec28",
      "slug":"google-cla",
      "node_id":"MDM6QXBwNDIyMDI=",
      "owner":{
        "login":"google",
        "id":1342004,
        "node_id":"MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=",
        "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1342004?v=4",
        "gravatar_id":"",
        "url":"https:\/\/api.github.com\/users\/google",
        "html_url":"https:\/\/github.com\/google",
        "followers_url":"https:\/\/api.github.com\/users\/google\/followers",
        "following_url":"https:\/\/api.github.com\/users\/google\/following{\/other_user}",
        "gists_url":"https:\/\/api.github.com\/users\/google\/gists{\/gist_id}",
        "starred_url":"https:\/\/api.github.com\/users\/google\/starred{\/owner}{\/repo}",
        "subscriptions_url":"https:\/\/api.github.com\/users\/google\/subscriptions",
        "organizations_url":"https:\/\/api.github.com\/users\/google\/orgs",
        "repos_url":"https:\/\/api.github.com\/users\/google\/repos",
        "events_url":"https:\/\/api.github.com\/users\/google\/events{\/privacy}",
        "received_events_url":"https:\/\/api.github.com\/users\/google\/received_events",
        "type":"Organization",
        "user_view_type":"public",
        "site_admin":false
      },
      "name":"Google CLA",
      "description":"This is Google's CLA validation tool.\r\n\r\nSee https:\/\/cla.developers.google.com\/ for more information.",
      "external_url":"https:\/\/cla.developers.google.com\/",
      "html_url":"https:\/\/github.com\/apps\/google-cla",
      "created_at":"2019-09-26T21:40:56Z",
      "updated_at":"2023-05-09T23:59:12Z",
      "permissions":{
        "checks":"write",
        "issues":"write",
        "merge_queues":"read",
        "metadata":"read",
        "pull_requests":"write",
        "statuses":"write"
      },
      "events":[
        "check_run",
        "check_suite",
        "issue_comment",
        "merge_group",
        "merge_queue_entry",
        "pull_request"
      ]
    }
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768909075",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2768909075",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2768909075,
    "node_id":"IC_kwDOAlVrjc6lCjMT",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T10:28:10Z",
    "updated_at":"2025-04-01T10:28:10Z",
    "body":"We have discussed the more complicated stop_times-based approach for a while but no producer has actually published any data for it or even just vaguely committed to do so.\r\n\r\nFor this reason alone I'm leaning towards @VillePihlava's proposal.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768909075\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768926135",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2768926135",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2768926135,
    "node_id":"IC_kwDOAlVrjc6lCnW3",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T10:35:14Z",
    "updated_at":"2025-04-01T10:35:14Z",
    "body":"Thank you for the proposal! I think this is something we can implement quite quickly in MOTIS as it's just mirroring `bikes_allowed`. I don't think that a stop-based approach is necessary because in the rare case that cars are only allowed on parts of the trip, the trip can be split and rejoined with `block_id` \/ transfer type 4 in order to achieve the same result.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768926135\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768960481",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2768960481",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2768960481,
    "node_id":"IC_kwDOAlVrjc6lCvvh",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T10:49:50Z",
    "updated_at":"2025-04-01T10:50:31Z",
    "body":"I have some reservations on this proposal. What about paying cash instead? I think that we should, instead, have a way to specify which form(s) of payment method are accepted on board instead without defining a full fare model.\r\n\r\nIn short, this proposal doesn't scale at all.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2768960481\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769009761",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2769009761",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2769009761,
    "node_id":"IC_kwDOAlVrjc6lC7xh",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T11:11:38Z",
    "updated_at":"2025-04-01T11:11:38Z",
    "body":"> Thank you for the proposal! I think this is something we can implement quite quickly in MOTIS as it's just mirroring `bikes_allowed`. I don't think that a stop-based approach is necessary because in the rare case that cars are only allowed on parts of the trip, the trip can be split and rejoined with `block_id` \/ transfer type 4 in order to achieve the same result.\r\n\r\nPlease do not do this in your dataset as it will just confuse riders on the departure boards and stop lists shown on the app.\r\n\r\n`block_id` is a field solely used for operational purpose. It does nothing to the rider's experience. It is very common for two trips on the same block, where customers can't continue on the vehicle even if the final stop of the incoming trip and the initial stop of the outgoing trip is the same, and have to alight and reboard the same vehicle.\r\n\r\n`transfer_type` = 4 will give the rider an impression that they are actually travelling on two trips. The most common example is that the bus runs on one route, then through runs into another route where the riders can stay on board, or a circular tram service where there is a single terminus on the loop and where riders can stay on the tram.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769009761\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769044661",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2769044661",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2769044661,
    "node_id":"IC_kwDOAlVrjc6lDES1",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T11:25:52Z",
    "updated_at":"2025-04-01T11:25:52Z",
    "body":"> block_id is a field solely used for operational purpose\r\n\r\nI guess you have a misunderstanding here. Please check the landing page of gtfs.org where it says:\r\n\r\n> GTFS is a community-driven open standard for **rider-facing** transit information\r\n\r\nSo by definition, all information is purely **rider-facing**. There are other standards for operational data.\r\n\r\nYour interpretation is not backed up by anything in the GTFS standard and would artificially limit the expressiveness of the standard without a good reason.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769044661\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769099779",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2769099779",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2769099779,
    "node_id":"IC_kwDOAlVrjc6lDRwD",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T11:49:47Z",
    "updated_at":"2025-04-01T11:49:47Z",
    "body":"+1 MOTIS\r\n\r\nAdding specification for `ADDED` would make more sense IMO but since this seems not to be possible, this PR at least specifies how to deal with this real-world scenario.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769099779\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769133432",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2769133432",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2769133432,
    "node_id":"IC_kwDOAlVrjc6lDZ94",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T12:02:53Z",
    "updated_at":"2025-04-01T12:04:25Z",
    "body":"> > block_id is a field solely used for operational purpose\r\n> \r\n> I guess you have a misunderstanding here. Please check the landing page of gtfs.org where it says:\r\n> \r\n> > GTFS is a community-driven open standard for **rider-facing** transit information\r\n> \r\n> So by definition, all information is purely **rider-facing**. There are other standards for operational data.\r\n> \r\n> Your interpretation is not backed up by anything in the GTFS standard and would artificially limit the expressiveness of the standard without a good reason.\r\n\r\nSorry I may have a misunderstanding, but how is the block id relevant to the fact that the rider can stay on board?\r\n\r\nThe block id, when used for passenger information purpose, can be used for a passenger to guess if delays will be propagated through trips, or to follow a vehicle throughout the day, but it does nothing to tell if a transfer must be made by alighting or boarding the same vehicle, or by staying seated on the vehicle (which is what `transfer_type = 4` will do, but it is still a transfer between two distinct trips, not applicable to the case when a trip has different properties throughout its journey).",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769133432\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769267114",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/548#issuecomment-2769267114",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/548",
    "id":2769267114,
    "node_id":"IC_kwDOAlVrjc6lD6mq",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T12:54:51Z",
    "updated_at":"2025-04-01T12:54:51Z",
    "body":"> For example, a train trip runs from London Bridge to Caterham, and another trip runs from Purley to Tattenham Corner by detaching a portion from the London Bridge to Caterham trip.\n\nIt wasn't the primary goal when we designed `transfer_type = 4` but how we though this should be represented is with three trips : \nTrip A : from London Bridge to Purley\nTrip B : from Purley to Tattenham Corner\nTrip C : from Purley to Caterham\n\nThen you link with in-seat transfers A -> B, A -> C. ",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769267114\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769277138",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2769277138",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2769277138,
    "node_id":"IC_kwDOAlVrjc6lD9DS",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T12:58:24Z",
    "updated_at":"2025-04-01T12:58:24Z",
    "body":"@miklcct Read the first post of https:\/\/github.com\/google\/transit\/pull\/303 to get a history of block_id, it used to represent in-seat transfer and still is used like this in a lot of places",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769277138\/reactions",
      "total_count":2,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":1
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769282814",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/548#issuecomment-2769282814",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/548",
    "id":2769282814,
    "node_id":"IC_kwDOAlVrjc6lD-b-",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T13:00:27Z",
    "updated_at":"2025-04-01T13:00:27Z",
    "body":"> > For example, a train trip runs from London Bridge to Caterham, and another trip runs from Purley to Tattenham Corner by detaching a portion from the London Bridge to Caterham trip.\n> \n> It wasn't the primary goal when we designed `transfer_type = 4` but how we though this should be represented is with three trips : Trip A : from London Bridge to Purley Trip B : from Purley to Tattenham Corner Trip C : from Purley to Caterham\n> \n> Then you link with in-seat transfers A -> B, A -> C.\n\nThe real-world modelling for this is two trips: London Bridge to Caterham and Purley to Tattenham Corner, which is how these trips are shown in all official and unofficial channels, unless they are specifically coded to display split \/ joins.\n\n",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769282814\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769467206",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/516#issuecomment-2769467206",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/516",
    "id":2769467206,
    "node_id":"IC_kwDOAlVrjc6lErdG",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T14:01:40Z",
    "updated_at":"2025-04-01T14:01:40Z",
    "body":"I think the most pragmatic solution is just to leave this value out from my feed, then OTP can calculate it from the street network.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769467206\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769626749",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/547#issuecomment-2769626749",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/547",
    "id":2769626749,
    "node_id":"IC_kwDOAlVrjc6lFSZ9",
    "user":{
      "login":"VillePihlava",
      "id":57149178,
      "node_id":"MDQ6VXNlcjU3MTQ5MTc4",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57149178?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/VillePihlava",
      "html_url":"https:\/\/github.com\/VillePihlava",
      "followers_url":"https:\/\/api.github.com\/users\/VillePihlava\/followers",
      "following_url":"https:\/\/api.github.com\/users\/VillePihlava\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/VillePihlava\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/VillePihlava\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/VillePihlava\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/VillePihlava\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/VillePihlava\/repos",
      "events_url":"https:\/\/api.github.com\/users\/VillePihlava\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/VillePihlava\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-01T14:46:16Z",
    "updated_at":"2025-04-01T19:04:03Z",
    "body":"I'm working towards signing the CLA and making the post to `gtfs-changes@googlegroups.com`. I currently don't have a google account from the company I work at, which makes things difficult :)",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2769626749\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2773746573",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2773746573",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2773746573,
    "node_id":"IC_kwDOAlVrjc6lVAON",
    "user":{
      "login":"sberkley",
      "id":981852,
      "node_id":"MDQ6VXNlcjk4MTg1Mg==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/981852?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sberkley",
      "html_url":"https:\/\/github.com\/sberkley",
      "followers_url":"https:\/\/api.github.com\/users\/sberkley\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sberkley\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sberkley\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sberkley\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sberkley\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sberkley\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sberkley\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sberkley\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sberkley\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-02T21:07:33Z",
    "updated_at":"2025-04-02T21:07:33Z",
    "body":"+1 Sound Transit",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2773746573\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2774040459",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2774040459",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2774040459,
    "node_id":"IC_kwDOAlVrjc6lWH-L",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T00:29:03Z",
    "updated_at":"2025-04-03T00:30:33Z",
    "body":"@doconnoronca\r\n> Perhaps the impact period should be allowed even if there is no communication period so the producer doesn't have to support a communications period.\r\n\r\n+1 to this. In the event that only Impact Period is defined, the alert should still be displayed, but only impact routing during the Impact Period.\r\n\r\nBut I think agencies will also want the option to have an alert with a Communication Period without the need to define the hard boundaries of an Impact Period, especially if that alert is for something more nebulous, like an expected severe weather event (pun likely intended). For other alerts, there may not really *be* an \"impact.\" So I would actually be in support of:\r\n- Active Period: Forbidden if Communication OR Impact Period is defined, optional otherwise\r\n- Communication Period: Optional\r\n- Impact Period: Optional\r\n\r\n@stevenmwhite\r\n\r\n> I also agree that we should deprecate active_period, but I'm not sure how that will work with backwards compatibility.\r\n\r\nI don't think it would work, strictly speaking. Unless deprecated means we all just don't talk about it. :sweat_smile: I think it would have to be here to stay until the versioning question is resolved, yes?\r\n\r\n@miklcct\r\n\r\n> I still don't know why there is a need for communication_period. If the alert is in the feed, we should show it. If the agency doesn't want to show the alert, just leave it out in the feed.\r\n\r\nSomething else to consider regarding the usefulness of Communication Period is that an agency might not have staff available 24\/7 to add an alert at any given moment. Such agencies may want the ability to \"queue\" up an alert by adding it to their feed ahead of time with a Communication Period for when they actually want it to be displayed in apps.\r\n\r\n> Also, is it required that the impact period is totally within the communication period. Is it allowed to have impact period outside communication period?\r\n\r\nI think there are too many possible scenarios to establish explicit rules around how Communication and Impact Periods' respective time ranges must relate to one another. I'd rather allow agencies more flexibility on how they communicate with riders and keep the responsibility of conveying information in a logical way on them (anyway, you could still publish some very whacky alerts even with limitations on how impact\/communication have to relate to one another).\r\n\r\n> In my use case, there is a journey planner, and there is also a screen where you can look for routes \/ stations and show their timetables without planning for a journey, and you are allowed to change the date \/ time in that screen.\r\n\r\nI think that if the user is using the screen to select the date\/time, then if there is a Communication Period defined and the selected date\/time falls within the Communication Period, the tool should show it. If the selected date\/time falls outside the Communication Period, do not show the alert. If there is no Communication Period defined but the alert is in the feed, show it.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2774040459\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776027284",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/482#issuecomment-2776027284",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/482",
    "id":2776027284,
    "node_id":"IC_kwDOAlVrjc6ldtCU",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T14:42:48Z",
    "updated_at":"2025-04-03T14:42:48Z",
    "body":"We are closing this PR as a new related [PR#546](https:\/\/github.com\/google\/transit\/pull\/546) has been opened. Please continue the discussion about the alert time period in PR #546.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776027284\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776046935",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2776046935",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2776046935,
    "node_id":"IC_kwDOAlVrjc6ldx1X",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T14:48:33Z",
    "updated_at":"2025-04-03T14:48:33Z",
    "body":"> @miklcct\r\n> \r\n> > I still don't know why there is a need for communication_period. If the alert is in the feed, we should show it. If the agency doesn't want to show the alert, just leave it out in the feed.\r\n> \r\n> Something else to consider regarding the usefulness of Communication Period is that an agency might not have staff available 24\/7 to add an alert at any given moment. Such agencies may want the ability to \"queue\" up an alert by adding it to their feed ahead of time with a Communication Period for when they actually want it to be displayed in apps.\r\n\r\nWe are talking about GTFS-RT feeds here. Isn't GTFS-RT supposed to be generated real-time? ",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776046935\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776053609",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2776053609",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2776053609,
    "node_id":"IC_kwDOAlVrjc6ldzdp",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T14:50:07Z",
    "updated_at":"2025-04-03T14:50:07Z",
    "body":"> We are talking about GTFS-RT feeds here. Isn't GTFS-RT supposed to be generated real-time?\r\n\r\nIt is, exactly at the moment that someone enters an notification, which is known from now on, but in effect at a later time.\r\n",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776053609\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776287577",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2776287577",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2776287577,
    "node_id":"IC_kwDOAlVrjc6leslZ",
    "user":{
      "login":"stevenmwhite",
      "id":43826990,
      "node_id":"MDQ6VXNlcjQzODI2OTkw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/43826990?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/stevenmwhite",
      "html_url":"https:\/\/github.com\/stevenmwhite",
      "followers_url":"https:\/\/api.github.com\/users\/stevenmwhite\/followers",
      "following_url":"https:\/\/api.github.com\/users\/stevenmwhite\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/stevenmwhite\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/stevenmwhite\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/stevenmwhite\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/stevenmwhite\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/stevenmwhite\/repos",
      "events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T16:05:33Z",
    "updated_at":"2025-04-03T18:27:40Z",
    "body":"A couple points to make... Let's remember that GTFS is the standard for communicating information between two systems. It is not the feature specification for the features those systems can provide.\r\n\r\nWith that in mind...\r\n\r\n@miklcct \r\n>In my use case, there is a journey planner, and there is also a screen where you can look for routes \/ stations and show their timetables without planning for a journey, and you are allowed to change the date \/ time in that screen.\r\n\r\nSorry I've been slow to respond, but I agree with what @westontrillium said here about your use case. This is how _I_ would design it, but again, if this is your product, you get to decide. There are other reasonable design patterns that could be used to accommodate the same intent.\r\n> I think that if the user is using the screen to select the date\/time, then if there is a Communication Period defined and the selected date\/time falls within the Communication Period, the tool should show it. If the selected date\/time falls outside the Communication Period, do not show the alert. If there is no Communication Period defined but the alert is in the feed, show it.\r\n\r\n@westontrillium \r\n> Something else to consider regarding the usefulness of Communication Period is that an agency might not have staff available 24\/7 to add an alert at any given moment. Such agencies may want the ability to \"queue\" up an alert by adding it to their feed ahead of time with a Communication Period for when they actually want it to be displayed in apps.\r\n\r\nPeople don't edit their GTFS-RT feeds directly. They use software to do so. It's totally reasonable for that software to have the \"communication period\" feature and use it to determine when to include the alert in the feed it produces, without us needing to have this as a field in the data spec. So I don't think that staff wanting to set up alerts ahead of when they want them communicated is necessarily a reason we have to have communication period in the spec -- it could just be a good feature of the producing application, if the spec was clear about what presence in the feed means.\r\n\r\nIn general, my support for this is around clarifying for everyone what the _intent_ of the people publishing alerts is. In practice, these people who use software to publish alerts have shown that they intend to inform their riders about things at times that are in advance of those things having an actual impact, if they know about them in advance. They do this already by publishing alerts with `active_period` being greater than the actual impact period, and that confuses everyone.\r\n\r\nI'm in support of @westontrillium's suggestion here:\r\n- Active Period: Forbidden if Communication OR Impact Period is defined, optional otherwise\r\n- Communication Period: Optional\r\n- Impact Period: Optional",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776287577\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776803681",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2776803681",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2776803681,
    "node_id":"IC_kwDOAlVrjc6lgqlh",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T20:05:39Z",
    "updated_at":"2025-04-03T20:18:41Z",
    "body":"Since this PR and #504, it may be worth checking the meaning of \"deprecate\" in the context of GTFS Realtime. Here are some of my findings:\r\n\r\nIn 2014, `TripDescriptor.ScheduleRelationship = REPLACEMENT` was completely removed from the spec. (https:\/\/groups.google.com\/g\/gtfs-realtime\/c\/77c3WZrGBnI)\r\n\r\nIn 2018, during discussions on experimental field process, the practice of adding the `[deprecated=true]` tag in .proto was proposed. (https:\/\/github.com\/google\/transit\/issues\/109#issuecomment-442476116)\r\n\r\nIn 2019, the previously \"deprecated\" TripDescriptor.ScheduleRelationship = REPLACEMENT was added back in .proto with the `[deprecated=true]` tag. The main reason for this was for backwards compatibility. (https:\/\/github.com\/google\/transit\/commit\/cabaec43e039f3425c50933ae6b227a720c74851#diff-a1a14af3b4aed7d10a3b167231b52fdb483cf71b88f1655ed2e28bccd18800ceR579)\r\n\r\nSince this approach allows any existing consumers or producers that have implemented support to leave their code as-is, this type of \"deprecate\" does not seem to be considered a breaking change but rather a strong recommendation? We can also observe this tendency in the discussion of #504 (e.g., [this comment](https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2588045842)).\r\n\r\nIf there is a consensus on this, we can follow the approach in #504 and include \"deprecate guidance\" in both the reference and .proto. @stevenmwhite @westontrillium @doconnoronca @gcamp ",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776803681\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776848032",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2776848032",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2776848032,
    "node_id":"IC_kwDOAlVrjc6lg1ag",
    "user":{
      "login":"skalexch",
      "id":58088899,
      "node_id":"MDQ6VXNlcjU4MDg4ODk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/58088899?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skalexch",
      "html_url":"https:\/\/github.com\/skalexch",
      "followers_url":"https:\/\/api.github.com\/users\/skalexch\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skalexch\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skalexch\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skalexch\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skalexch\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skalexch\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skalexch\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skalexch\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skalexch\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T20:28:36Z",
    "updated_at":"2025-04-03T20:28:36Z",
    "body":"Thank you all for your interest in this change and for your valuable feedback.\r\n\r\n@gcamp , @doconnoronca , @stevenmwhite  and @westontrillium  \u2013 on deprecating active_period, please check @tzujenchanmbd 's comment above.\r\n\r\n@stevenmwhite , @doconnoronca , and @westontrillium  \u2013 your points regarding impact_period and communication_period are valid. I will make both fields optional while keeping restrictions on active_period to ensure it doesn\u2019t interact with any new fields.\r\n\r\n@miklcct - Restricting impact_period within communication_period (if present) seems like a good approach, so we can add it to the spec change.\r\n\r\nRegarding the four cases you outlined, below is how they might play out. I say \u201cmight\u201d because, as discussed, consumers determine where to display alerts in their app and how to handle them. The intent of this PR is to clarify when an alert is purely informative vs when it indicates an active impact.\r\n\r\nCase 1: If the current time is outside the communication_period, but the trips fall within the impact_period, then they are effectively inside the communication_period as well. Consumers may choose to adjust routing suggestions accordingly and display the alert in results or details pages since it is in effect. However, if the consumer has a \u201ccurrent service alerts\u201d page, the alert might not be shown there.\r\n\r\nCase 2: If the current time is outside the communication_period, consumers may choose not to show the alert for informational purposes. Since the journeys are also outside the impact_period, they may not display an alert at all, as those journeys remain unaffected.\r\n\r\nCase 3: If the current time is within the communication_period, but the trips are outside the impact_period, the alert can be displayed for informational purposes, though it won\u2019t impact current trips.\r\n\r\nCase 4: If the current time is within the communication_period, but the user searches for trips outside of it, the alert may appear on a general \u201ccurrent service alerts\u201d page, but not necessarily in the journey results, this is up to the consumer\u2019s implementation.\r\n",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776848032\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776903389",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2776903389",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2776903389,
    "node_id":"IC_kwDOAlVrjc6lhC7d",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T20:57:47Z",
    "updated_at":"2025-04-03T21:16:28Z",
    "body":"Hi @miklcct , thanks for the feedback! I\u2019d like to clarify a few points about the intent of this proposal.\r\n\r\nThis feature is intentionally designed to be simple and easy to produce, lowering the access barrier for adoption. While different approaches were considered, the Fares working group ultimately decided to prioritize ease of implementation over completeness.\r\n\r\nThis feature is not specific to on-board payment. During these working group discussions, it was suggested and agreed that the focus should be on whether a rider can access a trip using cEMV, rather than specifying where or how payment is handled. Whether validation occurs on board or at a station was thought to be out of scope, thus we removed any language referencing on-board or in-station validation.\r\n\r\nBoth of these points were discussed in the January and February Fares working group meetings. If you're interested, you can check out the meeting notes [here](https:\/\/docs.google.com\/document\/d\/1d3g5bMXupdElCKrdv6rhFNN11mrQgEk-ibA7wdqVLTU\/edit?usp=sharing) for more context.\r\n\r\nAdditionally, there seems to be a [some demand](https:\/\/blog.transitapp.com\/were-solving-public-transits-how-do-i-pay-question-once-and-for-all\/) for a lightweight way to indicate tap-to-ride availability without requiring a full fare model or necessarily expressing the trip price. This proposal aims to standardize that practice, rather than introduce a new layer of fare modeling.\r\n\r\nThat said, it would be good to hear from others who were involved in the working group meetings: @jll01  @skinkie @westontrillium @bdferris-v2 @evansiroky @halbertram",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776903389\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776960679",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2776960679",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2776960679,
    "node_id":"IC_kwDOAlVrjc6lhQ6n",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-03T21:30:48Z",
    "updated_at":"2025-04-03T21:30:48Z",
    "body":"Then how about specifying the ability to access a trip using cash as well?",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2776960679\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2777426077",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2777426077",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2777426077,
    "node_id":"IC_kwDOAlVrjc6ljCid",
    "user":{
      "login":"stevenmwhite",
      "id":43826990,
      "node_id":"MDQ6VXNlcjQzODI2OTkw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/43826990?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/stevenmwhite",
      "html_url":"https:\/\/github.com\/stevenmwhite",
      "followers_url":"https:\/\/api.github.com\/users\/stevenmwhite\/followers",
      "following_url":"https:\/\/api.github.com\/users\/stevenmwhite\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/stevenmwhite\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/stevenmwhite\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/stevenmwhite\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/stevenmwhite\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/stevenmwhite\/repos",
      "events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-04T02:40:05Z",
    "updated_at":"2025-04-04T02:40:05Z",
    "body":"I'll be upfront that I haven't followed the working group discussions about this and will dive in deeper before forming an opinion in support or against, but I will say that it seems very strange up front to put payment method information in a place that's very separate from the rest of the fare information.\r\n\r\nI totally understand the goal of not needing to model a full fare structure in order to indicate how that fare can be paid... but at first glance it seems that would be more logically done somewhere closer to the rest of the fare info.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2777426077\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2779200342",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2779200342",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2779200342,
    "node_id":"IC_kwDOAlVrjc6lpztW",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-04T16:11:23Z",
    "updated_at":"2025-04-04T16:11:23Z",
    "body":"@stevenmwhite If it were closer to the rest of fare info, that would prevent it from being Fares version-agnostic, since we'd have to choose the structure it is closer to. Keeping its current design means that anyone can implement it\u2014whether your GTFS has Fares v1, v2, or no fare info at all. Knowing if cEMV payment is supported is valuable by itself, so I think it's reasonable to have it reside in the category of \"general information about the agency\" (with the ability to specify for different routes if needed). There is also precedent for fare info to exist at the agency level (and route level, although that example is not self-contained).\r\n\r\n@miklcct I think this extension has a more targeted goal: To allow trip planning apps to accurately show what is now a globally recognized symbol indicating that a specific technology (cEMV) is enabled for a transit service.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2779200342\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2779293772",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2779293772",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2779293772,
    "node_id":"IC_kwDOAlVrjc6lqKhM",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-04T16:58:08Z",
    "updated_at":"2025-04-04T16:58:08Z",
    "body":"> @stevenmwhite If it were closer to the rest of fare info, that would prevent it from being Fares version-agnostic, since we'd have to choose the structure it is closer to. Keeping its current design means that anyone can implement it\u2014whether your GTFS has Fares v1, v2, or no fare info at all. Knowing if cEMV payment is supported is valuable by itself, so I think it's reasonable to have it reside in the category of \"general information about the agency\" (with the ability to specify for different routes if needed). There is also precedent for fare info to exist at the agency level (and route level, although that example is not self-contained).\n> \n> @miklcct I think this extension has a more targeted goal: To allow trip planning apps to accurately show what is now a globally recognized symbol indicating that a specific technology (cEMV) is enabled for a transit service.\n\nI want to show different symbols (cash, contactless, phone, smart card, QR transport code, etc.,) and this proposal isn't scalable.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2779293772\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2780754977",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#issuecomment-2780754977",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/542",
    "id":2780754977,
    "node_id":"IC_kwDOAlVrjc6lvvQh",
    "user":{
      "login":"doconnoronca",
      "id":36251661,
      "node_id":"MDQ6VXNlcjM2MjUxNjYx",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/36251661?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/doconnoronca",
      "html_url":"https:\/\/github.com\/doconnoronca",
      "followers_url":"https:\/\/api.github.com\/users\/doconnoronca\/followers",
      "following_url":"https:\/\/api.github.com\/users\/doconnoronca\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/doconnoronca\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/doconnoronca\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/doconnoronca\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/doconnoronca\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/doconnoronca\/repos",
      "events_url":"https:\/\/api.github.com\/users\/doconnoronca\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/doconnoronca\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-05T14:26:23Z",
    "updated_at":"2025-04-05T14:26:23Z",
    "body":"I detected a trip modification in the wild with the Santa Cruz METRO who uses a Clever Devices system.\r\n\r\nThe feed is at https:\/\/rt.scmetro.org\/gtfsrt\/trips",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2780754977\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2781030063",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/514#issuecomment-2781030063",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/514",
    "id":2781030063,
    "node_id":"IC_kwDOAlVrjc6lwyav",
    "user":{
      "login":"derhuerst",
      "id":5072613,
      "node_id":"MDQ6VXNlcjUwNzI2MTM=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/5072613?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/derhuerst",
      "html_url":"https:\/\/github.com\/derhuerst",
      "followers_url":"https:\/\/api.github.com\/users\/derhuerst\/followers",
      "following_url":"https:\/\/api.github.com\/users\/derhuerst\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/derhuerst\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/derhuerst\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/derhuerst\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/derhuerst\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/derhuerst\/repos",
      "events_url":"https:\/\/api.github.com\/users\/derhuerst\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/derhuerst\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-05T18:24:00Z",
    "updated_at":"2025-04-05T18:24:00Z",
    "body":"If I understand your points correctly, I think we should open a vote for these changes:\n1. Extending the `frequencies.txt` primary key to `(trip_id, start_time, end_time, headway_secs)`, and\n2. adding a best practice to give different `trip_id`s even to vehicles\/\"runs\" of the same route that run in the same direction but with a *different* headway.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2781030063\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2781081942",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/514#issuecomment-2781081942",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/514",
    "id":2781081942,
    "node_id":"IC_kwDOAlVrjc6lw_FW",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-05T20:23:28Z",
    "updated_at":"2025-04-05T20:23:28Z",
    "body":"If the best pracise is: don't do it. Then please don't allow it is the first place.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2781081942\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784049126",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784049126",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784049126,
    "node_id":"IC_kwDOAlVrjc6l8Tfm",
    "user":{
      "login":"SteveGladstone",
      "id":40123203,
      "node_id":"MDQ6VXNlcjQwMTIzMjAz",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40123203?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/SteveGladstone",
      "html_url":"https:\/\/github.com\/SteveGladstone",
      "followers_url":"https:\/\/api.github.com\/users\/SteveGladstone\/followers",
      "following_url":"https:\/\/api.github.com\/users\/SteveGladstone\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/SteveGladstone\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/SteveGladstone\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/SteveGladstone\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/SteveGladstone\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/SteveGladstone\/repos",
      "events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T17:15:45Z",
    "updated_at":"2025-04-07T17:15:45Z",
    "body":"Liking the potential here and apologies for jumping in late!  Have some questions regarding the proposal-\r\n\r\n1) **DUPLICATED vs REPLACEMENT** - is the only functional difference here that REPLACEMENT requires all applicable `scheduled_time` values to be specified in case there is a difference?  If I duplicate trip A with 50 stops (per the GTFS) but set the start time to be 2 hours from now, and then I add a replacement trip for trip A with the same 50 stops (per the GTFS) and specify all the `scheduled_time` values that's 4 hours from now, is the expectation that consumers treat them as functionally the same?\r\n\r\n2) **Service Id Limitations** - are they any limitations with REPLACEMENT trips similar to what DUPLICATED trips have?  For example, if we want to add a train in the middle of a Wednesday (`service_id` 401) but that train only operates on a special schedule (`service_id` 491) which is only used as a calendar_dates.txt exception, are producers prevented from using that special schedule `trip_id` in the REPLACEMENT trip?  More importantly, are consumers required to support those trips?  I thought there was a concern on the DUPLICATED side with duplicating trips that were not scheduled to run at any point in the next 30 days, hence asking this question since it seems like the same issue would exist there.  Both cases have trip A running at two additional times that day.\r\n\r\n3) **Scheduling On-The-Fly** - in theory, NEW and REPLACEMENT allow for scheduling of dynamic trips at any given point in time.  Is this a concern for consumers?  The example I'm thinking of is unplanned shuttle bus bridges.  Say we have a storm Thursday night and catenary needs to be repaired.  It'll take three days and involve spliting the rail line into a north and and south end.  Given there is not enough time to put a static GTFS together, producing NEW trips for the north end and south end seems like the best option for an unplanned three day rail disruption.  At the same time, we need to setup shuttle buses to ferry customers between the north end and south end of the line.  That would also involve NEW trips with a \"unplanned shuttle bus\" `route_id` that is in the static GTFS but has no trips in trips.txt because it technically doesn't run on a schedule.  Naturally the `TripProperties` would have no `shape_id` values so travel paths in all cases are covered.  Is everyone ok with this kind of scheduling on-the-fly?  While that might seem like a more tolerable example, is there anything that prevents an agency from defining routes with minimal GTFS trips, stop_times, or shapes and defining **all** that service on-the-fly other than poor trip planning- ie, define a route with one trip that has a service_id which is never active to meet the spec requirements and then build the rest out on-the-fly?\r\n\r\n4) **Data Analysis Recommendations** - given the above scenarios, what is the expectation on how consumers and 3rd parties do data analysis on these trips?  Most everything is based around a static GTFS which gives structure and this setup explicitly defines ways to ignore any kind of pre-defined schedule structure entirely.  Are there any thoughts or concerns there or does that fall into the bucket of \"that's up to individual agencies and 3rd parties to figure out\"?  Reason I ask is because the power of this setup could lead to a situation where typical KPI's like OTP, headways, etc become more nebulous due to the lack of an underlying schedule.  Wondering if any guidance should be given there or if the consortium deems that outside its scope of responsibility.  \r\n\r\n5) **Real-Time Pathways Incorporation** - because NEW and REPLACEMENT allow for defining something that doesn't exist in the GTFS, is there an opportunity here to expand the types of entities that are supported such that real-time GTFS-Pathways modifications become feasible?  For example, if a station elevator or escalator is down and the agency wishes to provide real-time updates for trip planning purposes, could NEW or REPLACEMENT possibly incorporate a `pathway_id` instead of a `trip_id`?  I realize this is a bit different syntactically from what the proposal covers, but conceptually it makes sense... and is something the Maryland Transit Administration has needed for awhile now \ud83d\ude4f \ud83d\ude04 ",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784049126\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784076134",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784076134",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784076134,
    "node_id":"IC_kwDOAlVrjc6l8aFm",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T17:28:01Z",
    "updated_at":"2025-04-10T11:55:09Z",
    "body":"> Liking the potential here and apologies for jumping in late!  Have some questions regarding the proposal-\r\n> \r\n> 1) **DUPLICATED vs REPLACEMENT** - is the only functional difference here that REPLACEMENT requires all applicable `scheduled_time` values to be specified in case there is a difference?  If I duplicate trip A with 50 stops (per the GTFS) but set the start time to be 2 hours from now, and then I add a replacement trip for trip A with the same 50 stops (per the GTFS) and specify all the `scheduled_time` values that's 4 hours from now, is the expectation that consumers treat them as functionally the same?\r\n\r\n1. No. REPLACEMENT <s>is considered<\/s> can be implemented with an atomic \"DELETE-then-NEW\" but with the same trip id, which may have a different timetable. The original timetable no longer runs, while DUPLICATED is an extra, additional trip, and the original still runs unless it is deleted \/ cancelled. \r\n\r\n> \r\n> 2) **Service Id Limitations** - are they any limitations with REPLACEMENT trips similar to what DUPLICATED trips have?  For example, if we want to add a train in the middle of a Wednesday (`service_id` 401) but that train only operates on a special schedule (`service_id` 491) which is only used as a calendar_dates.txt exception, are producers prevented from using that special schedule `trip_id` in the REPLACEMENT trip?  More importantly, are consumers required to support those trips?  I thought there was a concern on the DUPLICATED side with duplicating trips that were not scheduled to run at any point in the next 30 days, hence asking this question since it seems like the same issue would exist there.  Both cases have trip A running at two additional times that day.\r\n> \r\n\r\nNo. As you are adding a new train, you need to use NEW instead of REPLACEMENT, unless it can be DUPLICATED from another trip.\r\n\r\nREPLACEMENT is mainly used for one-off short term schedule change \/ additional stops \/ etc on an existing trip.\r\n\r\n> 3) **Scheduling On-The-Fly** - in theory, NEW and REPLACEMENT allow for scheduling of dynamic trips at any given point in time.  Is this a concern for consumers?  The example I'm thinking of is unplanned shuttle bus bridges.  Say we have a storm Thursday night and catenary needs to be repaired.  It'll take three days and involve spliting the rail line into a north and and south end.  Given there is not enough time to put a static GTFS together, producing NEW trips for the north end and south end seems like the best option for an unplanned three day rail disruption.  At the same time, we need to setup shuttle buses to ferry customers between the north end and south end of the line.  That would also involve NEW trips with a \"unplanned shuttle bus\" `route_id` that is in the static GTFS but has no trips in trips.txt because it technically doesn't run on a schedule.  Naturally the `TripProperties` would have no `shape_id` values so travel paths in all cases are covered.  Is everyone ok with this kind of scheduling on-the-fly?  While that might seem like a more tolerable example, is there anything that prevents an agency from defining routes with minimal GTFS trips, stop_times, or shapes and defining **all** that service on-the-fly other than poor trip planning- ie, define a route with one trip that has a service_id which is never active to meet the spec requirements and then build the rest out on-the-fly?\r\n> \r\n\r\nYes, unplanned bus bridge and additional short working, etc. is the intended use case of this proposal.\r\n\r\nThere is nothing which prevents such poor planning, but it can be a valid use case for a service which is advertised to run only sparingly but much more frequently on the ground due to passenger demand.\r\n> 4) **Data Analysis Recommendations** - given the above scenarios, what is the expectation on how consumers and 3rd parties do data analysis on these trips?  Most everything is based around a static GTFS which gives structure and this setup explicitly defines ways to ignore any kind of pre-defined schedule structure entirely.  Are there any thoughts or concerns there or does that fall into the bucket of \"that's up to individual agencies and 3rd parties to figure out\"?  Reason I ask is because the power of this setup could lead to a situation where typical KPI's like OTP, headways, etc become more nebulous due to the lack of an underlying schedule.  Wondering if any guidance should be given there or if the consortium deems that outside its scope of responsibility.  \r\n> \r\nThis is outside the scope of my responsibility, which is to deliver accurate passenger information.\r\n\r\n> 5) **Real-Time Pathways Incorporation** - because NEW and REPLACEMENT allow for defining something that doesn't exist in the GTFS, is there an opportunity here to expand the types of entities that are supported such that real-time GTFS-Pathways modifications become feasible?  For example, if a station elevator or escalator is down and the agency wishes to provide real-time updates for trip planning purposes, could NEW or REPLACEMENT possibly incorporate a `pathway_id` instead of a `trip_id`?  I realize this is a bit different syntactically from what the proposal covers, but conceptually it makes sense... and is something the Maryland Transit Administration has needed for awhile now \ud83d\ude4f \ud83d\ude04 \r\n\r\nWe can make another proposal if you want this functionality.\r\n",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784076134\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784088561",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784088561",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784088561,
    "node_id":"IC_kwDOAlVrjc6l8dHx",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T17:33:55Z",
    "updated_at":"2025-04-07T17:33:55Z",
    "body":"> 3\\. **Scheduling On-The-Fly** - in theory, NEW and REPLACEMENT allow for scheduling of dynamic trips at any given point in time.  Is this a concern for consumers?  The example I'm thinking of is unplanned shuttle bus bridges.  Say we have a storm Thursday night and catenary needs to be repaired.  It'll take three days and involve spliting the rail line into a north and and south end.  Given there is not enough time to put a static GTFS together, producing NEW trips for the north end and south end seems like the best option for an unplanned three day rail disruption.  At the same time, we need to setup shuttle buses to ferry customers between the north end and south end of the line.  That would also involve NEW trips with a \"unplanned shuttle bus\" `route_id` that is in the static GTFS but has no trips in trips.txt because it technically doesn't run on a schedule.  Naturally the `TripProperties` would have no `shape_id` values so travel paths in all cases are covered.  Is everyone ok with this kind of scheduling on-the-fly?  While that might seem like a more tolerable example, is there anything that prevents an agency from defining routes with minimal GTFS trips, stop_times, or shapes and defining **all** that service on-the-fly other than poor trip planning- ie, define a route with one trip that has a service_id which is never active to meet the spec requirements and then build the rest out on-the-fly?\r\n\r\nBoth OTP and Google have been supporting a ADDED (with very unclear semantics) for years so i think we are ok from the consumer side.\r\n\r\nRight now it's not possible to completely dynamically create a route but I would like to see that being made possible. This is for a follow up, however. Your solution with a \"spare\" route in the schedule data would also work, but isn't as nice.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784088561\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784096860",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784096860",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784096860,
    "node_id":"IC_kwDOAlVrjc6l8fJc",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T17:37:44Z",
    "updated_at":"2025-04-07T17:37:44Z",
    "body":"@SteveGladstone I know it's quite unlikely that SIRI will be adopted in the US but the European standard has the ability to send \"elevator broken\/working\" messages: https:\/\/public.3.basecamp.com\/p\/KQmHscqMZqdvUUZojfsMi5PW\r\n\r\nSince the situation with realtime data for pathways is stuck, I usually recommend to people to check out SIRI. There is also this proposal, which you're probably aware of: https:\/\/github.com\/google\/transit\/issues\/268",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784096860\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784140899",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784140899",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784140899,
    "node_id":"IC_kwDOAlVrjc6l8p5j",
    "user":{
      "login":"SteveGladstone",
      "id":40123203,
      "node_id":"MDQ6VXNlcjQwMTIzMjAz",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40123203?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/SteveGladstone",
      "html_url":"https:\/\/github.com\/SteveGladstone",
      "followers_url":"https:\/\/api.github.com\/users\/SteveGladstone\/followers",
      "following_url":"https:\/\/api.github.com\/users\/SteveGladstone\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/SteveGladstone\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/SteveGladstone\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/SteveGladstone\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/SteveGladstone\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/SteveGladstone\/repos",
      "events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T17:58:20Z",
    "updated_at":"2025-04-07T17:58:20Z",
    "body":"> No. REPLACEMENT is considered an atomic \"DELETE-then-NEW\" but with the same trip id, which may have a different timetable. The original timetable no longer runs, while DUPLICATED is an extra, additional trip, and the original still runs unless it is deleted \/ cancelled.\r\n\r\nApologies if I'm blind because I waded through a lot of comments in this PR and the commits, but is this explicitly defined in the proto?  I didn't see anything that stated this other then the `TripProperties` section which wasn't too clear to me.  \r\n\r\nIf REPLACEMENT can only be used for existing `trip_id` values that should probably be defined in the proto to prevent REPLACEMENT from being used like a better DUPLICATED in the proto.  For example, trip 1234 is marked as DELETED and instead we get trip 1234ABC as a REPLACEMENT.  That way the consumers know to remove trip 1234 without treating it as CANCELED and then using trip 1234ABC instead.  As I read it right now, there is nothing that prevents this- but I could be missing that in the proto? \ud83e\udd37\u200d\u2642\ufe0f \r\n\r\n>There is nothing which prevents such poor planning, but it can be a valid use case for a service which is advertised to run only sparingly but much more frequently on the ground due to passenger demand.\r\n\r\nI guess this is more for @gcamp and others since agencies are being empowered with this and there don't seem to be any guard rails \ud83d\ude00 \r\n\r\n>Right now it's not possible to completely dynamically create a route but I would like to see that being made possible. This is for a follow up, however. Your solution with a \"spare\" route in the schedule data would also work, but isn't as nice.\r\n\r\nThat's kind of the point; not being \"nice\" but still being able to achieve the desired outcome.  From a spec perspective, what I'm describing should be supported and there is nothing stopping it from being supported other than consumers making it work.  I don't know if consumers want to support this and make it work, though.  Hence asking because we'd love for this to be supported and half-done support with situations like \"you can create NEW trips but the route must be active on the day the trips are created because that's how on software works\" don't help us in that regard when it comes to unplanned disruptions \ud83d\ude2d  ",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784140899\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784163463",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784163463",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784163463,
    "node_id":"IC_kwDOAlVrjc6l8vaH",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T18:07:30Z",
    "updated_at":"2025-04-07T18:07:30Z",
    "body":"I can only speak for OTP, but let me rephrase: a spare route is fine and willl work.\r\n\r\nAt least in our implementation you don't have to deal with service ids for ADDED\/NEW trips at all. You simply state the day it's going to run. If it runs on 2 days, you add the trip to the feed twice, one for each service day.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784163463\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784170466",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/268#issuecomment-2784170466",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/268",
    "id":2784170466,
    "node_id":"IC_kwDOAlVrjc6l8xHi",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T18:10:34Z",
    "updated_at":"2025-04-07T18:39:42Z",
    "body":"#546 is a proposal aimed at eliminating ambiguity in how alerts are used, such as the situation mentioned in [this comment](https:\/\/github.com\/google\/transit\/issues\/268#issuecomment-825079330).\n\nI think that after #546 is approved, we can further promote for expanding `EntitySelector` to include `pathway_id`. \n\ncc: @SteveGladstone @leonardehrenfried @miklcct since recent discussion on #504 ",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784170466\/reactions",
      "total_count":2,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":2,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784173757",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784173757",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784173757,
    "node_id":"IC_kwDOAlVrjc6l8x69",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T18:11:51Z",
    "updated_at":"2025-04-07T18:11:51Z",
    "body":"> > No. REPLACEMENT is considered an atomic \"DELETE-then-NEW\" but with the same trip id, which may have a different timetable. The original timetable no longer runs, while DUPLICATED is an extra, additional trip, and the original still runs unless it is deleted \/ cancelled.\n> \n> Apologies if I'm blind because I waded through a lot of comments in this PR and the commits, but is this explicitly defined in the proto?  I didn't see anything that stated this other then the `TripProperties` section which wasn't too clear to me.  \n> \n> If REPLACEMENT can only be used for existing `trip_id` values that should probably be defined in the proto to prevent REPLACEMENT from being used like a better DUPLICATED in the proto.  For example, trip 1234 is marked as DELETED and instead we get trip 1234ABC as a REPLACEMENT.  That way the consumers know to remove trip 1234 without treating it as CANCELED and then using trip 1234ABC instead.  As I read it right now, there is nothing that prevents this- but I could be missing that in the proto? \ud83e\udd37\u200d\u2642\ufe0f \n\nIn this case, 1234ABC needs to be a NEW trip, rather than REPLACEMENT. However, consumers will not know that it is associated to the 1234.\n\nREPLACEMENT solves this problem and allows consumers to notify passengers that the 1234 train service is modified, rather than removed from the timetable.\n",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784173757\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784419789",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2784419789",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2784419789,
    "node_id":"IC_kwDOAlVrjc6l9t_N",
    "user":{
      "login":"SteveGladstone",
      "id":40123203,
      "node_id":"MDQ6VXNlcjQwMTIzMjAz",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40123203?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/SteveGladstone",
      "html_url":"https:\/\/github.com\/SteveGladstone",
      "followers_url":"https:\/\/api.github.com\/users\/SteveGladstone\/followers",
      "following_url":"https:\/\/api.github.com\/users\/SteveGladstone\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/SteveGladstone\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/SteveGladstone\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/SteveGladstone\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/SteveGladstone\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/SteveGladstone\/repos",
      "events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-07T19:27:18Z",
    "updated_at":"2025-04-07T19:27:18Z",
    "body":"> > > No. REPLACEMENT is considered an atomic \"DELETE-then-NEW\" but with the same trip id, which may have a different timetable. The original timetable no longer runs, while DUPLICATED is an extra, additional trip, and the original still runs unless it is deleted \/ cancelled.\r\n> > \r\n> > \r\n> > Apologies if I'm blind because I waded through a lot of comments in this PR and the commits, but is this explicitly defined in the proto?  I didn't see anything that stated this other then the `TripProperties` section which wasn't too clear to me.\r\n> > If REPLACEMENT can only be used for existing `trip_id` values that should probably be defined in the proto to prevent REPLACEMENT from being used like a better DUPLICATED in the proto.  For example, trip 1234 is marked as DELETED and instead we get trip 1234ABC as a REPLACEMENT.  That way the consumers know to remove trip 1234 without treating it as CANCELED and then using trip 1234ABC instead.  As I read it right now, there is nothing that prevents this- but I could be missing that in the proto? \ud83e\udd37\u200d\u2642\ufe0f\r\n> \r\n> In this case, 1234ABC needs to be a NEW trip, rather than REPLACEMENT. However, consumers will not know that it is associated to the 1234.\r\n> \r\n> REPLACEMENT solves this problem and allows consumers to notify passengers that the 1234 train service is modified, rather than removed from the timetable.\r\n\r\nI get what you're saying.  What I'm getting at is I don't know if the proto and spec requirements line up with that from a customer-facing perspective.\r\n\r\nWith REPLACEMENT we're now taking one trip and modifying it to the point where not only might the trip stop's be entirely different but the `scheduled_time` may be entirely different as well.  It may operate before or after the GTFS time.  This is different to the rest of the enums because a specific trip is changing in potentially multiple ways (number of stops, headsigns, etc)- not just being removed from service.  With that kind of difference and to avoid rider confusion, should the explicit actions taken by consumers in how to communicate this change to customers be defined?  I would kind of prefer that REPLACEMENT have that unique `trip_id` so agencies can use DELETED or CANCELED on the original trip, especially when stop patterns and trip headsigns change to avoid rider confusion.  \r\n\r\nCould this be solved with DELETED\/CANCELED and NEW?  Sure.  Then the question is why even have REPLACEMENT since any stop\/time modifications are covered by NEW and any time there are no stop modifications, DUPLICATED could be sufficient because you can change the date\/time of the duplicated trip?  \r\n\r\nThe level of flexibility with REPLACEMENT compared to what it's trying to accomplish and how it's presented to customers is what's getting me.  This is the Theseus' Ship problem but with transit service.  If the trip is re-created two hours later and possibly missing a stop or three, is it really the same trip and shouldn't customers be able to determine what happened to the original trip (ship)? \ud83d\ude04 \r\n\r\nI guess one could argue that it's on the agency to use REPLACEMENT in the proper fashion.  So here's an example I'm thinking of-\r\n\r\nTrains 536 headed from Baltimore to Washington DC leaves at 5pm and arrives in DC at 6pm.  It serves 12 stops along the way with a stop every 5 minutes.  Something happens and we decide to create a REPLACEMENT trip for Train 536.  Per the proto and spec definition, we can set REPLACEMENT 536 to start at 7pm and service 6 stops instead of 12.  It will also terminate at an earlier stop than it typically does (not Washington DC) which means it gets a new headsign.  The `trip_id` remains the same.  Because half of the stops will not be served, there is no `scheduled_time` for those stops and we don't defined a `schedule_relationship` of SKIPPED for the stops not being served because they aren't part of the REPLACEMENT trip.  We also can't define a `TripModification` for this REPLACEMENT trip because of the restrictions there in the proposal.  \r\n\r\nHow does the customer know what's happening with Train 536 relative to the established static GTFS schedule given it's operating at a later time, is serving a different stop pattern, and there is nothing in the `TripUpdate` feed to indicate what happened to the scheduled 5pm trip.\r\n\r\nMy first thought would be a Service Alert, but previous discussion have determined the community has no desire to be required to consume Service Alerts when it comes to trip planning- which this definitely relates to.  My second thought would be to use DELETED\/CANCELED and NEW.  But your proposal says REPLACEMENT is perfectly viable in this case and should be used because Train 536 is being replaced by a different trip.  It seems like maybe that shouldn't be the case given how completely different the REPLACEMENT trip is allowed to be?\r\n\r\nThis could all be moot if the Best Practices were further updated to clarify how NEW, REPLACEMENT, and DUPLICATED could\/should all work.  As written right now, I think there may be too much flexibility and potential confusion when it comes to the REPLACEMENT setup \ud83e\udd14 \r\n\r\nFor the record, I'm totally onboard with NEW \ud83d\ude00 ",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2784419789\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2785673826",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2785673826",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2785673826,
    "node_id":"IC_kwDOAlVrjc6mCgJi",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T08:37:24Z",
    "updated_at":"2025-04-08T08:48:48Z",
    "body":"Using your example of train 536, a customer who has previously planned a journey on the 536 will now know that their train is now revised to run 2 hours later on a different routing, because the trip_id stays consistent, and they can take appropriate action.\n\nTrip 536 has been replaced completely because there is a REPLACEMENT so people will know that it will not run as in the static schedule, but on a revised schedule \/ routing listed in the feed.\n\nAlso, it is allowed to define SKIPPED stops in the replacement trip to make it explicitly that the replacement will not serve the specified stop. This can be used when the replacement skip stops so people won't be surprised when their intended train runs non-stop through the station.\n\nIf using a DELETE then NEW approach, because the trip_id has to be different, the customer only knows that the train is removed from the timetable and is now left in the dark in what happened. \n\nThis is actually the intended use case of my proposal.\n\nMy proposal says that a replacement trip has to be seen by the passenger as associated with the original. Having the same train number is a strong indicator for that.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2785673826\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786104447",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/438#issuecomment-2786104447",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/438",
    "id":2786104447,
    "node_id":"IC_kwDOAlVrjc6mEJR_",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T11:20:35Z",
    "updated_at":"2025-04-08T11:20:35Z",
    "body":"In NaPTAN (Great Britain), stops are grouped in stop areas, which are translated to stations in GTFS. However, a stop area can also have a parent stop area as well, and a stop area can also include platforms directly and other child stop areas.\n\nIf we translate this model to GTFS, it is equivalent to allowing `location_type=1` to have a `parent_station` of `location_type=1`.\n\nThis model can perfectly describe the situation at London St Pancras, where there is a separate Thameslink station within the main station, which contains a number of platforms directly.\n\nWhat does everyone think of the above?",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786104447\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786180426",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/438#issuecomment-2786180426",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/438",
    "id":2786180426,
    "node_id":"IC_kwDOAlVrjc6mEb1K",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T11:51:05Z",
    "updated_at":"2025-04-08T11:51:05Z",
    "body":"GTFS mixes logical grouping and physical grouping. This is most prominently observed when using GTFS-RT. Since the stop_id is part of the domain of the agency in GTFS-RT, an aggregator must either normalise and translate the stop_ids, or provide the reference towards the identifier the operator makes, effectively denormalising and duplication of stops operated by multiple agencies. Since the concepts are mixed, the coordinates on the ground suggest physical, but the design is logical. So a choice must be made. The parent_stop on the other hand may facilitate the grouping in the physical domain because there are no dependencies. GTFS misses the 'parent-parent-station' grouping the bus, tram, metro, and rail operations in a group. But that is still not a _stoparea_, it would be a _place_.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786180426\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786191686",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/438#issuecomment-2786191686",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/438",
    "id":2786191686,
    "node_id":"IC_kwDOAlVrjc6mEelG",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T11:55:53Z",
    "updated_at":"2025-04-08T11:55:53Z",
    "body":"Can't be the physical grouping be deduced from map data?",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786191686\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786268504",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/438#issuecomment-2786268504",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/438",
    "id":2786268504,
    "node_id":"IC_kwDOAlVrjc6mExVY",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T12:25:27Z",
    "updated_at":"2025-04-08T12:25:27Z",
    "body":"No, please look up the horse shoe example of finding a center point.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786268504\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786304814",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2786304814",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2786304814,
    "node_id":"IC_kwDOAlVrjc6mE6Mu",
    "user":{
      "login":"stevenmwhite",
      "id":43826990,
      "node_id":"MDQ6VXNlcjQzODI2OTkw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/43826990?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/stevenmwhite",
      "html_url":"https:\/\/github.com\/stevenmwhite",
      "followers_url":"https:\/\/api.github.com\/users\/stevenmwhite\/followers",
      "following_url":"https:\/\/api.github.com\/users\/stevenmwhite\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/stevenmwhite\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/stevenmwhite\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/stevenmwhite\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/stevenmwhite\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/stevenmwhite\/repos",
      "events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T12:39:18Z",
    "updated_at":"2025-04-08T12:55:58Z",
    "body":"As we get into this discussion of riders having \"their train\" I wonder how often the kinds of trains where people consider a specific trip to be theirs have a publicly identifiable train number. My _assumption_ is most of the time. \r\n\r\nFor example, my commuter train has a number just like my flight does. I know I take \"train 536\" southbound. My subway train does not. It comes every 10 minutes and I get on the one that comes when I'm standing on the platform, whether it is \"my\" normal one or not. \r\n\r\nThis discussion has been about trying to make a technical match for replacements using `trip_id` for trips that may or may not be similar, making assumptions that riders consider a specific trip their own. Is there a place for this match to be done instead on `trip_short_name` specifically for rider-facing-name matches (where the technical id may change, even), or are there too many examples where this concept of \"my train\" is used by riders in cases where the train does not have a rider facing name?\r\n\r\nIn this case, the train called \"train 536\" may be replaced by a wholly different trip (from a _technical perspective_) that is still called \"train 536.\"\r\n\r\n_Edit: Changed the train number in my example just to keep it consistent with the example from the previous few comments._",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786304814\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786474056",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2786474056",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2786474056,
    "node_id":"IC_kwDOAlVrjc6mFjhI",
    "user":{
      "login":"ckraatz",
      "id":170684231,
      "node_id":"U_kgDOCixvRw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/170684231?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/ckraatz",
      "html_url":"https:\/\/github.com\/ckraatz",
      "followers_url":"https:\/\/api.github.com\/users\/ckraatz\/followers",
      "following_url":"https:\/\/api.github.com\/users\/ckraatz\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/ckraatz\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/ckraatz\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/ckraatz\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/ckraatz\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/ckraatz\/repos",
      "events_url":"https:\/\/api.github.com\/users\/ckraatz\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/ckraatz\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T13:38:28Z",
    "updated_at":"2025-04-08T13:38:28Z",
    "body":"Sorry to be late to the conversation, which I hope I'm sufficiently caught up on to comment. As a long-time publisher of alerts within a transit agency (Santa Clara VTA) and now with a tool ([SimplifyTransit Alerts](https:\/\/www.simplifytransit.com\/alerts)) used by agencies of all sizes to publish GTFS-realtime Alerts:\r\n\r\n- I do see agencies being confused about what the time period refers to. I always emphasize for them that it corresponds to the time range that the Effect is impacting riders. The simplest solution would be to add more clarity to the reference docs to emphasize that to feed publishers.\r\n- I think there should only be one field - rename it impact_period if you want. No need for communication_period. It's unreasonable to expect agency staff (even at large agencies) to go through the complexity of adding multiple time ranges. As the creator of a UI to make publishing GTFS-realtime Alerts easy, that also creates unnecessary design complexity. We sometimes have dispatchers creating alerts, people who are moving very quickly, and we aim to simplify rather than complicate.\r\n- Apps and other consumers should be responsible and free to decide when and how to display alerts, and assume that the time range (especially if there's only one, as I think is appropriate) provided corresponds to when the Effect is\/will be affecting riders.\r\n\r\nThat said, SimplifyTransit also has a product that consumes GTFS-realtime Service Alerts, our [Subscriptions](https:\/\/www.simplifytransit.com\/subscriptions) module that sends highly personalized SMS\/email alerts to riders. \r\n\r\n- I could see Subscriptions using a communication_period, if it were provided reliably, to give more sophisticated and staffed-up agencies control over when to send SMS\/email alerts or reminders. However, that use-case is even more complex. It would be great to be able to send subscribers periodic reminders as a service change approaches, for example, or when an Alert ends. But I don't see the communication_period supporting those uses cases, as proposed.\r\n\r\nI hope that's helpful. Happy to clarify anything or fill in gaps I missed. ",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786474056\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786803920",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2786803920",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2786803920,
    "node_id":"IC_kwDOAlVrjc6mG0DQ",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T15:17:34Z",
    "updated_at":"2025-04-08T15:19:23Z",
    "body":"> As we get into this discussion of riders having \"their train\" I wonder how often the kinds of trains where people consider a specific trip to be theirs have a publicly identifiable train number. My _assumption_ is most of the time.\r\n> \r\n> For example, my commuter train has a number just like my flight does. I know I take \"train 536\" southbound. My subway train does not. It comes every 10 minutes and I get on the one that comes when I'm standing on the platform, whether it is \"my\" normal one or not.\r\n> \r\n> This discussion has been about trying to make a technical match for replacements using `trip_id` for trips that may or may not be similar, making assumptions that riders consider a specific trip their own. Is there a place for this match to be done instead on `trip_short_name` specifically for rider-facing-name matches (where the technical id may change, even), or are there too many examples where this concept of \"my train\" is used by riders in cases where the train does not have a rider facing name?\r\n> \r\n> In this case, the train called \"train 536\" may be replaced by a wholly different trip (from a _technical perspective_) that is still called \"train 536.\"\r\n> \r\n> _Edit: Changed the train number in my example just to keep it consistent with the example from the previous few comments._\r\n\r\nIf your \"train 536\" is replaced by a wholly different trip called the \"train 536\", then under this proposal it will be a DELETED (or CANCELED if the original one is still shown on the boards) and a NEW service, and your consumers will then treat them as two completely different trips not related to each other. If you then receive complaints from your customers not able to find their train, it is then your problem.\r\n\r\nAlso, `trip_short_name` can also be changed for a replacement trip, for example, if the original trip is called 536 as the `trip_short_name` and replaced by another trip, with the same trip id but with 536X as the `trip_short_name` because of a short term line closure, using a `REPLACEMENT` trip will result in the journey planners telling passengers to catch the 536X in lieu of the 536 - if it is not possible the journey planner can prompt the passenger that the journey may not be possible, and suggests rerouting.\r\n\r\nA problem may remain which this proposal does not solve is that a train service is replaced by two trips with a bus bridge in between, in such situation, only one of the train trips can act as a replacement (preferably the one which runs on the original schedule), and an alert should be used on both trips and the bus bridge to manually inform the rider how to continue the journey.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786803920\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786936188",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2786936188",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2786936188,
    "node_id":"IC_kwDOAlVrjc6mHUV8",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T16:01:07Z",
    "updated_at":"2025-04-08T16:03:23Z",
    "body":"There has been considerable discussion in #482 regarding whether the current `active_period` should be interpreted as \"the period during which riders are actually impacted\" or \"the period during which the producer intends to notify riders.\" @ckraatz you can find more information there.\r\n\r\nIn theory, the simplest and most ideal approach for ambiguous fields in the Realtime spec would be to directly clarify the intended definition. However, based on recent discussions about ambiguous fields in Realtime, we can observe that this is extremely difficult in practice. Any attempt to clarify the spec by adopting one interpretation inherently results in a breaking change for those who have already implemented it differently.\r\n\r\nAs a result, the approach of \"deprecating the existing ambiguous fields in the protobuf sense and introducing new, unambiguous alternatives\" seems to be the compromise that the community can currently accept. Admittedly, this approach is \"imperfect\" for everyone. (For more background on \"deprecate\", see this [comment](https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2776803681).)\r\n\r\nFrom the rider\u2019s perspective, receiving alerts before the actual impact period begins (based on `communication_period`) can be valuable in certain situations, as it allows riders to make decisions in advance. In the current change proposal, both `communication_period` and `impact_period` are `optional`. Producers can choose to provide only one of them, or ideally, both; and consumers can decide how best to present the information to riders (such as showing alerts and\/or trip planning adjustments) based on the data received. We have also added a requirement that `impact_period` must be within (or equal to) `communication_period` to ensure that consumers do not have to handle cases where there is \"no alert notification during the impact period.\"",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2786936188\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2787121654",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2787121654",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2787121654,
    "node_id":"IC_kwDOAlVrjc6mIBn2",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T17:05:12Z",
    "updated_at":"2025-04-08T17:05:12Z",
    "body":"> 3. Scheduling On-The-Fly - in theory, NEW and REPLACEMENT allow for scheduling of dynamic trips at any given point in time. Is this a concern for consumers? The example I'm thinking of is unplanned shuttle bus bridges. Say we have a storm Thursday night and catenary needs to be repaired. It'll take three days and involve spliting the rail line into a north and and south end. Given there is not enough time to put a static GTFS together, producing NEW trips for the north end and south end seems like the best option for an unplanned three day rail disruption. At the same time, we need to setup shuttle buses to ferry customers between the north end and south end of the line. That would also involve NEW trips with a \"unplanned shuttle bus\" route_id that is in the static GTFS but has no trips in trips.txt because it technically doesn't run on a schedule. Naturally the TripProperties would have no shape_id values so travel paths in all cases are covered. Is everyone ok with this kind of scheduling on-the-fly? While that might seem like a more tolerable example, is there anything that prevents an agency from defining routes with minimal GTFS trips, stop_times, or shapes and defining all that service on-the-fly other than poor trip planning- ie, define a route with one trip that has a service_id which is never active to meet the spec requirements and then build the rest out on-the-fly?\r\n> 4. Data Analysis Recommendations - given the above scenarios, what is the expectation on how consumers and 3rd parties do data analysis on these trips? Most everything is based around a static GTFS which gives structure and this setup explicitly defines ways to ignore any kind of pre-defined schedule structure entirely. Are there any thoughts or concerns there or does that fall into the bucket of \"that's up to individual agencies and 3rd parties to figure out\"? Reason I ask is because the power of this setup could lead to a situation where typical KPI's like OTP, headways, etc become more nebulous due to the lack of an underlying schedule. Wondering if any guidance should be given there or if the consortium deems that outside its scope of responsibility.\r\n\r\n@SteveGladstone I shared similar concern in [the previous comment](https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2533659798).\r\n\r\nIn principle, producers should generate data through static whenever possible, and realtime should be reserved for urgent, \"unforeseen\" situations. In addition to the data analysis reasons you mentioned here, misuse of Realtime can deprive riders of the ability to plan their trips in advance, and support for static fields is still more widespread among consumers compared to realtime.\r\n\r\nWe (MobilityData) are planning to draft a guidance to further clarify when to use static vs realtime. If this proposal passes the vote, we will try to incorporate clear guidance on this.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2787121654\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2787525097",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/528#issuecomment-2787525097",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/528",
    "id":2787525097,
    "node_id":"IC_kwDOAlVrjc6mJkHp",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-08T19:58:51Z",
    "updated_at":"2025-04-08T19:58:51Z",
    "body":"The vote passed on 2025-04-07 at 23:59:59 UTC.\r\n\r\n4 votes in favour and no votes against.\r\n\r\nVotes came from:\r\nTransit (@jll01)\r\nTrillium (@westontrillium)\r\nOpenTripPlanner (@leonardehrenfried)\r\nAubin (@miklcct)\r\n\r\nThank you to everyone who participated!",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2787525097\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2788103058",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2788103058",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2788103058,
    "node_id":"IC_kwDOAlVrjc6mLxOS",
    "user":{
      "login":"SteveGladstone",
      "id":40123203,
      "node_id":"MDQ6VXNlcjQwMTIzMjAz",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40123203?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/SteveGladstone",
      "html_url":"https:\/\/github.com\/SteveGladstone",
      "followers_url":"https:\/\/api.github.com\/users\/SteveGladstone\/followers",
      "following_url":"https:\/\/api.github.com\/users\/SteveGladstone\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/SteveGladstone\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/SteveGladstone\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/SteveGladstone\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/SteveGladstone\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/SteveGladstone\/repos",
      "events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-09T02:06:30Z",
    "updated_at":"2025-04-09T02:06:30Z",
    "body":"Here's a real world example that I experienced today on our commuter rail service (MARC)- funny enough with our real life Train 536 \ud83d\ude04 \r\n\r\nTrain 536 was terminated at stop 7 of 13 (Halethorpe) due to mechanical problems.  Passengers were to be transferred to and accommodated by Train 440 which operates roughly 30 minutes after Train 536.  \r\n\r\nHowever, Train 440 ends its trip at station 9 (Penn Station) that Train 536 would have served and continued past if it was physically capable of doing so.  At that point, Train 440 became Train 536 again and continued to the last 4 stations (10 to 13) per Train 536's schedule (with a significant delay).  \r\n\r\nIn effect, Train 440 was operating as Train 440 and Train 536 at the same time before becoming Train 536 again.  \r\n\r\nWould REPLACEMENT have worked in this situation?  If so, how do you think riders waiting to be picked up would see and understand the replacement in their apps\/maps?  And if not, what would you recommend the proper solution to be?  \r\n\r\nI ask because it seems like REPLACEMENT is the proposed way to handle this since another trip (Train 440) is sorta kinda \"replacing\" Train 536 due to a breakdown, but our agency knows the train will continue further than Train 440's scheduled last stop and our riders care about Train 536 because they know Train 440 does not serve those other stops.  And given this proposal, I don't know what the best way to set all that up such that trip planners and realtime applications would be able to follow it using the REPLACEMENT enum.  Hence asking!",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2788103058\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2788391609",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2788391609",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2788391609,
    "node_id":"IC_kwDOAlVrjc6mM3q5",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-09T06:18:29Z",
    "updated_at":"2025-04-09T06:18:29Z",
    "body":"Do _you_ feel that train 440 replaces 536? From your description I would say no, because 440 ran anyway and just happened to pick up the stranded passengers.\r\n\r\nIf I was to write some guidelines (and I usually don't) I would say that REPLACEMENT is appropriate when trip A is replaced _as a whole_ by trip B.\r\n\r\nI don't think there is anything in the spec to 100% cover the situation you describe. I would send an alert targeting train 536.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2788391609\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2788773196",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2788773196",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2788773196,
    "node_id":"IC_kwDOAlVrjc6mOU1M",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-09T08:27:49Z",
    "updated_at":"2025-04-09T08:31:20Z",
    "body":"> Here's a real world example that I experienced today on our commuter rail service (MARC)- funny enough with our real life Train 536 \ud83d\ude04 \n> \n> Train 536 was terminated at stop 7 of 13 (Halethorpe) due to mechanical problems.  Passengers were to be transferred to and accommodated by Train 440 which operates roughly 30 minutes after Train 536.  \n> \n> However, Train 440 ends its trip at station 9 (Penn Station) that Train 536 would have served and continued past if it was physically capable of doing so.  At that point, Train 440 became Train 536 again and continued to the last 4 stations (10 to 13) per Train 536's schedule (with a significant delay).  \n> \n> In effect, Train 440 was operating as Train 440 and Train 536 at the same time before becoming Train 536 again.  \n> \n> Would REPLACEMENT have worked in this situation?  If so, how do you think riders waiting to be picked up would see and understand the replacement in their apps\/maps?  And if not, what would you recommend the proper solution to be?  \n> \n> I ask because it seems like REPLACEMENT is the proposed way to handle this since another trip (Train 440) is sorta kinda \"replacing\" Train 536 due to a breakdown, but our agency knows the train will continue further than Train 440's scheduled last stop and our riders care about Train 536 because they know Train 440 does not serve those other stops.  And given this proposal, I don't know what the best way to set all that up such that trip planners and realtime applications would be able to follow it using the REPLACEMENT enum.  Hence asking!\n\nIt is complicated. It should be modelled as a through service of 440 and the second 536 (i.e. two trips with in-seat transfer), where the latter would be a NEW TripUpdate (because there were effectively two 536s, and they can't share the same trip_id) and the final stops running late. \n\nHowever, this requires real-time support of transfer types, which is out of scope of this proposal. Otherwise, journey planners would show that the stranded passengers need to transfer to the new 536 at the final stop of the 440.\n\nIf you, instead, choose to extend the 440 with additional stops at the end, it will simply be a REPLACEMENT trip of the original 440 (not the 536).",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2788773196\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2792482087",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2792482087",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2792482087,
    "node_id":"IC_kwDOAlVrjc6mceUn",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-10T11:49:38Z",
    "updated_at":"2025-04-10T11:55:59Z",
    "body":"> Sorry for adding these comments so late in the game. Overall these changes look really good. Most of my comments are minor and formalizing things that are in the discussion comments.\r\n> \r\n> Like @SteveGladstone, I can't find where \"REPLACEMENT is considered an atomic \"DELETE-then-NEW\" but with the same trip id\" is stated in this set of changes. I also haven't found any statement in these changes that a REPLACEMENT trip needs to use a `trip_id` from the static GTFS, so I've added proposed changes to state these things in a few places.\r\n\r\nI have decided not to write it into the specification because.\r\n\r\n1. The proposal is now in the voting phase and I am afraid this may be considered a material change which may invalidate the voting.\r\n2. The atomic DELETE-then-NEW behaviour was first mentioned in some previous issues on short-term changes on consumers failing to process one of the two TripUpdates, causing confusion to riders. The use of a REPLACEMENT solves this issue perfectly. as it is only one TripUpdate.\r\n3. The atomic DELETE-then-NEW behaviour is the implementation in OpenTripPlanner, but I am open to other consumers using a different implementation as long as it achieves the same effect.\r\n\r\nSorry for the confusion. I have updated the original comment which now reads \"REPLACEMENT can be implemented with\" rather than \"considered as\".\r\n\r\n> \r\n> There needs to be more guidance on how to publish a trip cancellation for a NEW or DUPLICATED trip. The updated best practices says this:\r\n> \r\n> > If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`, unless the trip was a `NEW` or `DUPLICATED` trip and was subsequently canceled.\r\n> \r\n> But this doesn't provide enough guidance. Should a NEW or DUPLICATED trip that is canceled after it is first published maintain `schedule_relationship` of NEW or DUPLICATED with all stops having `schedule_relationship = SKIPPED` and scheduled arrival and departure times must be defined?\r\n\r\nIn this case, yes, because otherwise it is impossible to know when and where the cancelled trip runs.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2792482087\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2792512874",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2792512874",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2792512874,
    "node_id":"IC_kwDOAlVrjc6mcl1q",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-10T12:02:46Z",
    "updated_at":"2025-04-10T12:02:46Z",
    "body":"@sam-hickey-arcadis The CLA check now fails because I have applied some of your review suggestions.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2792512874\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2794066701",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2794066701",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2794066701,
    "node_id":"IC_kwDOAlVrjc6mihMN",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-10T14:55:17Z",
    "updated_at":"2025-04-10T14:55:17Z",
    "body":"@miklcct we actually considered an [alternative approach](https:\/\/docs.google.com\/document\/d\/1Fcr4ETtEbAbPoot_a24xUf7xijVx0Bn-GP7Y-hodY8w\/edit?tab=t.0#heading=h.8egnmwvy0o2v) (new separate file) during the early stages of the proposal which could potentially allow matching fare media to agency_id and route_id at the cost of being slightly more complex.\r\n\r\nAfter some discussions with stakeholders in the fares working group, the current solution was preferred for being extremely simple to implement. That was the main goal, not to cover every payment method, but to provide a quick shortcut for contactless payments since their adoption has become especially relevant.  \r\n  \r\nStill, your point is fair, and we believe it warrants further discussion. If it's okay with you, we would like to invite you to participate in the next Fares working group meeting on April 22nd, so we can revisit this topic and have a broader discussion with the rest of the participants. \r\n\r\nYou can sign up using the following [link](https:\/\/www.eventbrite.ca\/e\/specifications-discussions-gtfs-fares-v2-monthly-meetings-tickets-1230506009599?aff=ebdsshcopyurl&utm-campaign=social&utm-content=attendeeshare&utm-medium=discovery&utm-term=listing&utm-source=cp). Anyone else interested in this or any other Fares-related proposal is welcomed to join.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2794066701\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2795089636",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2795089636",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2795089636,
    "node_id":"IC_kwDOAlVrjc6mma7k",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-10T20:29:32Z",
    "updated_at":"2025-04-10T20:29:32Z",
    "body":"> 3. The atomic DELETE-then-NEW behaviour is the implementation in OpenTripPlanner, but I am open to other consumers using a different implementation as long as it achieves the same effect.\r\n\r\nThat's a fair and good point.\r\n\r\n> > There needs to be more guidance on how to publish a trip cancellation for a NEW or DUPLICATED trip. The updated best practices says this:\r\n> > > If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`, unless the trip was a `NEW` or `DUPLICATED` trip and was subsequently canceled.\r\n> > \r\n> > \r\n> > But this doesn't provide enough guidance. Should a NEW or DUPLICATED trip that is canceled after it is first published maintain `schedule_relationship` of NEW or DUPLICATED with all stops having `schedule_relationship = SKIPPED` and scheduled arrival and departure times must be defined?\r\n> \r\n> In this case, yes, because otherwise it is impossible to know when and where the cancelled trip runs.\r\n\r\nWhat about using `schedule_relationship = CANCELED` but still publishing `StopTimeUpdate`s with scheduled arrival and departure times and `schedule_relationship = SKIPPED`? This would allow consumers to more easily conclude that the entire trip is canceled without having to check that all stops on the trip are SKIPPED, and it would still maintain the scheduled times.\r\n\r\nI think this needs to be formalized in the specification, but that could happen in the future (at a minimum, before removing the experimental tags). I don't think that needs to happen now and doesn't need to hold up this vote. \r\n",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2795089636\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2795450840",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2795450840",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2795450840,
    "node_id":"IC_kwDOAlVrjc6mnzHY",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-10T23:58:36Z",
    "updated_at":"2025-04-10T23:58:36Z",
    "body":"> @sam-hickey-arcadis The CLA check now fails because I have applied some of your review suggestions.\r\n\r\nI'm working on this.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2795450840\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2795477001",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/536#issuecomment-2795477001",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/536",
    "id":2795477001,
    "node_id":"IC_kwDOAlVrjc6mn5gJ",
    "user":{
      "login":"matikin9",
      "id":1873072,
      "node_id":"MDQ6VXNlcjE4NzMwNzI=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1873072?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/matikin9",
      "html_url":"https:\/\/github.com\/matikin9",
      "followers_url":"https:\/\/api.github.com\/users\/matikin9\/followers",
      "following_url":"https:\/\/api.github.com\/users\/matikin9\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/matikin9\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/matikin9\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/matikin9\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/matikin9\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/matikin9\/repos",
      "events_url":"https:\/\/api.github.com\/users\/matikin9\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/matikin9\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-11T00:18:56Z",
    "updated_at":"2025-04-11T00:18:56Z",
    "body":"That's a good point about these more complex plural forms!  For those, I typically see liberties taken with the plural form.  So \"indexes\" rather than \"indices\".",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2795477001\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2797513797",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2797513797",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2797513797,
    "node_id":"IC_kwDOAlVrjc6mvqxF",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-11T17:07:40Z",
    "updated_at":"2025-04-11T17:07:40Z",
    "body":"+1 Arcadis",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2797513797\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2797691680",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2797691680",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2797691680,
    "node_id":"IC_kwDOAlVrjc6mwWMg",
    "user":{
      "login":"bdferris-v2",
      "id":26211219,
      "node_id":"MDQ6VXNlcjI2MjExMjE5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26211219?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/bdferris-v2",
      "html_url":"https:\/\/github.com\/bdferris-v2",
      "followers_url":"https:\/\/api.github.com\/users\/bdferris-v2\/followers",
      "following_url":"https:\/\/api.github.com\/users\/bdferris-v2\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/bdferris-v2\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/bdferris-v2\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/bdferris-v2\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/bdferris-v2\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/bdferris-v2\/repos",
      "events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-11T18:09:15Z",
    "updated_at":"2025-04-11T18:09:15Z",
    "body":"+1 Google\r\n\r\nI will say that I share some of the same concerns raised by @SteveGladstone and @sam-hickey-arcadis about `REPLACEMENT` but since the field is still marked as experimental, I guess that's a discussion for another day.  In particular, reconciling TripModifications and `REPLACEMENT` is something to keep an eye on sooner rather than later as these two experimental fields start to gain adoption.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2797691680\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2797727493",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2797727493",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2797727493,
    "node_id":"IC_kwDOAlVrjc6mwe8F",
    "user":{
      "login":"SteveGladstone",
      "id":40123203,
      "node_id":"MDQ6VXNlcjQwMTIzMjAz",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/40123203?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/SteveGladstone",
      "html_url":"https:\/\/github.com\/SteveGladstone",
      "followers_url":"https:\/\/api.github.com\/users\/SteveGladstone\/followers",
      "following_url":"https:\/\/api.github.com\/users\/SteveGladstone\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/SteveGladstone\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/SteveGladstone\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/SteveGladstone\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/SteveGladstone\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/SteveGladstone\/repos",
      "events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/SteveGladstone\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-11T18:25:16Z",
    "updated_at":"2025-04-11T18:25:16Z",
    "body":"+1 Maryland Transit Administration.  Looking forward to leveraging NEW trip functionality \ud83d\ude04 ",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2797727493\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2799940993",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2799940993",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2799940993,
    "node_id":"IC_kwDOAlVrjc6m47WB",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-13T12:49:22Z",
    "updated_at":"2025-04-13T12:49:22Z",
    "body":"The voting is now closed. There are 9 votes supporting this proposal and 1 abstention. Therefore the proposal is passed.\n\nThere are a few grammatic changes needed as mentioned by @bdferris-v2 before merging. I'll handle them tomorrow.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2799940993\/reactions",
      "total_count":2,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":2,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2802097646",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#issuecomment-2802097646",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/546",
    "id":2802097646,
    "node_id":"IC_kwDOAlVrjc6nBJ3u",
    "user":{
      "login":"skalexch",
      "id":58088899,
      "node_id":"MDQ6VXNlcjU4MDg4ODk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/58088899?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skalexch",
      "html_url":"https:\/\/github.com\/skalexch",
      "followers_url":"https:\/\/api.github.com\/users\/skalexch\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skalexch\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skalexch\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skalexch\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skalexch\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skalexch\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skalexch\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skalexch\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skalexch\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-14T15:29:45Z",
    "updated_at":"2025-04-14T15:29:56Z",
    "body":"Based on the conversation above, I added `[deprecated=true]` to `active_period`. I also added the new enums to the .proto file.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2802097646\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2802123286",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2802123286",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2802123286,
    "node_id":"IC_kwDOAlVrjc6nBQIW",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-14T15:37:33Z",
    "updated_at":"2025-04-14T15:37:33Z",
    "body":"> The voting is now closed. There are 9 votes supporting this proposal and 1 abstention. Therefore the proposal is passed.\r\n> \r\n> There are a few grammatic changes needed as mentioned by @bdferris-v2 before merging. I'll handle them tomorrow.\r\n\r\nThe editorial changes have been done, waiting for @sam-hickey-arcadis to complete his CLA such that this PR can be merged.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2802123286\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2805993117",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/466#issuecomment-2805993117",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/466",
    "id":2805993117,
    "node_id":"IC_kwDOAlVrjc6nQA6d",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-15T15:10:03Z",
    "updated_at":"2025-04-15T15:10:03Z",
    "body":"I have just found out that PID is using [an extension](https:\/\/pid.cz\/en\/opendata\/#h-gtfs) by using `bikes_allowed` in `stop_times.txt`\n\n> bikes_allowed determines the possibilities of transporting bicycles on the service at a given stop\n> 0 = no information about bicycle transportation\n> 1 = bicycle transportation is possible\n> 2 = bicycle transportation is not possible\n> 3 = bicycle transportation is possible, but it is not possible to board or alight with the bicycle at this stop\n> 4 = bicycle transportation is possible or to board with the bicycle, but it is not possible to alight with the bicycle\n> 5 = bicycle transportation is possible or to alight with the bicycle, but it is not possible to board with the bicycle\n\nDoes anyone know if there are any other agencies using unofficial extension to describe similar features, so I can make proposals in a way to be compatible with most unofficial implementations?",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2805993117\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806360362",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/549#issuecomment-2806360362",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/549",
    "id":2806360362,
    "node_id":"IC_kwDOAlVrjc6nRakq",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-15T15:38:25Z",
    "updated_at":"2025-04-15T15:39:18Z",
    "body":"The part \"using only `fare_leg_rules.txt`\" does not really make sense because `fare_leg_rules.txt` references other files via foreign keys. Or if you really want to only have one file, the answer is that it's not possible. For your use case you'd have to at least define `networks.txt` and `route_networks.txt` where you assign each route to its network so you can reference it via `fare_leg_rules.network_id` and assign the appropriate `fare_product_id` (which means you need also `fare_products.txt` and possibly `rider_categories.txt` and `fare_media.txt` to reference them from `fare_products.txt`).",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806360362\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806467555",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/549#issuecomment-2806467555",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/549",
    "id":2806467555,
    "node_id":"IC_kwDOAlVrjc6nR0vj",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-15T15:47:40Z",
    "updated_at":"2025-04-15T15:47:40Z",
    "body":"The current specification does not allow me to assign a route to multiple networks.\n\nIn `route_networks.txt`\n\n> Identifies a network to which one or multiple route_ids belong. A route_id can only be defined in one network_id.\n\nIs it a deficiency of the standard?",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806467555\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806701169",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/551#issuecomment-2806701169",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/551",
    "id":2806701169,
    "node_id":"IC_kwDOAlVrjc6nStxx",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-15T16:15:48Z",
    "updated_at":"2025-04-15T16:16:41Z",
    "body":"Previous discussion for reference: https:\/\/github.com\/google\/transit\/issues\/389, https:\/\/github.com\/google\/transit\/pull\/405",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806701169\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806755786",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/549#issuecomment-2806755786",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/549",
    "id":2806755786,
    "node_id":"IC_kwDOAlVrjc6nS7HK",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-15T16:27:32Z",
    "updated_at":"2025-04-15T16:27:32Z",
    "body":"To be followed in #551 ",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2806755786\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2812559191",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/551#issuecomment-2812559191",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/551",
    "id":2812559191,
    "node_id":"IC_kwDOAlVrjc6npD9X",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-17T11:23:10Z",
    "updated_at":"2025-04-17T11:23:10Z",
    "body":"What you describe would not require a mapping from one route to several networks. It can be done using `fare_transfer_rules.txt`.\n\nNetworks:\n  - A (here: National Rail)\n  - B (here: Underground)\n\nTickets:\n  - A\n  - B\n  - AB (here: contactless)\n\nFare Rules (multiple rules apply to each A and B!):\n  - network=A -> regular A ticket\n  - network=B -> regular B ticket\n  - network=A -> contactless AB ticket, `fare_leg_group_id=AB`\n  - network=B -> contactless AB ticket, `fare_leg_group_id=AB`\n\nOne Fare Transfer to allow using AB ticket for AB:\n  - from_leg_group=AB\n  - to_leg_group=AB\n  - fare_transfer_type=0\n  - (no transfer product)",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2812559191\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2812873141",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/551#issuecomment-2812873141",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/551",
    "id":2812873141,
    "node_id":"IC_kwDOAlVrjc6nqQm1",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-17T13:18:13Z",
    "updated_at":"2025-04-17T13:29:23Z",
    "body":"> What you describe would not require a mapping from one route to several networks. It can be done using `fare_transfer_rules.txt`.\n> \n> Networks:\n> \n> * A (here: National Rail)\n> * B (here: Underground)\n> \n> Tickets:\n> \n> * A\n> * B\n> * AB (here: contactless)\n> \n> Fare Rules (multiple rules apply to each A and B!):\n> \n> * network=A -> regular A ticket\n> * network=B -> regular B ticket\n> * network=A -> contactless AB ticket, `fare_leg_group_id=AB`\n> * network=B -> contactless AB ticket, `fare_leg_group_id=AB`\n> \n> One Fare Transfer to allow using AB ticket for AB:\n> \n> * from_leg_group=AB\n> * to_leg_group=AB\n> * fare_transfer_type=0\n> * (no transfer product)\n\nSorry, your modelling does not work here.\nIf my journey is from X to Y on network A then Y to Z on network B with integrated fare, the fare charged needs to be a contactless X to Z fare for use of both networks. Your modelling implies that the second leg is completely free when fare_transfer_type = 0 and no transfer product.\n\nAlso, there isn't a \"contactless AB ticket\" here. The fares are defined on a point-to-point basis and, as such, it cannot be modelled as transfers as the system doesn't care where you change trains (except very limited situations where the system does care).",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2812873141\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813337369",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/555#issuecomment-2813337369",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/555",
    "id":2813337369,
    "node_id":"IC_kwDOAlVrjc6nsB8Z",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-17T15:33:12Z",
    "updated_at":"2025-04-17T15:42:01Z",
    "body":"Regarding London's PAYG, the Fares Working Group had some related proposals and discussions in the past. Here's a [proposal addressing \"network sets,\"](https:\/\/docs.google.com\/document\/d\/16IIvlVCqdHw3z84Xv_wGspRcl5uKHsvVKqdrZTBk1GI\/edit?tab=t.0#heading=h.hh2l9k6b2on9) which is not yet included in the current specification. We plan to discuss this in next Tuesday\u2019s working group meeting.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813337369\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813386768",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/555#issuecomment-2813386768",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/555",
    "id":2813386768,
    "node_id":"IC_kwDOAlVrjc6nsOAQ",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-17T15:45:32Z",
    "updated_at":"2025-04-17T15:45:32Z",
    "body":"> Regarding London's PYAG, the Fares Working Group had some related proposals and discussions in the past. Here's a [proposal addressing \"network sets,\"](https:\/\/docs.google.com\/document\/d\/16IIvlVCqdHw3z84Xv_wGspRcl5uKHsvVKqdrZTBk1GI\/edit?tab=t.0#heading=h.hh2l9k6b2on9) which is not yet included in the current specification. We plan to discuss this in next Tuesday\u2019s working group meeting.\n\nFor the London PAYG network, the fare isn't exactly defined by the route network you have used. It is defined by the interchange station used (for example, some TFL-TOC through journeys does not charge you such a fare if you can avoid certain interchange stations, for example, Farringdon - Wimbledon is always TfL fare regardless if you use a TfL service, TOC service, or both, and only triggers a through fare if you change at certain stations).",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813386768\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813663647",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/423#issuecomment-2813663647",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/423",
    "id":2813663647,
    "node_id":"IC_kwDOAlVrjc6ntRmf",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-17T17:51:04Z",
    "updated_at":"2025-04-17T17:51:04Z",
    "body":"@felixguendling would Motis be interested in implementing this?",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813663647\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813698021",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/423#issuecomment-2813698021",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/423",
    "id":2813698021,
    "node_id":"IC_kwDOAlVrjc6ntZ_l",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-17T18:09:41Z",
    "updated_at":"2025-04-17T18:09:41Z",
    "body":"Yes, I think this makes sense and should be easy to implement in case it gets standardized.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2813698021\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2820143998",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/483#issuecomment-2820143998",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/483",
    "id":2820143998,
    "node_id":"IC_kwDOAlVrjc6oF_t-",
    "user":{
      "login":"bdferris-v2",
      "id":26211219,
      "node_id":"MDQ6VXNlcjI2MjExMjE5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/26211219?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/bdferris-v2",
      "html_url":"https:\/\/github.com\/bdferris-v2",
      "followers_url":"https:\/\/api.github.com\/users\/bdferris-v2\/followers",
      "following_url":"https:\/\/api.github.com\/users\/bdferris-v2\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/bdferris-v2\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/bdferris-v2\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/bdferris-v2\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/bdferris-v2\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/bdferris-v2\/repos",
      "events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/bdferris-v2\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-22T05:51:55Z",
    "updated_at":"2025-04-22T05:51:55Z",
    "body":"(Apologies, not many cycles to think about Fares v2 these days)\r\n\r\nReflecting on this proposal and the [Trip Groups proposal](https:\/\/docs.google.com\/document\/d\/1Y3fmGDDtgedOSfKbHOkv4bmNClM90ysl7ulrvVToGKM\/edit?tab=t.0#heading=h.vn22rj72fuo9), I wanted to propose an alternate file naming scheme for sets:\r\n\r\n* `[entity]_sets.txt` - defines sets containing the specified entity type\r\n* `[entity]_set_elements.txt` - defines the elements of the set of the specified entity type\r\n\r\nSo then we'd have:\r\n\r\n* `area_sets.txt` and `area_set_elements.txt`\r\n* `network_sets.txt` and `network_set_elements.txt`\r\n* `trip_sets.txt and `trip_set_elements.txt` - (I know the proposal was trip groups, but maybe this would be better?)\r\n* ... and so on for future types\r\n\r\n@halbertram thoughts?\r\n\r\n",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2820143998\/reactions",
      "total_count":3,
      "+1":3,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2820818819",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2820818819",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2820818819,
    "node_id":"IC_kwDOAlVrjc6oIkeD",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-22T10:02:05Z",
    "updated_at":"2025-04-22T10:05:36Z",
    "body":"> @stevenmwhite If it were closer to the rest of fare info, that would prevent it from being Fares version-agnostic, since we'd have to choose the structure it is closer to. Keeping its current design means that anyone can implement it\u2014whether your GTFS has Fares v1, v2, or no fare info at all. Knowing if cEMV payment is supported is valuable by itself, so I think it's reasonable to have it reside in the category of \"general information about the agency\" (with the ability to specify for different routes if needed). There is also precedent for fare info to exist at the agency level (and route level, although that example is not self-contained).\r\n> \r\n> @miklcct I think this extension has a more targeted goal: To allow trip planning apps to accurately show what is now a globally recognized symbol indicating that a specific technology (cEMV) is enabled for a transit service.\r\n\r\nI have given some thought in this proposal over the last week and I think this is an extremely poor proposal, as it is:\r\n\r\n- meaningless: which kinds of cEMV are accepted. Does it accept American Express? Does it accept UnionPay? Does it accept JCB? ......\r\n- ambiguous: what does it mean to \"access a transit service\"? cEMV on transit has [multiple modes of operation](https:\/\/blog.masabi.com\/blog\/everything-you-need-to-know-about-contactless-ticketing-for-public-transport-cemv). Does this field mean cEMV can be used to pay the fare directly without buying a ticket, or does it mean something else?\r\n- non-scalable: if transit agency wants to promote that they accept \/ do not accept cash, SMS, or any other payment method, it will need to create another field, potentially adding another dozen of fields into `agency.txt` and `routes.txt`. This is also a concern I mentioned in https:\/\/github.com\/google\/transit\/pull\/547 as well, but at least, in my opionion, that proposal for car routing has well-defined semantics, is easy-to-implement with immediate real-world usage so I think it is a good compromise on the non-scalability.\r\n\r\nFor example, in the UK, some companies accept cEMV in terms of tap on tap off, but others still require the use of a ticket, that can be obtained on board using cEMV, while some companies require the use of a ticket, which must be bought beforehand (before boarding the vehicle) and can be done by cEMV. These are 3 very different uses of cEMV and this proposal do not well-define which it means. There are also other agencies in other countries implemented the use of preloading tickets into cEMV (not physically, but associating them with an account) as well.\r\n\r\nI now think that a better idea is to link `routes.txt` or `agency.txt` with `fare_media.txt`, possibly with another optional intermediate file, freeing the agency's need to define the full fare rules for their services.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2820818819\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2821165651",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/483#issuecomment-2821165651",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/483",
    "id":2821165651,
    "node_id":"IC_kwDOAlVrjc6oJ5JT",
    "user":{
      "login":"halbertram",
      "id":3595662,
      "node_id":"MDQ6VXNlcjM1OTU2NjI=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/3595662?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/halbertram",
      "html_url":"https:\/\/github.com\/halbertram",
      "followers_url":"https:\/\/api.github.com\/users\/halbertram\/followers",
      "following_url":"https:\/\/api.github.com\/users\/halbertram\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/halbertram\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/halbertram\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/halbertram\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/halbertram\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/halbertram\/repos",
      "events_url":"https:\/\/api.github.com\/users\/halbertram\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/halbertram\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-22T12:24:45Z",
    "updated_at":"2025-04-22T12:24:45Z",
    "body":"I think that makes sense given the various options.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2821165651\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2821478949",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/545#issuecomment-2821478949",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/545",
    "id":2821478949,
    "node_id":"IC_kwDOAlVrjc6oLFol",
    "user":{
      "login":"timMillet",
      "id":29546082,
      "node_id":"MDQ6VXNlcjI5NTQ2MDgy",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/29546082?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/timMillet",
      "html_url":"https:\/\/github.com\/timMillet",
      "followers_url":"https:\/\/api.github.com\/users\/timMillet\/followers",
      "following_url":"https:\/\/api.github.com\/users\/timMillet\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/timMillet\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/timMillet\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/timMillet\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/timMillet\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/timMillet\/repos",
      "events_url":"https:\/\/api.github.com\/users\/timMillet\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/timMillet\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-22T14:13:42Z",
    "updated_at":"2025-04-22T14:13:42Z",
    "body":"IMHO, there are 2 issues with the current proposition:\r\n\r\n1. Missing precedence rule\r\n\r\nAlthough the proposition is agnostic between Fares v1 and Fares v2, it brings a way of defining cEMV support as Fares v2 already does. I don\u2019t see a rule of precedence in case contradictory information is provided between `agency.cemv_support` and `routes.cemv_support` on one hand, and any Fares v2 rules in `fares_media.txt` on the other hand.\r\n\r\nI strongly suggest that this proposition provides a rule of precedence (in any way) to prevent this conflict from happening. The information provided by the data producer must be as explicit as possible to reduce all possible data misinterpretations by any consumers.\r\n\r\n2. Data modelling\r\n\r\nI understand that this proposition was made to make cEMV support definition as simple as possible, and I\u2019m entirely convinced that this is needed and meaningful, but not only for cEMV. IMHO, from the rider\u2019s perspective, free fares are as important as cEMV fares, as there is no need to buy anything before boarding vehicles\/entering stations. Also, transit agencies working with Transit generally like to promote their free routes. Providing a simple way of defining any payment forms (cEMV, none\/free, physical paper ticket, physical transit card, mobile app, something else in the future?) is important.\r\n\r\nIn this way, I agree with @miklcct that this proposition doesn\u2019t scale. I think there can be a better way of simply defining payment forms than potentially adding 5 new fields in both agency.txt and routes.txt, starting with `cemv_support`. At the same time, the suggested [Option B](https:\/\/docs.google.com\/document\/d\/1Fcr4ETtEbAbPoot_a24xUf7xijVx0Bn-GP7Y-hodY8w\/edit?tab=t.0#heading=h.8egnmwvy0o2v) is more complex than needed: it adds one new file specifically for cEMV support, and allows defining cEMV support per trip and stop.\r\n\r\nThere should be a solution between this current PR and option B. For example, and similarly to what was suggested in the comment above, it could be one new file `simple_fares.txt` (actual name TBD)  with 3 fields `agency_id`, `route_id`, and `fare_media_type`; the last field enumerating the same options as `fare_media.fare_media_type`. Even though this file is inspired by `fare_media.txt`, it\u2019d be Fares v1\/v2 agnostic.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2821478949\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2822371005",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#issuecomment-2822371005",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/544",
    "id":2822371005,
    "node_id":"IC_kwDOAlVrjc6oOfa9",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-22T20:11:59Z",
    "updated_at":"2025-04-22T20:11:59Z",
    "body":"### \ud83d\udce2 Announcement\r\nAfter reviewing your comments and committing the changes over the past month, we\u2019re ready to move forward. We\u2019ll launch the vote on this proposal on **May 1, 2025**. If you haven\u2019t had a chance to review it yet, we encourage you to do so before then. The voting period is expected to last **two weeks.**",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2822371005\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2823986477",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/556#issuecomment-2823986477",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/556",
    "id":2823986477,
    "node_id":"IC_kwDOAlVrjc6oUp0t",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-23T11:33:37Z",
    "updated_at":"2025-04-23T11:41:12Z",
    "body":"I have a question about `distance_leg_join_type=1` in the proposal. The proposal lists the Netherlands system as an example but it shows that a journey consisting of 3 legs on different operators will charge a total price of more than 3 legs on their own, and some of the mileages are double-counted after the transfers. (for example, if I travel 100 km by NS, than 1 km by GVB, the proposal document says that I will pay for 100 km on NS and 101 km on GVB) I don't think it can be right here, can anyone give me some authoritative source to support the finding?\r\n\r\nFrom what I read before, the Netherland system is that, for transfers across operators, the distance-based fares are completely separate (no joining); for transfers within the same operator, the distance accumulates (i.e. `distance_leg_join_type=0`.\r\n\r\nThe whole `distance_leg_join_type=1` graph modelling shows that the same mileage is double or even triple-charged as the number of transfers accumulate.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2823986477\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2829197246",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#issuecomment-2829197246",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/542",
    "id":2829197246,
    "node_id":"IC_kwDOAlVrjc6ooh--",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-25T01:48:48Z",
    "updated_at":"2025-04-25T01:48:48Z",
    "body":"I'll start the vote on Monday if there are no further objections to the proposal!",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2829197246\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2829890949",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2829890949",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2829890949,
    "node_id":"IC_kwDOAlVrjc6orLWF",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-25T09:33:19Z",
    "updated_at":"2025-04-25T09:33:19Z",
    "body":"> > The voting is now closed. There are 9 votes supporting this proposal and 1 abstention. Therefore the proposal is passed.\r\n> > There are a few grammatic changes needed as mentioned by @bdferris-v2 before merging. I'll handle them tomorrow.\r\n> \r\n> The editorial changes have been done, waiting for @sam-hickey-arcadis to complete his CLA such that this PR can be merged.\r\n\r\n@sam-hickey-arcadis the CLA is still hasn't done yet",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2829890949\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2830435878",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/310#issuecomment-2830435878",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/310",
    "id":2830435878,
    "node_id":"IC_kwDOAlVrjc6otQYm",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-25T13:27:42Z",
    "updated_at":"2025-04-25T13:27:42Z",
    "body":"The main problem of this is that some distinction is not universal, i.e. perceived as a different mode in a region, but not in another region.\n\nExamples:\nBus vs van: They are clearly different in Hong Kong. They are legally and practically different and they are regulated differently. They can't be exchanged with the other. There were historically bus routes using van vehicles but those van vehicles can't be exchanged with normal vans. Kaliningrad also distinguishes between bus routes and minibus routes. Such distinction does not exist in the UK.\n\nSimilar arguments can be made between bus \/ trolleybus.\n\nBus vs coach: The distinction here is not the vehicle used, but the method of operation.\nBuses generally can't be reserved and allow standing passengers, but coaches usually need to be reserved and don't allow standing passengers. They are also regulated differently.\n\nIntercity vs suburban rail: In Finland, they are clearly different. In the UK, there is no distinction.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2830435878\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2830660845",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/514#issuecomment-2830660845",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/514",
    "id":2830660845,
    "node_id":"IC_kwDOAlVrjc6ouHTt",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-25T14:54:08Z",
    "updated_at":"2025-04-25T14:54:08Z",
    "body":"I don't think it is a valid use case. You should define two non-overlapping time windows. Overlaps cause confusion to the actual headway.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2830660845\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2831950475",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/557#issuecomment-2831950475",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/557",
    "id":2831950475,
    "node_id":"IC_kwDOAlVrjc6ozCKL",
    "user":{
      "login":"fredericsimard",
      "id":85687350,
      "node_id":"MDQ6VXNlcjg1Njg3MzUw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/85687350?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/fredericsimard",
      "html_url":"https:\/\/github.com\/fredericsimard",
      "followers_url":"https:\/\/api.github.com\/users\/fredericsimard\/followers",
      "following_url":"https:\/\/api.github.com\/users\/fredericsimard\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/fredericsimard\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/fredericsimard\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/fredericsimard\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/fredericsimard\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/fredericsimard\/repos",
      "events_url":"https:\/\/api.github.com\/users\/fredericsimard\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/fredericsimard\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-26T08:08:40Z",
    "updated_at":"2025-04-26T08:08:40Z",
    "body":"Already resolved, thanks for alerting us.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2831950475\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2831950598",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/557#issuecomment-2831950598",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/557",
    "id":2831950598,
    "node_id":"IC_kwDOAlVrjc6ozCMG",
    "user":{
      "login":"fredericsimard",
      "id":85687350,
      "node_id":"MDQ6VXNlcjg1Njg3MzUw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/85687350?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/fredericsimard",
      "html_url":"https:\/\/github.com\/fredericsimard",
      "followers_url":"https:\/\/api.github.com\/users\/fredericsimard\/followers",
      "following_url":"https:\/\/api.github.com\/users\/fredericsimard\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/fredericsimard\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/fredericsimard\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/fredericsimard\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/fredericsimard\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/fredericsimard\/repos",
      "events_url":"https:\/\/api.github.com\/users\/fredericsimard\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/fredericsimard\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-26T08:08:56Z",
    "updated_at":"2025-04-26T08:08:56Z",
    "body":"Already resolved, thanks for alerting us.",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2831950598\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":{
      "id":7100,
      "client_id":"Iv1.37ba7cd714104547",
      "slug":"slack",
      "node_id":"MDM6QXBwNzEwMA==",
      "owner":{
        "login":"github",
        "id":9919,
        "node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
        "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/9919?v=4",
        "gravatar_id":"",
        "url":"https:\/\/api.github.com\/users\/github",
        "html_url":"https:\/\/github.com\/github",
        "followers_url":"https:\/\/api.github.com\/users\/github\/followers",
        "following_url":"https:\/\/api.github.com\/users\/github\/following{\/other_user}",
        "gists_url":"https:\/\/api.github.com\/users\/github\/gists{\/gist_id}",
        "starred_url":"https:\/\/api.github.com\/users\/github\/starred{\/owner}{\/repo}",
        "subscriptions_url":"https:\/\/api.github.com\/users\/github\/subscriptions",
        "organizations_url":"https:\/\/api.github.com\/users\/github\/orgs",
        "repos_url":"https:\/\/api.github.com\/users\/github\/repos",
        "events_url":"https:\/\/api.github.com\/users\/github\/events{\/privacy}",
        "received_events_url":"https:\/\/api.github.com\/users\/github\/received_events",
        "type":"Organization",
        "user_view_type":"public",
        "site_admin":false
      },
      "name":"Slack",
      "description":"Connect your code to your conversations; stay updated on projects, fix bugs, and move more work forward\u2014without leaving Slack.\r\n\r\n[Learn more and get started](https:\/\/slack.github.com\/)\r\n\r\nBy installing or using the app, you agree to the [Terms and Conditions](https:\/\/github.com\/integrations\/slack\/blob\/master\/docs\/terms-and-conditions.md).",
      "external_url":"https:\/\/slack.github.com\/",
      "html_url":"https:\/\/github.com\/apps\/slack",
      "created_at":"2017-11-30T02:22:47Z",
      "updated_at":"2024-05-02T08:38:21Z",
      "permissions":{
        "actions":"write",
        "checks":"read",
        "contents":"read",
        "deployments":"write",
        "discussions":"read",
        "issues":"write",
        "metadata":"read",
        "pull_requests":"write",
        "repository_projects":"read",
        "statuses":"read"
      },
      "events":[
        "commit_comment",
        "create",
        "delete",
        "deployment",
        "deployment_review",
        "deployment_status",
        "discussion",
        "discussion_comment",
        "issues",
        "issue_comment",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "push",
        "release",
        "reminder",
        "repository",
        "repository_dispatch",
        "status",
        "watch",
        "workflow_run"
      ]
    }
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2831959110",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/557#issuecomment-2831959110",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/557",
    "id":2831959110,
    "node_id":"IC_kwDOAlVrjc6ozERG",
    "user":{
      "login":"felixguendling",
      "id":1915889,
      "node_id":"MDQ6VXNlcjE5MTU4ODk=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/1915889?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/felixguendling",
      "html_url":"https:\/\/github.com\/felixguendling",
      "followers_url":"https:\/\/api.github.com\/users\/felixguendling\/followers",
      "following_url":"https:\/\/api.github.com\/users\/felixguendling\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/felixguendling\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/felixguendling\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/felixguendling\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/felixguendling\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/felixguendling\/repos",
      "events_url":"https:\/\/api.github.com\/users\/felixguendling\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/felixguendling\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-26T08:27:17Z",
    "updated_at":"2025-04-26T08:27:17Z",
    "body":"Thanks for the quick fix!",
    "author_association":"NONE",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2831959110\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835421120",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#issuecomment-2835421120",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/542",
    "id":2835421120,
    "node_id":"IC_kwDOAlVrjc6pARfA",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-28T14:20:38Z",
    "updated_at":"2025-04-28T14:20:38Z",
    "body":"I\u2019m opening a vote on this PR. \r\n\r\nThe changes are only clarification and are still experimental. Consumer : Transit. Producers : Swiftly, exo, Clever, GMV. \r\n\r\nVoting ends on May 5th at 23:59:59 UTC. ",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835421120\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835735695",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#issuecomment-2835735695",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/542",
    "id":2835735695,
    "node_id":"IC_kwDOAlVrjc6pBeSP",
    "user":{
      "login":"mads14",
      "id":11838516,
      "node_id":"MDQ6VXNlcjExODM4NTE2",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/11838516?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/mads14",
      "html_url":"https:\/\/github.com\/mads14",
      "followers_url":"https:\/\/api.github.com\/users\/mads14\/followers",
      "following_url":"https:\/\/api.github.com\/users\/mads14\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/mads14\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/mads14\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/mads14\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/mads14\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/mads14\/repos",
      "events_url":"https:\/\/api.github.com\/users\/mads14\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/mads14\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-28T15:58:56Z",
    "updated_at":"2025-04-28T15:58:56Z",
    "body":"+1 Swiftly \r\n\r\nthanks for the clarifications and clean up.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835735695\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835828530",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#issuecomment-2835828530",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/542",
    "id":2835828530,
    "node_id":"IC_kwDOAlVrjc6pB08y",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-28T16:31:16Z",
    "updated_at":"2025-04-28T16:31:16Z",
    "body":"Only some minor typo's.\r\n\r\nOpenGeo +1",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835828530\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835843499",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#issuecomment-2835843499",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/504",
    "id":2835843499,
    "node_id":"IC_kwDOAlVrjc6pB4mr",
    "user":{
      "login":"sam-hickey-arcadis",
      "id":18727199,
      "node_id":"MDQ6VXNlcjE4NzI3MTk5",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/18727199?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis",
      "html_url":"https:\/\/github.com\/sam-hickey-arcadis",
      "followers_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/followers",
      "following_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/repos",
      "events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/sam-hickey-arcadis\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-28T16:37:23Z",
    "updated_at":"2025-04-28T16:37:23Z",
    "body":"> > > The voting is now closed. There are 9 votes supporting this proposal and 1 abstention. Therefore the proposal is passed.\r\n> > > There are a few grammatic changes needed as mentioned by @bdferris-v2 before merging. I'll handle them tomorrow.\r\n> > \r\n> > \r\n> > The editorial changes have been done, waiting for @sam-hickey-arcadis to complete his CLA such that this PR can be merged.\r\n> \r\n> @sam-hickey-arcadis the CLA is still hasn't done yet\r\n\r\nI am working on this. Will have it complete ASAP.",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2835843499\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2836609339",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#issuecomment-2836609339",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/544",
    "id":2836609339,
    "node_id":"IC_kwDOAlVrjc6pEzk7",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-28T21:00:41Z",
    "updated_at":"2025-04-28T21:00:41Z",
    "body":"Thanks for the feedback @antrim! We really appreciate it and it's well timed. We've responded to most of your comments below, let us know what you think.\r\n\r\nWe agree that hearing from even more key stakeholders would be ideal, but at the same time, it's important to recognize that this proposal builds on over two years of active consultation and discussion, during which many community members have contributed valuable perspectives.\r\n\r\nWe also recognize that governance is an ongoing process, not something set in stone. That's why we have planned a review six months after implementation to reflect on what's working, what isn't, and how we can continue adapting to meet the needs of the community.\r\n\r\nFor a clearer view of the motivations and goals behind this work, we encourage you to review [Issue 413](https:\/\/github.com\/google\/transit\/issues\/413), where the overall scoping of this governance initiative was first outlined, and [Issue 436](https:\/\/github.com\/google\/transit\/issues\/436), which summarizes the findings of the working group, including the needs and challenges identified.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2836609339\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2836838002",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/542#issuecomment-2836838002",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/542",
    "id":2836838002,
    "node_id":"IC_kwDOAlVrjc6pFrZy",
    "user":{
      "login":"stevenmwhite",
      "id":43826990,
      "node_id":"MDQ6VXNlcjQzODI2OTkw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/43826990?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/stevenmwhite",
      "html_url":"https:\/\/github.com\/stevenmwhite",
      "followers_url":"https:\/\/api.github.com\/users\/stevenmwhite\/followers",
      "following_url":"https:\/\/api.github.com\/users\/stevenmwhite\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/stevenmwhite\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/stevenmwhite\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/stevenmwhite\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/stevenmwhite\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/stevenmwhite\/repos",
      "events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-28T22:05:56Z",
    "updated_at":"2025-04-28T22:05:56Z",
    "body":"+1 GMV",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2836838002\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2837169695",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#issuecomment-2837169695",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/544",
    "id":2837169695,
    "node_id":"IC_kwDOAlVrjc6pG8Yf",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-29T01:17:43Z",
    "updated_at":"2025-04-29T01:17:43Z",
    "body":"@antrim \r\n\r\n> Looking for some hypotheticals, how would this process serve GTFS-Flex and GTFS-Fares?\r\n\r\nI'll offer one example to answer this for a specific change, namely the introduction of a \"vote to test\":\r\n\r\nUnder the current adoption process, there is no clear moment at which first adopters should \"build now\" that guarantees the least amount of risk (i.e., that avoids spending development resources on a feature based on parameters that end up changing soon after). We do have the 7-day minimum discussion period for any PR, but all that indicates is that the proposal is in an unstable state for *at least* 7 days; proposals may vastly change even after that period (and do so regularly). There's something of a paradox here: There must be at least one producer and consumer implementing the extension according to the current PR *before* a vote can be called, but until a vote is called, the PR could change any number of times, requiring those implementations to be reworked to match each time\u2014by no means an appealing scenario for developing new features.\r\n\r\nIntroducing an earlier \"vote to test,\" while not eliminating risk entirely, gives stakeholders interested in being first adopters a better sense of when the proposal is in a *more* stable state. This initial vote doesn't require implementation, so changes to the proposal during the entirety of this phase can happen freely without adopters having to throw out any work already completed (this helps prevent potential sunk-cost bias from creeping in as well). At a more informal level, it may also act as a vote of confidence, giving stakeholders earlier insight in community interest and current momentum regarding the feature. In any case, once this first vote has passed, we have a \"locked in\" test version of the proposal and first adopters can begin development with the assurance that it is unlikely to change in *fundamental* ways, unless some critical issue is identified during testing that was missed during the first discussion phase (again, talking about risk mitigation, not elimination).\r\n\r\nHypothetical: Suppose that after enthusiastic, albeit provisional, consensus was reached through working group discussions, a PR for a new Fares v2 feature is created and sits for a couple weeks without opposition. An aspiring first adopter takes this silence as indication that it's safe to start developing their implementation of this feature. However, some time after that work is already underway, a community member comments on the PR with some legitimate reservations. The issues identified result in a necessary to change the proposal. That first adopter must now rebuild their implementation, with no guarantee they won't have to do so again later. But a combination of difficult timing, competing priorities, and limited resources (under which most of us operate) forces that stakeholder to resign their role in implementation. So the proposal is stalled until another stakeholder is identified that can take their place, and that stakeholder has now invested money, time, and effort for nothing. The only way I can think of for a stakeholder to avoid this risk currently would be to not ever participate as an early adopter. But we want more early adopters!",
    "author_association":"CONTRIBUTOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2837169695\/reactions",
      "total_count":4,
      "+1":4,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2839873250",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/528#issuecomment-2839873250",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/528",
    "id":2839873250,
    "node_id":"IC_kwDOAlVrjc6pRQbi",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-29T18:39:32Z",
    "updated_at":"2025-04-29T18:39:32Z",
    "body":"Due to the unsuccessful checks, #558 has been raised for this change.\r\n\r\nClosing this PR.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2839873250\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2840192281",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/558#issuecomment-2840192281",
    "issue_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/558",
    "id":2840192281,
    "node_id":"IC_kwDOAlVrjc6pSeUZ",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "created_at":"2025-04-29T20:39:16Z",
    "updated_at":"2025-04-29T20:39:16Z",
    "body":"Changes LGTM (same as #528), I'll merge them now.",
    "author_association":"COLLABORATOR",
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/comments\/2840192281\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "performed_via_github_app":null
  }
]
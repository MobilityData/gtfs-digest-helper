[
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/576",
    "repository_url":"https:\/\/api.github.com\/repos\/google\/transit",
    "labels_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/576\/labels{\/name}",
    "comments_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/576\/comments",
    "events_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/576\/events",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/576",
    "id":3356913726,
    "node_id":"I_kwDOAlVrjc7IFnA-",
    "number":576,
    "title":"Add new SPECIAL_EVENT Cause to GTFS-realtime Service Alerts",
    "user":{
      "login":"ckraatz",
      "id":170684231,
      "node_id":"U_kgDOCixvRw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/170684231?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/ckraatz",
      "html_url":"https:\/\/github.com\/ckraatz",
      "followers_url":"https:\/\/api.github.com\/users\/ckraatz\/followers",
      "following_url":"https:\/\/api.github.com\/users\/ckraatz\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/ckraatz\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/ckraatz\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/ckraatz\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/ckraatz\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/ckraatz\/repos",
      "events_url":"https:\/\/api.github.com\/users\/ckraatz\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/ckraatz\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "labels":[
      {
        "id":534785637,
        "node_id":"MDU6TGFiZWw1MzQ3ODU2Mzc=",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/GTFS%20Realtime",
        "name":"GTFS Realtime",
        "color":"0052CC",
        "default":false,
        "description":"Issues and Pull Requests that focus on GTFS Realtime"
      },
      {
        "id":6411678643,
        "node_id":"LA_kwDOAlVrjc8AAAABfipzsw",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/Change%20type:%20Functional",
        "name":"Change type: Functional",
        "color":"B60205",
        "default":false,
        "description":"Refers to modifications that significantly affect specification functionalities."
      }
    ],
    "state":"open",
    "locked":false,
    "assignee":null,
    "assignees":[

    ],
    "milestone":null,
    "comments":23,
    "created_at":"2025-08-26T19:41:55Z",
    "updated_at":"2025-09-25T04:48:29Z",
    "closed_at":null,
    "author_association":"NONE",
    "type":null,
    "active_lock_reason":null,
    "sub_issues_summary":{
      "total":0,
      "completed":0,
      "percent_completed":0
    },
    "issue_dependencies_summary":{
      "blocked_by":0,
      "total_blocked_by":0,
      "blocking":0,
      "total_blocking":0
    },
    "body":"### Describe the problem\n\nMany producers find it difficult to select a Cause from the current list in certain common situations, and we've heard complaints from customers about this. \n\nI'm proposing to add SPECIAL_EVENT to address this. Capturing alert causes also provides more structured data, which could be used to display Alerts in certain ways on agency websites and potentially in apps.\n\n### Use cases\n\nSPECIAL_EVENT would be the appropriate Cause to select in the following common scenarios faced by many agencies: \n\n- Parades and festivals\n- Marathons, walks and runs that shut down streets\n- Concerts and other performances\n- Farmers markets\n\n### Proposed solution\n\nAdd SPECIAL_EVENT to the Cause list as option 13 as follows:\n\n\/\/ Cause of this alert. If cause_detail is included, then Cause must also be included.\n  enum Cause {\n    UNKNOWN_CAUSE = 1;\n    OTHER_CAUSE = 2;        \/\/ Not machine-representable.\n    TECHNICAL_PROBLEM = 3;\n    STRIKE = 4;             \/\/ Public transit agency employees stopped working.\n    DEMONSTRATION = 5;      \/\/ People are blocking the streets.\n    ACCIDENT = 6;\n    HOLIDAY = 7;\n    WEATHER = 8;\n    MAINTENANCE = 9;\n    CONSTRUCTION = 10;\n    POLICE_ACTIVITY = 11;\n    MEDICAL_EMERGENCY = 12;\n    **SPECIAL_EVENT = 13;      \/\/ A special one-time or recurring event such as a parade, festival, performance, farmers market, or sporting event.**\n  }\n\n### Additional information\n\nThere has been some discussion about this in the MobilityData Slack. @stevenmwhite @jfabi @doconnoronca and Logan Nash have chimed in, and it seems consensus for this change. \n\n@gcamp and @bdferris-v2 could you please weigh in from Transit and Google's standpoint? How do you use Cause values currently, if at all?\n\nI look forward to hearing any feedback about this idea, particularly in the following areas:\n\n- What other use cases do you see for this new Cause?\n- Are there other Cause values we could add\/revise (as minimally as possible) such that this list encompasses at least 90% of the most common actual scenarios, and at least 90% of the most common scenarios currently leading to use of Other_Cause?\n- Are there any unintended consequences for apps, websites or other Alerts consumers?",
    "closed_by":{
      "login":"ckraatz",
      "id":170684231,
      "node_id":"U_kgDOCixvRw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/170684231?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/ckraatz",
      "html_url":"https:\/\/github.com\/ckraatz",
      "followers_url":"https:\/\/api.github.com\/users\/ckraatz\/followers",
      "following_url":"https:\/\/api.github.com\/users\/ckraatz\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/ckraatz\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/ckraatz\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/ckraatz\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/ckraatz\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/ckraatz\/repos",
      "events_url":"https:\/\/api.github.com\/users\/ckraatz\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/ckraatz\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/576\/reactions",
      "total_count":3,
      "+1":3,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "timeline_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/576\/timeline",
    "performed_via_github_app":null,
    "state_reason":"reopened"
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/575",
    "repository_url":"https:\/\/api.github.com\/repos\/google\/transit",
    "labels_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/575\/labels{\/name}",
    "comments_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/575\/comments",
    "events_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/575\/events",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/575",
    "id":3331001691,
    "node_id":"I_kwDOAlVrjc7Giw1b",
    "number":575,
    "title":"Reconsider fare_leg_rules.rule_priority matching semantics\/spec wording",
    "user":{
      "login":"jsteelz",
      "id":25758288,
      "node_id":"MDQ6VXNlcjI1NzU4Mjg4",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/25758288?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/jsteelz",
      "html_url":"https:\/\/github.com\/jsteelz",
      "followers_url":"https:\/\/api.github.com\/users\/jsteelz\/followers",
      "following_url":"https:\/\/api.github.com\/users\/jsteelz\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/jsteelz\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/jsteelz\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/jsteelz\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/jsteelz\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/jsteelz\/repos",
      "events_url":"https:\/\/api.github.com\/users\/jsteelz\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/jsteelz\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "labels":[
      {
        "id":534785342,
        "node_id":"MDU6TGFiZWw1MzQ3ODUzNDI=",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/GTFS%20Schedule",
        "name":"GTFS Schedule",
        "color":"0052CC",
        "default":false,
        "description":"Issues and Pull Requests that focus on GTFS Schedule"
      },
      {
        "id":5488020631,
        "node_id":"LA_kwDOAlVrjc8AAAABRxyMlw",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/GTFS-Fares",
        "name":"GTFS-Fares",
        "color":"BFD4F2",
        "default":false,
        "description":"Issues and Pull Requests that focus on GTFS-Fares Extension"
      },
      {
        "id":6411678643,
        "node_id":"LA_kwDOAlVrjc8AAAABfipzsw",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/Change%20type:%20Functional",
        "name":"Change type: Functional",
        "color":"B60205",
        "default":false,
        "description":"Refers to modifications that significantly affect specification functionalities."
      }
    ],
    "state":"open",
    "locked":false,
    "assignee":null,
    "assignees":[

    ],
    "milestone":null,
    "comments":0,
    "created_at":"2025-08-18T14:38:52Z",
    "updated_at":"2025-08-19T14:03:23Z",
    "closed_at":null,
    "author_association":"NONE",
    "type":null,
    "active_lock_reason":null,
    "sub_issues_summary":{
      "total":0,
      "completed":0,
      "percent_completed":0
    },
    "issue_dependencies_summary":{
      "blocked_by":0,
      "total_blocked_by":0,
      "blocking":0,
      "total_blocking":0
    },
    "body":"### Describe the problem\n\nIn https:\/\/github.com\/google\/transit\/pull\/418, the `rule_priority` field was added to the GTFS specification, along with a new set of matching semantics for calculating the price of a given fare leg. As part of this change, the correct interpretation of the `rule_priority` field depends on _whether or not the field is included in the file's header_. If `rule_priority` is included in the header, an empty value means `rule_priority=0` for that row, and the row applies to all networks\/areas\/etc. if those are not defined, but if the header is not included, rule_priority is essentially `empty` instead of 0, and the matching rules are completely different. After a year or so of ingesting fares-v2 files since this change (which, it should be mentioned, we [supported](https:\/\/github.com\/google\/transit\/pull\/418#discussion_r1589652857)!), we've noticed that this condition is dangerous at best, and given the spec, seems unnecessary.\n\nFor data consumers (such as ourselves at Transit), this becomes an annoyance when reading in such files. It should be noted that a guiding principle of the GTFS spec is that the spec should be as \"database-friendly\" as possible; for us, having the meaning of a row change on whether or not the original file included a field in its header is a headache, since the most logical and obvious way of handling missing fields\/values in any csv-based format is to treat their values as undefined. (If you're designing a database that handles more than one producer's flavour of GTFS, you necessarily coalesce fields that one producer doesn't include to `empty`, so that you correctly import when the other producer includes them).\n\nAdditionally, we notice that producers (and producers can correct me if I'm misinterpreting!) often will include all or many of the GTFS specification's headers in a given file, even if they don't use some or many of them. This is normal practice as far as I can tell, but runs the risk of breaking their fares-v2 when \"correctly\" interpreted by consumers such as ourselves.\n\nWith the original fare_leg_rules.txt, GTFS gained a new type of semantics that was already relatively complicated - the idea that an empty field could refer to all of the valid values not mentioned in that field, elsewhere in the file. This is a new snag in the specification that I can see leading to misunderstanding, and I argue that it is unnecessary.\n\n### Use cases\n\nEnsure that the spec is as clear as possible to avoid mistakes during the creation and interpretation of fares-v2 data.\n\n### Proposed solution\n\nThe simplest way around this is to remove the \"defaulting\" behaviour to 0 on `rule_priority`. If so, the matching rules for a given row in fare_leg_rules.txt could be correctly derived from reading that row _alone_, without needing to infer context from the original file's headers: If the `rule_priority` field has a number, then empty network\/areas do not affect matching; if the field is empty, then empty network\/areas fields refer to all unmentioned area_ids in the file. The corollary benefit to such a change is that the meaning of the field could be correctly understood from reading the field's definition in the spec, rather than having to reconcile it with the preamble at the top of `fare_leg_rules.txt`, as well as the further appendix that defines what \"existing\" means for a given field.\n\nIf it is considered that such a change would be too breaking and thus unsafe, then I propose that the spec should be further clarified, both in the preamble to fare_leg_rules.txt, and in the `rule_priority` field's definition. In the field's definition,\n>An empty value for rule_priority is treated as zero.\n\nshould be changed to something like\n\n>If the `rule_priority` field is defined in the header, an empty value for rule_priority is treated as zero.\n\nAdditionally, the oft-used verbiage of `If the rule_priority field exists in the file` is unclear (even if defined in an auxiliary location in the spec, which I assume goes unread since it's not something that _sounds_ like it needs to be further defined). I can easily see this being interpreted as `if there are no defined rule_priority values in the file`. I understand that this wording was used to make an already-long spec somewhat more readable, but the trade-off on clarity here is lopsided. Where this wording is used, it should be replaced to be explicit that it's talking about whether or not the file contains `rule_priority` in the header.\n\nLastly, I strongly advocate that the GTFS specification going forward should refrain from using semantics based on the presence of a field in a file's header, for the reasons stated above: notably, that it is confusing for producers and consumers alike, and that it can be easily corrected by a more appropriate data type for the concerned field(s).\n\n### Additional information\n\n_No response_",
    "closed_by":null,
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/575\/reactions",
      "total_count":3,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":2
    },
    "timeline_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/575\/timeline",
    "performed_via_github_app":null,
    "state_reason":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/574",
    "repository_url":"https:\/\/api.github.com\/repos\/google\/transit",
    "labels_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/574\/labels{\/name}",
    "comments_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/574\/comments",
    "events_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/574\/events",
    "html_url":"https:\/\/github.com\/google\/transit\/issues\/574",
    "id":3300128987,
    "node_id":"I_kwDOAlVrjc7Es_jb",
    "number":574,
    "title":"RFC: mandatory shape_pt at at most 2m from stop",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "labels":[
      {
        "id":534785342,
        "node_id":"MDU6TGFiZWw1MzQ3ODUzNDI=",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/GTFS%20Schedule",
        "name":"GTFS Schedule",
        "color":"0052CC",
        "default":false,
        "description":"Issues and Pull Requests that focus on GTFS Schedule"
      },
      {
        "id":5488019745,
        "node_id":"LA_kwDOAlVrjc8AAAABRxyJIQ",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/Change%20type:%20Non-Functional",
        "name":"Change type: Non-Functional",
        "color":"B60205",
        "default":false,
        "description":"Refers to important updates to the specification that do not significantly affect functionalities."
      },
      {
        "id":6490753643,
        "node_id":"LA_kwDOAlVrjc8AAAABguEKaw",
        "url":"https:\/\/api.github.com\/repos\/google\/transit\/labels\/Support:%20Needs%20Feedback",
        "name":"Support: Needs Feedback",
        "color":"FBCA04",
        "default":false,
        "description":""
      }
    ],
    "state":"open",
    "locked":false,
    "assignee":null,
    "assignees":[

    ],
    "milestone":null,
    "comments":8,
    "created_at":"2025-08-07T11:35:34Z",
    "updated_at":"2025-08-07T18:06:41Z",
    "closed_at":null,
    "author_association":"CONTRIBUTOR",
    "type":null,
    "active_lock_reason":null,
    "sub_issues_summary":{
      "total":0,
      "completed":0,
      "percent_completed":0
    },
    "issue_dependencies_summary":{
      "blocked_by":0,
      "total_blocked_by":0,
      "blocking":0,
      "total_blocking":0
    },
    "body":"### Describe the problem\n\nGTFS shapes.txt allows a very funky description of the route over the road. I'll here give two valid examples.\n1. Two shape points are defined a kilometer apart, the straight line follows a straight road, a stop is in the center, description within GTFS can be correctly positioned using shape_dist_traveled (in stop_times.txt)\n2. Two shape points are defined two kilometers apart, following as the crow flies this is only one kilometer, correctly positioned using shape_dist_traveled (in shapes.txt)\n\n<img width=\"986\" height=\"650\" alt=\"Image\" src=\"https:\/\/github.com\/user-attachments\/assets\/203a0092-4e3e-4ad6-a84f-5c586d26a21d\" \/>\n\n### Use cases\n\nAny system that segments shapes from stop to stop.\n\n### Proposed solution\n\nA new best practise for shapes.txt. When shapes.txt are in use the minimum is a _false node_ as shape_point in the direct neighborhood of the stops.txt entry, at most 2 meters from that position.\n\n### Additional information\n\n_No response_",
    "closed_by":null,
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/574\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "timeline_url":"https:\/\/api.github.com\/repos\/google\/transit\/issues\/574\/timeline",
    "performed_via_github_app":null,
    "state_reason":null
  }
]
[
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2343722318",
    "pull_request_review_id":3215883009,
    "id":2343722318,
    "node_id":"PRRC_kwDOAlVrjc6Lsl1O",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"It should not be conditionally forbidden for entrances. Entrances may not be near the streetnetwork, for example if an entrance of a trainstation is connecting a metro station. I think it would be good to be explicit about those entrances as well.",
    "created_at":"2025-09-12T10:03:47Z",
    "updated_at":"2025-09-14T08:05:06Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2343722318",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2343722318"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2343722318"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2343722318\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349545018",
    "pull_request_review_id":3225461120,
    "id":2349545018,
    "node_id":"PRRC_kwDOAlVrjc6MCzY6",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"In some station complexes that include both train and metro, perhaps this type of \u201centrance\u201d could be covered within the scope of pathways such as \u201cfare gates\u201d or \u201cexit gates\u201d? That said, in certain use cases, modeling it as an \u201centrance\u201d may indeed be the better approach (perhaps also related to whether the feed is the same or not?).\r\n\r\nIf an entrance of a particular station cannot be reached directly from the streetnetwork, it seems that this entrance would be accessed through another station\u2019s entrance. Would this also imply the need for an additional level above \u201cstation\u201d? At present, the introduction of `stop_access` limited only to `location_type=0` may not adequately handle all complex use cases. Would it be more appropriate to leave the application of this field to entrances, and \u201cstation clusters\u201d, for discussion together in [the phase three](https:\/\/github.com\/google\/transit\/issues\/438#issuecomment-2289511429)?\r\n\r\n(We\u2019ve already had recent cases where a condition was initially forbidden and later relaxed, and this should not raise backward-compatibility concerns.)",
    "created_at":"2025-09-15T16:31:32Z",
    "updated_at":"2025-09-15T16:31:33Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2349545018",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349545018"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2349545018"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349545018\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2343722318.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349584748",
    "pull_request_review_id":3225519332,
    "id":2349584748,
    "node_id":"PRRC_kwDOAlVrjc6MC9Fs",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"skinkie",
      "id":502394,
      "node_id":"MDQ6VXNlcjUwMjM5NA==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/502394?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skinkie",
      "html_url":"https:\/\/github.com\/skinkie",
      "followers_url":"https:\/\/api.github.com\/users\/skinkie\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skinkie\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skinkie\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skinkie\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skinkie\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skinkie\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skinkie\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skinkie\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skinkie\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"No, I think it is unwise to ignore this situation. I think the problem is even worse specially for underground structures that may hint that there is an entrance with \"above the ground access\" when it is not it will lead to crazy stop\/entrance street linking.",
    "created_at":"2025-09-15T16:49:37Z",
    "updated_at":"2025-09-15T16:49:37Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2349584748",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349584748"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2349584748"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349584748\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2343722318.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349654318",
    "pull_request_review_id":3225618909,
    "id":2349654318,
    "node_id":"PRRC_kwDOAlVrjc6MDOEu",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"> underground structures that may hint that there is an entrance with \"above the ground access\" when it is not it will lead to crazy stop\/entrance street linking.\r\n\r\nSorry my previous comment may have caused some confusion...\r\nJust quickly checked the current definition of entrance (`location_type=2`) in the spec \u2014 \u201c_A location where passengers can enter or exit a station **from the street**._\u201d This seems to indicate that such a location should not be modeled as an entrance?",
    "created_at":"2025-09-15T17:23:47Z",
    "updated_at":"2025-09-15T17:23:47Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2349654318",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349654318"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2349654318"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2349654318\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2343722318.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2352589000",
    "pull_request_review_id":3230113949,
    "id":2352589000,
    "node_id":"PRRC_kwDOAlVrjc6MOajI",
    "diff_hunk":"@@ -678,17 +678,20 @@ Files [pathways.txt](#pathwaystxt) and [levels.txt](levelstxt) use a graph repre\n \n To navigate from the station entrance\/exit (a node represented as a location with `location_type=2`) to a platform (a node represented as a location with `location_type=0` or empty), the rider will move through walkways, fare gates, stairs, and other edges represented as pathways. Generic nodes (nodes represented with `location_type=3`) can be used to connect pathways throughout a station.\n \n-Pathways must be defined exhaustively in a station. If any pathways are defined, it is assumed that all pathways throughout the station are represented. Therefore, the following guidelines apply:\n+Pathways are intended to exhaustively define the internal access graph of a station. If any pathways are defined within a station, data consumers should assume that all relevant connections within that station are described. However, the optional `stop_access` field in `stops.txt` may be used to explicitly define whether a stop is accessible directly from the street network or through the station's defined pathways. Therefore, the following guidelines apply:\n \n-- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except for platforms that have boarding areas (`location_type=4`, see guideline below).\n+- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except\n+    -  Platforms that have boarding areas (`location_type=4`, see guideline below)\n+    -  Stops (`location_type=0` or empty) with `stops.stop_access=1`\n - No pathways for a platform with boarding areas: A platform (`location_type=0` or empty) that has boarding areas (`location_type=4`) is treated as a parent object, not a point. In such cases, the platform must not have pathways assigned. All pathways should be assigned for each of the platform's boarding areas.\n-- No locked platforms: Each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways. Stations not allowing a pathway to the outside of the station from a given platform are rare.\n+- No locked platforms: If any location within a station has a pathway, each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways \u2014 unless:\n+    - The stop (`location_type=0` or empty) is explicitly marked with `stops.stop_access=1`, in which case it is assumed to be directly accessible from the street network.\n \n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `pathway_id` | Unique ID | **Required** | Identifies a pathway. Used by systems as an internal identifier for the record. Must be unique in the dataset. <br><br> Different pathways may have the same values for `from_stop_id` and `to_stop_id`.<hr>_Example: When two escalators are side-by-side in opposite directions, or when a stair set and elevator go from the same place to the same place, different `pathway_id` may have the same `from_stop_id` and `to_stop_id` values._|\n-|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n-|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n+|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|\n+|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"skyqrose",
      "id":23065557,
      "node_id":"MDQ6VXNlcjIzMDY1NTU3",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/23065557?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skyqrose",
      "html_url":"https:\/\/github.com\/skyqrose",
      "followers_url":"https:\/\/api.github.com\/users\/skyqrose\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skyqrose\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skyqrose\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skyqrose\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skyqrose\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skyqrose\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skyqrose\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skyqrose\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skyqrose\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Nitpick: As written, this seems to imply that stations without stop_access might be no longer forbidden. \"... stations or stops with stop_access=1 are forbidden\". The new \"with stop_access=1\" should only apply to the new \"stops\", not to the existing \"stations\".\r\n\r\nThis could be fixed by a minor edit without affecting voting.",
    "created_at":"2025-09-16T13:50:12Z",
    "updated_at":"2025-09-16T13:50:12Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2352589000",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2352589000"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2352589000"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2352589000\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":693.0,
    "start_side":"RIGHT",
    "line":null,
    "original_line":694,
    "side":"RIGHT",
    "original_position":31,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2352813058",
    "pull_request_review_id":3230444134,
    "id":2352813058,
    "node_id":"PRRC_kwDOAlVrjc6MPRQC",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Consuming applications should generate directions for access directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |\r\n```\r\n\r\nI intend to vote in favor but I do have another wording suggestion to add (sorry!). As presently worded I instinctively interpreted it as a mandate for the producer to \"generate\" pathways data for the stop because of the passive voice. Can we switch it to active voice to clarify that this is a *consumer* action?",
    "created_at":"2025-09-16T15:02:13Z",
    "updated_at":"2025-09-16T15:02:13Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2352813058",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2352813058"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2352813058"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2352813058\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2353189931",
    "pull_request_review_id":3231016093,
    "id":2353189931,
    "node_id":"PRRC_kwDOAlVrjc6MQtQr",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"ffisherBART",
      "id":202706069,
      "node_id":"U_kgDODBUMlQ",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/202706069?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/ffisherBART",
      "html_url":"https:\/\/github.com\/ffisherBART",
      "followers_url":"https:\/\/api.github.com\/users\/ffisherBART\/followers",
      "following_url":"https:\/\/api.github.com\/users\/ffisherBART\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/ffisherBART\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/ffisherBART\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/ffisherBART\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/ffisherBART\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/ffisherBART\/repos",
      "events_url":"https:\/\/api.github.com\/users\/ffisherBART\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/ffisherBART\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I'm relatively new to pathways and with an organization that doesn't use OTP, but I think this gets to the heart of the issue (or at least my lack of understanding), that the use of the current definition of entrance (location_type=2) should potentially be broader than how it's currently used.  Is there any reason that entrances\/exits can be placed both at the boundaries of an agency's property AND adjacent to any doors into a physical station area?  I don't come from the trip planner side and don't know how the algorithms work, but it seems that would allow for either using agency path through their property or the trip planner's street network to get to any\/all stops (location_type = 0) within the parent station via the shortest route. The inside\/outside boundary becomes less important than geographic places to connect to the transit complex as a whole. This may create a path that includes multiple entrances (or exits) along a path, but is that an issue?  To me, more entrances\/exit points = better.   Any reason a entry\/exit (2) or stop (0) can't also act as a generic (3) stop\/node? ",
    "created_at":"2025-09-16T17:31:35Z",
    "updated_at":"2025-09-16T17:31:35Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2353189931",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2353189931"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2353189931"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2353189931\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2343722318.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2355407499",
    "pull_request_review_id":3234282877,
    "id":2355407499,
    "node_id":"PRRC_kwDOAlVrjc6MZKqL",
    "diff_hunk":"@@ -678,17 +678,20 @@ Files [pathways.txt](#pathwaystxt) and [levels.txt](levelstxt) use a graph repre\n \n To navigate from the station entrance\/exit (a node represented as a location with `location_type=2`) to a platform (a node represented as a location with `location_type=0` or empty), the rider will move through walkways, fare gates, stairs, and other edges represented as pathways. Generic nodes (nodes represented with `location_type=3`) can be used to connect pathways throughout a station.\n \n-Pathways must be defined exhaustively in a station. If any pathways are defined, it is assumed that all pathways throughout the station are represented. Therefore, the following guidelines apply:\n+Pathways are intended to exhaustively define the internal access graph of a station. If any pathways are defined within a station, data consumers should assume that all relevant connections within that station are described. However, the optional `stop_access` field in `stops.txt` may be used to explicitly define whether a stop is accessible directly from the street network or through the station's defined pathways. Therefore, the following guidelines apply:\n \n-- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except for platforms that have boarding areas (`location_type=4`, see guideline below).\n+- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except\n+    -  Platforms that have boarding areas (`location_type=4`, see guideline below)\n+    -  Stops (`location_type=0` or empty) with `stops.stop_access=1`\n - No pathways for a platform with boarding areas: A platform (`location_type=0` or empty) that has boarding areas (`location_type=4`) is treated as a parent object, not a point. In such cases, the platform must not have pathways assigned. All pathways should be assigned for each of the platform's boarding areas.\n-- No locked platforms: Each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways. Stations not allowing a pathway to the outside of the station from a given platform are rare.\n+- No locked platforms: If any location within a station has a pathway, each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways \u2014 unless:\n+    - The stop (`location_type=0` or empty) is explicitly marked with `stops.stop_access=1`, in which case it is assumed to be directly accessible from the street network.\n \n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `pathway_id` | Unique ID | **Required** | Identifies a pathway. Used by systems as an internal identifier for the record. Must be unique in the dataset. <br><br> Different pathways may have the same values for `from_stop_id` and `to_stop_id`.<hr>_Example: When two escalators are side-by-side in opposite directions, or when a stair set and elevator go from the same place to the same place, different `pathway_id` may have the same `from_stop_id` and `to_stop_id` values._|\n-|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n-|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n+|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|\n+|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@skyqrose Thanks for catching this!\r\n\r\nIs the following simple revision clear enough?\r\n\r\n_Values for `stop_id` that identify stations (`location_type=1`)**,** or stops (`location_type=0` or empty) with `stop_access=1`**,** are forbidden._",
    "created_at":"2025-09-17T12:47:59Z",
    "updated_at":"2025-09-17T12:47:59Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2355407499",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2355407499"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2355407499"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2355407499\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":693.0,
    "start_side":"RIGHT",
    "line":null,
    "original_line":694,
    "side":"RIGHT",
    "original_position":31,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2352589000.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2355476692",
    "pull_request_review_id":3234397178,
    "id":2355476692,
    "node_id":"PRRC_kwDOAlVrjc6MZbjU",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"LGTM, thanks @westontrillium !\r\n\r\nThis clarification regarding the subject does not change the meaning of the original description, so I consider it an **editorial change**. (In the dataset used for the vote, none of the stops with stop_access=1 have any pathway data)",
    "created_at":"2025-09-17T13:10:36Z",
    "updated_at":"2025-09-17T13:10:36Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2355476692",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2355476692"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2355476692"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2355476692\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2352813058.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2359519486",
    "pull_request_review_id":3240011002,
    "id":2359519486,
    "node_id":"PRRC_kwDOAlVrjc6Mo2j-",
    "diff_hunk":"@@ -678,17 +678,20 @@ Files [pathways.txt](#pathwaystxt) and [levels.txt](levelstxt) use a graph repre\n \n To navigate from the station entrance\/exit (a node represented as a location with `location_type=2`) to a platform (a node represented as a location with `location_type=0` or empty), the rider will move through walkways, fare gates, stairs, and other edges represented as pathways. Generic nodes (nodes represented with `location_type=3`) can be used to connect pathways throughout a station.\n \n-Pathways must be defined exhaustively in a station. If any pathways are defined, it is assumed that all pathways throughout the station are represented. Therefore, the following guidelines apply:\n+Pathways are intended to exhaustively define the internal access graph of a station. If any pathways are defined within a station, data consumers should assume that all relevant connections within that station are described. However, the optional `stop_access` field in `stops.txt` may be used to explicitly define whether a stop is accessible directly from the street network or through the station's defined pathways. Therefore, the following guidelines apply:\n \n-- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except for platforms that have boarding areas (`location_type=4`, see guideline below).\n+- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except\n+    -  Platforms that have boarding areas (`location_type=4`, see guideline below)\n+    -  Stops (`location_type=0` or empty) with `stops.stop_access=1`\n - No pathways for a platform with boarding areas: A platform (`location_type=0` or empty) that has boarding areas (`location_type=4`) is treated as a parent object, not a point. In such cases, the platform must not have pathways assigned. All pathways should be assigned for each of the platform's boarding areas.\n-- No locked platforms: Each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways. Stations not allowing a pathway to the outside of the station from a given platform are rare.\n+- No locked platforms: If any location within a station has a pathway, each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways \u2014 unless:\n+    - The stop (`location_type=0` or empty) is explicitly marked with `stops.stop_access=1`, in which case it is assumed to be directly accessible from the street network.\n \n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `pathway_id` | Unique ID | **Required** | Identifies a pathway. Used by systems as an internal identifier for the record. Must be unique in the dataset. <br><br> Different pathways may have the same values for `from_stop_id` and `to_stop_id`.<hr>_Example: When two escalators are side-by-side in opposite directions, or when a stair set and elevator go from the same place to the same place, different `pathway_id` may have the same `from_stop_id` and `to_stop_id` values._|\n-|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n-|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n+|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|\n+|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"skyqrose",
      "id":23065557,
      "node_id":"MDQ6VXNlcjIzMDY1NTU3",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/23065557?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/skyqrose",
      "html_url":"https:\/\/github.com\/skyqrose",
      "followers_url":"https:\/\/api.github.com\/users\/skyqrose\/followers",
      "following_url":"https:\/\/api.github.com\/users\/skyqrose\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/skyqrose\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/skyqrose\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/skyqrose\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/skyqrose\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/skyqrose\/repos",
      "events_url":"https:\/\/api.github.com\/users\/skyqrose\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/skyqrose\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"\ud83d\udc4d I think that's fine.",
    "created_at":"2025-09-18T14:10:52Z",
    "updated_at":"2025-09-18T14:10:52Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2359519486",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2359519486"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2359519486"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2359519486\/reactions",
      "total_count":1,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":1,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":693.0,
    "start_side":"RIGHT",
    "line":null,
    "original_line":694,
    "side":"RIGHT",
    "original_position":31,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2352589000.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2361018768",
    "pull_request_review_id":3241891057,
    "id":2361018768,
    "node_id":"PRRC_kwDOAlVrjc6MukmQ",
    "diff_hunk":"@@ -215,7 +215,7 @@ Primary key (`stop_id`)\n |  `wheelchair_boarding` | Enum | Optional | Indicates whether wheelchair boardings are possible from the location. Valid options are: <br><br>For parentless stops:<br>`0` or empty - No accessibility information for the stop.<br>`1` - Some vehicles at this stop can be boarded by a rider in a wheelchair.<br>`2` - Wheelchair boarding is not possible at this stop. <br><br>For child stops: <br>`0` or empty - Stop will inherit its `wheelchair_boarding` behavior from the parent station, if specified in the parent.<br>`1` - There exists some accessible path from outside the station to the specific stop\/platform.<br>`2` - There exists no accessible path from outside the station to the specific stop\/platform.<br><br> For station entrances\/exits: <br>`0` or empty - Station entrance will inherit its `wheelchair_boarding` behavior from the parent station, if specified for the parent.<br>`1` - Station entrance is wheelchair accessible.<br>`2` - No accessible path from station entrance to stops\/platforms. |\n |  `level_id` | Foreign ID referencing `levels.level_id` | Optional | Level of the location. The same level may be used by multiple unlinked stations.|\n |  `platform_code` | Text | Optional | Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like \u201cplatform\u201d or \"track\" (or the feed\u2019s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages. |\n-\n+|  `stop_access` | Enum | **Conditionally Forbidden** | Indicates how the stop is accessed for a particular station. Valid options are: <br><br>`0` - The stop\/platform cannot be directly accessed from the street network. It must be accessed from a station entrance if there is one defined for the station, otherwise the station itself. If there are pathways defined for the station, they must be used to access the stop\/platform.<br>`1` - Directions for access should be generated directly to the stop, independent of any entrances or pathways of the parent station.<br><br>When `stop_access` is empty, the access for the specified stop or platform is considered undefined.<br><br>**Conditionally Forbidden**:<br>- **Forbidden** for locations which are stations (`location_type=1`), entrances (`location_type=2`), generic nodes (`location_type=3`) or boarding areas (`location_type=4`).<br>- **Forbidden** if `parent_station` is empty.<br> - Optional otherwise. |",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@ffisherBART here is my personal thought:\r\nIn North America, most transit structures are typically the property of a single agency. In Europe and Asia, situations could be more complex: for example, multiple transit operators may share a structure that includes multiple train and subway services, or a transit structure may be integrated within a large shopping mall structure. If entrances are immediately opened up for any door into the physical station area without considering these cases, it could result in many entrances that are \u201cnot reachable from the street network\u201d (since a specific agency may not be able to produce data outside of its own property). While the current definition of entrances \u2014 serving clearly as the boundary between the street network and the station structure \u2014 does not perfectly capture all use cases, it can, when used properly, prevent trip planners from providing \u201cincorrect navigation.\u201d\r\n\r\nThere **may be** room to discuss expanding the definition of entrances, but I think it may be more appropriate to consider this together with topics such as \u201cstation clusters\u201d and\/or \u201ccross-feed reference\u201d in the future.\r\n\r\nReturning to this PR, its intent is not to solve all station modeling issues, but rather to focus specifically on how a \"stop\" can be accessed. I see this as an incremental but important step toward improving station modeling.",
    "created_at":"2025-09-18T20:08:02Z",
    "updated_at":"2025-09-18T20:08:03Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2361018768",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2361018768"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2361018768"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2361018768\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":218,
    "side":"RIGHT",
    "original_position":5,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2343722318.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2361242910",
    "pull_request_review_id":3242172504,
    "id":2361242910,
    "node_id":"PRRC_kwDOAlVrjc6MvbUe",
    "diff_hunk":"@@ -678,17 +678,20 @@ Files [pathways.txt](#pathwaystxt) and [levels.txt](levelstxt) use a graph repre\n \n To navigate from the station entrance\/exit (a node represented as a location with `location_type=2`) to a platform (a node represented as a location with `location_type=0` or empty), the rider will move through walkways, fare gates, stairs, and other edges represented as pathways. Generic nodes (nodes represented with `location_type=3`) can be used to connect pathways throughout a station.\n \n-Pathways must be defined exhaustively in a station. If any pathways are defined, it is assumed that all pathways throughout the station are represented. Therefore, the following guidelines apply:\n+Pathways are intended to exhaustively define the internal access graph of a station. If any pathways are defined within a station, data consumers should assume that all relevant connections within that station are described. However, the optional `stop_access` field in `stops.txt` may be used to explicitly define whether a stop is accessible directly from the street network or through the station's defined pathways. Therefore, the following guidelines apply:\n \n-- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except for platforms that have boarding areas (`location_type=4`, see guideline below).\n+- No dangling locations: If any location within a station has a pathway, then all locations within that station should have pathways, except\n+    -  Platforms that have boarding areas (`location_type=4`, see guideline below)\n+    -  Stops (`location_type=0` or empty) with `stops.stop_access=1`\n - No pathways for a platform with boarding areas: A platform (`location_type=0` or empty) that has boarding areas (`location_type=4`) is treated as a parent object, not a point. In such cases, the platform must not have pathways assigned. All pathways should be assigned for each of the platform's boarding areas.\n-- No locked platforms: Each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways. Stations not allowing a pathway to the outside of the station from a given platform are rare.\n+- No locked platforms: If any location within a station has a pathway, each platform (`location_type=0` or empty) or boarding area (`location_type=4`) must be connected to at least one entrance\/exit (`location_type=2`) via some chain of pathways \u2014 unless:\n+    - The stop (`location_type=0` or empty) is explicitly marked with `stops.stop_access=1`, in which case it is assumed to be directly accessible from the street network.\n \n |  Field Name | Type | Presence | Description |\n |  ------ | ------ | ------ | ------ |\n |  `pathway_id` | Unique ID | **Required** | Identifies a pathway. Used by systems as an internal identifier for the record. Must be unique in the dataset. <br><br> Different pathways may have the same values for `from_stop_id` and `to_stop_id`.<hr>_Example: When two escalators are side-by-side in opposite directions, or when a stair set and elevator go from the same place to the same place, different `pathway_id` may have the same `from_stop_id` and `to_stop_id` values._|\n-|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n-|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) are forbidden.|\n+|  `from_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway begins.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|\n+|  `to_stop_id` | Foreign ID referencing `stops.stop_id` | **Required** | Location at which the pathway ends.<br><br>Must contain a `stop_id` that identifies a platform (`location_type=0` or empty), entrance\/exit (`location_type=2`), generic node (`location_type=3`) or boarding area (`location_type=4`).<br><br> Values for `stop_id` that identify stations (`location_type=1`) or stops (`location_type=0` or empty) with `stop_access=1` are forbidden.|",
    "path":"gtfs\/spec\/en\/reference.md",
    "commit_id":"1039d2a8a488b2cdc3cb241b2e5cc1cc468c0fe0",
    "original_commit_id":"90ed5c90b641668cbae0ee5bc5b3b9a4714b219b",
    "user":{
      "login":"tzujenchanmbd",
      "id":126435471,
      "node_id":"U_kgDOB4lAjw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/126435471?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/tzujenchanmbd",
      "html_url":"https:\/\/github.com\/tzujenchanmbd",
      "followers_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/tzujenchanmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Editorial change made - [b30b716](https:\/\/github.com\/google\/transit\/pull\/515\/commits\/b30b716af8c92fcf0eb48d856e5a00f9c5e56bf3)",
    "created_at":"2025-09-18T21:33:22Z",
    "updated_at":"2025-09-18T21:33:22Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2361242910",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2361242910"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/515#discussion_r2361242910"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/515"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2361242910\/reactions",
      "total_count":1,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":1,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":693.0,
    "start_side":"RIGHT",
    "line":null,
    "original_line":694,
    "side":"RIGHT",
    "original_position":31,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2352589000.0
  }
]
[
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1979538383",
    "pull_request_review_id":2657730606,
    "id":1979538383,
    "node_id":"PRRC_kwDOAlVrjc51_VvP",
    "diff_hunk":"@@ -612,7 +612,7 @@ message Alert {\n     NO_SERVICE = 1;\n     REDUCED_SERVICE = 2;\n \n-    \/\/ We don't care about INsignificant delays: they are hard to detect, have",
    "path":"gtfs-realtime\/proto\/gtfs-realtime.proto",
    "commit_id":"368315544bdad33c807f0d0d33f41182eb79c77e",
    "original_commit_id":"368315544bdad33c807f0d0d33f41182eb79c77e",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I don't think this is a typo. It's meant to highlight the \"in\" in insignificant.",
    "created_at":"2025-03-04T14:10:49Z",
    "updated_at":"2025-03-04T14:10:49Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/541#discussion_r1979538383",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/541",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1979538383"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/541#discussion_r1979538383"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/541"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1979538383\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":615.0,
    "original_line":615,
    "side":"LEFT",
    "original_position":4,
    "position":4,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1987621821",
    "pull_request_review_id":2671548115,
    "id":1987621821,
    "node_id":"PRRC_kwDOAlVrjc52eLO9",
    "diff_hunk":"@@ -73,7 +73,13 @@ For example, a `VehiclePosition` entity has `vehicle_id:A` and `trip_id:4`, then\n \n | Field Name | Recommendation |\n | --- | --- |\n-| `schedule_relationship` | The behavior of `ADDED` trips are unspecified and the use of this enumeration is not recommended. |\n+| `schedule_relationship` | The behavior of `ADDED` trips are unspecified and the use of this enumeration is not recommended.<br\/>If the trip is not scheduled to run originally, use `NEW` if it doesn't follow the stopping pattern of an existing trip, or `DUPLICATED` if it is a copy of an existing trip.<br\/>If the trip runs on a modified schedule or calling points, but can be associated to an original scheduled trip in the GTFS static, use `REPLACEMENT` and specify the full list of calling points for the modified trip. |",
    "path":"gtfs-realtime\/best-practices\/best-practices.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"7804def8a78131ba8cb214c36035e10bb19ec8ba",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| `schedule_relationship` | The behavior of `ADDED` trips are unspecified and the use of this enumeration is not recommended.<br\/>If the trip is not scheduled to run originally, use `NEW` if it doesn't follow the stopping pattern of an existing trip, or `DUPLICATED` if it is a copy of an existing trip.<br\/>If the trip runs on a modified schedule or calling points, but can be associated to an original scheduled trip in the GTFS static, use `REPLACEMENT` and specify the full list of stop times for the modified trip. |\r\n```",
    "created_at":"2025-03-10T16:17:20Z",
    "updated_at":"2025-03-10T16:17:20Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r1987621821",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1987621821"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r1987621821"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1987621821\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":76,
    "side":"RIGHT",
    "original_position":14,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1987622618",
    "pull_request_review_id":2671549319,
    "id":1987622618,
    "node_id":"PRRC_kwDOAlVrjc52eLba",
    "diff_hunk":"@@ -73,7 +73,13 @@ For example, a `VehiclePosition` entity has `vehicle_id:A` and `trip_id:4`, then\n \n | Field Name | Recommendation |\n | --- | --- |\n-| `schedule_relationship` | The behavior of `ADDED` trips are unspecified and the use of this enumeration is not recommended. |\n+| `schedule_relationship` | The behavior of `ADDED` trips are unspecified and the use of this enumeration is not recommended.<br\/>If the trip is not scheduled to run originally, use `NEW` if it doesn't follow the stopping pattern of an existing trip, or `DUPLICATED` if it is a copy of an existing trip.<br\/>If the trip runs on a modified schedule or calling points, but can be associated to an original scheduled trip in the GTFS static, use `REPLACEMENT` and specify the full list of calling points for the modified trip. |",
    "path":"gtfs-realtime\/best-practices\/best-practices.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"7804def8a78131ba8cb214c36035e10bb19ec8ba",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I know what a call is but I believe the GTFS spec doesn't use this term.",
    "created_at":"2025-03-10T16:17:46Z",
    "updated_at":"2025-03-10T16:17:46Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r1987622618",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1987622618"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r1987622618"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1987622618\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":76,
    "side":"RIGHT",
    "original_position":14,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":1987621821.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994836460",
    "pull_request_review_id":2684298274,
    "id":1994836460,
    "node_id":"PRRC_kwDOAlVrjc525sns",
    "diff_hunk":"@@ -0,0 +1,18 @@\n+# Guiding principles\n+\n+In order to preserve the original vision of GTFS, a number of guiding principles have been established to take into consideration when changing the specification:\n+\n+**Feeds should be easy to create and edit**  \n+We chose CSV as the basis for the specification because it's easy to view and edit using spreadsheet programs and text editors, which is helpful for smaller agencies. It's also straightforward to generate from most programming languages and databases, which is good for publishers of larger feeds.\n+\n+**Feeds should be easy to parse**  \n+Feed readers should be able to extract the information they're looking for with as little work as possible. Changes and additions to the feed should be as broadly useful as possible, to minimize the number of code paths that readers of the feed need to implement. (However, making creation easier should be given precedence, since there will ultimately be more feed publishers than feed readers.)",
    "path":"gtfs\/Governance\/guiding-principles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"abyrd",
      "id":112871,
      "node_id":"MDQ6VXNlcjExMjg3MQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/112871?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/abyrd",
      "html_url":"https:\/\/github.com\/abyrd",
      "followers_url":"https:\/\/api.github.com\/users\/abyrd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/abyrd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/abyrd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/abyrd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/abyrd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/abyrd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/abyrd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/abyrd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/abyrd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I certainly agree with the underlying principle here. But I don't see how making changes \"as broadly useful as possible\" would \"minimize the number of code paths\". I don't think one follows from the other. Parentheses could be removed from the final sentence as it's as important as any other information here.",
    "created_at":"2025-03-14T05:24:24Z",
    "updated_at":"2025-03-14T05:41:43Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1994836460",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994836460"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1994836460"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994836460\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":9.0,
    "original_line":9,
    "side":"RIGHT",
    "original_position":9,
    "position":9,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994840717",
    "pull_request_review_id":2684298274,
    "id":1994840717,
    "node_id":"PRRC_kwDOAlVrjc525tqN",
    "diff_hunk":"@@ -0,0 +1,18 @@\n+# Guiding principles\n+\n+In order to preserve the original vision of GTFS, a number of guiding principles have been established to take into consideration when changing the specification:\n+\n+**Feeds should be easy to create and edit**  \n+We chose CSV as the basis for the specification because it's easy to view and edit using spreadsheet programs and text editors, which is helpful for smaller agencies. It's also straightforward to generate from most programming languages and databases, which is good for publishers of larger feeds.\n+\n+**Feeds should be easy to parse**  \n+Feed readers should be able to extract the information they're looking for with as little work as possible. Changes and additions to the feed should be as broadly useful as possible, to minimize the number of code paths that readers of the feed need to implement. (However, making creation easier should be given precedence, since there will ultimately be more feed publishers than feed readers.)\n+\n+**The spec is about passenger information**  \n+GTFS is primarily concerned with passenger information. That is, the spec should include information that can help power tools for riders, first and foremost. There is potentially a large amount of operations-oriented information that transit agencies might want to transmit internally between systems. GTFS is not intended for that purpose and there are potentially other operations-oriented data-standards that may be more appropriate.",
    "path":"gtfs\/Governance\/guiding-principles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"abyrd",
      "id":112871,
      "node_id":"MDQ6VXNlcjExMjg3MQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/112871?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/abyrd",
      "html_url":"https:\/\/github.com\/abyrd",
      "followers_url":"https:\/\/api.github.com\/users\/abyrd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/abyrd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/abyrd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/abyrd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/abyrd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/abyrd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/abyrd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/abyrd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/abyrd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I suggest removing both instances of the word \"potentially\". But completely agree with the underlying idea here.",
    "created_at":"2025-03-14T05:26:50Z",
    "updated_at":"2025-03-14T05:41:43Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1994840717",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994840717"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1994840717"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994840717\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":12.0,
    "original_line":12,
    "side":"RIGHT",
    "original_position":12,
    "position":12,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994849343",
    "pull_request_review_id":2684298274,
    "id":1994849343,
    "node_id":"PRRC_kwDOAlVrjc525vw_",
    "diff_hunk":"@@ -0,0 +1,26 @@\n+# Introduction to GTFS Governance\n+\n+The GTFS standard is not set in stone; it is an open specification developed and maintained by a community of transit agencies, developers, and other stakeholders who actively use it. As this community of GTFS data producers and consumers continues to evolve, proposals for extending the specification to support new capabilities are expected. To manage this process, a GTFS governance framework has been established.\n+\n+GTFS governance refers to the framework that guides how the GTFS is maintained, updated, and developed. It encompasses the rules and processes that the community has established to guide decision-making, ensuring that GTFS remains an open and collaborative data standard.\n+\n+The governance framework for GTFS is composed of the following elements:\n+\n+* [Guiding principles](guiding-principles.md)  \n+* [Roles and responsibilities](roles.md)  \n+* [Change types](change-types.md)\n+* [Change process](change-process.md)\n+\n+![](assets\/governance-intro-pillars.svg)",
    "path":"gtfs\/Governance\/introduction.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"abyrd",
      "id":112871,
      "node_id":"MDQ6VXNlcjExMjg3MQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/112871?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/abyrd",
      "html_url":"https:\/\/github.com\/abyrd",
      "followers_url":"https:\/\/api.github.com\/users\/abyrd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/abyrd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/abyrd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/abyrd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/abyrd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/abyrd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/abyrd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/abyrd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/abyrd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I am not sure the analogy of principles, definitions, and processes being equal \"pillars\" standing on the community (as the base) and holding up governance (as the roof) works. While I understand the desire to use illustrations to make the text less dry, using analogies that don't quite fit may actually increase confusion.",
    "created_at":"2025-03-14T05:30:10Z",
    "updated_at":"2025-03-14T05:41:43Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1994849343",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994849343"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1994849343"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1994849343\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":14,
    "side":"RIGHT",
    "original_position":14,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1995840435",
    "pull_request_review_id":2686029866,
    "id":1995840435,
    "node_id":"PRRC_kwDOAlVrjc529huz",
    "diff_hunk":"@@ -0,0 +1,26 @@\n+# Introduction to GTFS Governance\n+\n+The GTFS standard is not set in stone; it is an open specification developed and maintained by a community of transit agencies, developers, and other stakeholders who actively use it. As this community of GTFS data producers and consumers continues to evolve, proposals for extending the specification to support new capabilities are expected. To manage this process, a GTFS governance framework has been established.\n+\n+GTFS governance refers to the framework that guides how the GTFS is maintained, updated, and developed. It encompasses the rules and processes that the community has established to guide decision-making, ensuring that GTFS remains an open and collaborative data standard.\n+\n+The governance framework for GTFS is composed of the following elements:\n+\n+* [Guiding principles](guiding-principles.md)  \n+* [Roles and responsibilities](roles.md)  \n+* [Change types](change-types.md)\n+* [Change process](change-process.md)\n+\n+![](assets\/governance-intro-pillars.svg)",
    "path":"gtfs\/Governance\/introduction.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Great point. While the idea seemed great at first, we agree that it might not communicate the original intention effectively. We do believe that images do improve understanding in documentation especially when explaining important structural pieces. Maybe we can redesign it in a similar fashion to the image in the [changes types doc](https:\/\/github.com\/MobilityData\/transit\/blob\/20250312-New-Governance-proposal\/gtfs\/Governance\/assets\/governance-change-types.svg)",
    "created_at":"2025-03-14T16:02:47Z",
    "updated_at":"2025-03-14T16:03:02Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1995840435",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1995840435"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r1995840435"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/1995840435\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":14,
    "side":"RIGHT",
    "original_position":14,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":1994849343.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2004208576",
    "pull_request_review_id":2700057058,
    "id":2004208576,
    "node_id":"PRRC_kwDOAlVrjc53dcvA",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  \n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. Each contributor can only be considered either a consumer or producer even if they occupy both role. |\r\n```",
    "created_at":"2025-03-19T20:12:33Z",
    "updated_at":"2025-03-19T20:20:52Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2004208576",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2004208576"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2004208576"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2004208576\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":351,
    "side":"RIGHT",
    "original_position":351,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2004208985",
    "pull_request_review_id":2700057058,
    "id":2004208985,
    "node_id":"PRRC_kwDOAlVrjc53dc1Z",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  \n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 1 Consumer and 1 Producer must apply and test the proposed changes. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **Tester Participation** | At least 2 contributors with at least 1 Consumer and 1 Producer must apply and test the proposed changes. |\r\n```",
    "created_at":"2025-03-19T20:12:42Z",
    "updated_at":"2025-03-19T20:13:56Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2004208985",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2004208985"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2004208985"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2004208985\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":298,
    "side":"RIGHT",
    "original_position":298,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005615722",
    "pull_request_review_id":2702674975,
    "id":2005615722,
    "node_id":"PRRC_kwDOAlVrjc53i0Rq",
    "diff_hunk":"@@ -52,7 +52,7 @@ All entities should only be removed from a GTFS Realtime feed when they are no l\n General guidelines for trip cancellations:\n \n * When canceling trips over a number of days, producers should provide TripUpdates referencing the given `trip_ids` and `start_dates` as `CANCELED` as well as an Alert with `NO_SERVICE` referencing the same `trip_ids` and `TimeRange` that can be shown to riders explaining the cancellation (e.g., detour).\n-* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`.  \n+* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`, unless the trip was a `NEW` or `DUPLICATED` trip and was subsequently canceled. ",
    "path":"gtfs-realtime\/best-practices\/best-practices.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"What is the usecase you have in mind with this sentence? Couldn't you just remove the trip from the feed if you don't want to see it again?",
    "created_at":"2025-03-20T13:13:30Z",
    "updated_at":"2025-03-20T13:13:31Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005615722",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005615722"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005615722"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005615722\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":55.0,
    "original_line":55,
    "side":"RIGHT",
    "original_position":5,
    "position":5,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005624817",
    "pull_request_review_id":2702695331,
    "id":2005624817,
    "node_id":"PRRC_kwDOAlVrjc53i2fx",
    "diff_hunk":"@@ -52,7 +52,7 @@ All entities should only be removed from a GTFS Realtime feed when they are no l\n General guidelines for trip cancellations:\n \n * When canceling trips over a number of days, producers should provide TripUpdates referencing the given `trip_ids` and `start_dates` as `CANCELED` as well as an Alert with `NO_SERVICE` referencing the same `trip_ids` and `TimeRange` that can be shown to riders explaining the cancellation (e.g., detour).\n-* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`.  \n+* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`, unless the trip was a `NEW` or `DUPLICATED` trip and was subsequently canceled. ",
    "path":"gtfs-realtime\/best-practices\/best-practices.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Removing the trip from the feed is the equivalent to using schedule_relationship = `DELETED`, which is different from cancelling the trip.\r\n\r\nA cancelled trip is still shown to the user, but removing the trip from the feed will cause it disappear, which is not what the user expects in some situations. (If the trip was added in error, it would be appropriate to remove it from the feed; if the trip was intended to run at some time and subsequently cancelled, it would still be need in the feed)",
    "created_at":"2025-03-20T13:18:14Z",
    "updated_at":"2025-03-20T13:18:15Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005624817",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005624817"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005624817"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005624817\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":55.0,
    "original_line":55,
    "side":"RIGHT",
    "original_position":5,
    "position":5,
    "subject_type":"line",
    "in_reply_to_id":2005615722.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005635099",
    "pull_request_review_id":2702725985,
    "id":2005635099,
    "node_id":"PRRC_kwDOAlVrjc53i5Ab",
    "diff_hunk":"@@ -52,7 +52,7 @@ All entities should only be removed from a GTFS Realtime feed when they are no l\n General guidelines for trip cancellations:\n \n * When canceling trips over a number of days, producers should provide TripUpdates referencing the given `trip_ids` and `start_dates` as `CANCELED` as well as an Alert with `NO_SERVICE` referencing the same `trip_ids` and `TimeRange` that can be shown to riders explaining the cancellation (e.g., detour).\n-* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`.  \n+* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`, unless the trip was a `NEW` or `DUPLICATED` trip and was subsequently canceled. ",
    "path":"gtfs-realtime\/best-practices\/best-practices.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"leonardehrenfried",
      "id":151346,
      "node_id":"MDQ6VXNlcjE1MTM0Ng==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/151346?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/leonardehrenfried",
      "html_url":"https:\/\/github.com\/leonardehrenfried",
      "followers_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/followers",
      "following_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/repos",
      "events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/leonardehrenfried\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"So you want to communicate something like \"earlier today we planned to add a reinforcement trip, but that has changed and it will not run\"?",
    "created_at":"2025-03-20T13:22:47Z",
    "updated_at":"2025-03-20T13:22:52Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005635099",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005635099"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005635099"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005635099\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":55.0,
    "original_line":55,
    "side":"RIGHT",
    "original_position":5,
    "position":5,
    "subject_type":"line",
    "in_reply_to_id":2005615722.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005654068",
    "pull_request_review_id":2702757561,
    "id":2005654068,
    "node_id":"PRRC_kwDOAlVrjc53i9o0",
    "diff_hunk":"@@ -52,7 +52,7 @@ All entities should only be removed from a GTFS Realtime feed when they are no l\n General guidelines for trip cancellations:\n \n * When canceling trips over a number of days, producers should provide TripUpdates referencing the given `trip_ids` and `start_dates` as `CANCELED` as well as an Alert with `NO_SERVICE` referencing the same `trip_ids` and `TimeRange` that can be shown to riders explaining the cancellation (e.g., detour).\n-* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`.  \n+* If no stops in a trip will be visited, the trip should be `CANCELED` instead of having all `stop_time_updates` being marked as `SKIPPED`, unless the trip was a `NEW` or `DUPLICATED` trip and was subsequently canceled. ",
    "path":"gtfs-realtime\/best-practices\/best-practices.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Yes, that's true.",
    "created_at":"2025-03-20T13:31:08Z",
    "updated_at":"2025-03-20T13:31:08Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005654068",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005654068"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2005654068"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2005654068\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":55.0,
    "original_line":55,
    "side":"RIGHT",
    "original_position":5,
    "position":5,
    "subject_type":"line",
    "in_reply_to_id":2005615722.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006087144",
    "pull_request_review_id":2703498242,
    "id":2006087144,
    "node_id":"PRRC_kwDOAlVrjc53knXo",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  \n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Agree with @gcamp 's addition, but \"role\" should be \"roles\".",
    "created_at":"2025-03-20T17:00:20Z",
    "updated_at":"2025-03-20T17:00:20Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006087144",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006087144"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006087144"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006087144\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":351,
    "side":"RIGHT",
    "original_position":351,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2004208576.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006107726",
    "pull_request_review_id":2703532877,
    "id":2006107726,
    "node_id":"PRRC_kwDOAlVrjc53ksZO",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  ",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Clarification needed for Producers representing multiple GTFS feeds. Can they pick any feed? Should it be a feed relevant to the proposed change?",
    "created_at":"2025-03-20T17:13:23Z",
    "updated_at":"2025-03-20T17:13:23Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006107726",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006107726"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006107726"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006107726\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":23,
    "side":"RIGHT",
    "original_position":23,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006123143",
    "pull_request_review_id":2703557438,
    "id":2006123143,
    "node_id":"PRRC_kwDOAlVrjc53kwKH",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. ",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Should include explicitly if General Contributors are allowed to vote on proposals (voting requirements are mentioned for all other contributor types).",
    "created_at":"2025-03-20T17:23:04Z",
    "updated_at":"2025-03-20T17:23:04Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006123143",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006123143"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006123143"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006123143\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":36,
    "side":"RIGHT",
    "original_position":36,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006252944",
    "pull_request_review_id":2703781020,
    "id":2006252944,
    "node_id":"PRRC_kwDOAlVrjc53lP2Q",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"These bullet points should correspond each to one step in the Pull Request Stage for legibility\/visual consistency (e.g., the second bullet point should be broken up into two\u2014one describing discussion and the other describing review).",
    "created_at":"2025-03-20T18:47:21Z",
    "updated_at":"2025-03-20T18:47:21Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006252944",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006252944"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006252944"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006252944\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":39.0,
    "original_line":37,
    "side":"RIGHT",
    "original_position":37,
    "position":39,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006261163",
    "pull_request_review_id":2703794302,
    "id":2006261163,
    "node_id":"PRRC_kwDOAlVrjc53lR2r",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"This list excludes mention of the review step. The written descriptions of each should comprehensively represent the visual, especially when thinking in terms of accessibility (a screen reader can only read these four bullet points).",
    "created_at":"2025-03-20T18:52:16Z",
    "updated_at":"2025-03-20T18:52:17Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006261163",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006261163"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006261163"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006261163\/reactions",
      "total_count":2,
      "+1":2,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":51.0,
    "original_line":48,
    "side":"RIGHT",
    "original_position":48,
    "position":51,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006264046",
    "pull_request_review_id":2703799087,
    "id":2006264046,
    "node_id":"PRRC_kwDOAlVrjc53lSju",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Same comment as above here.",
    "created_at":"2025-03-20T18:54:28Z",
    "updated_at":"2025-03-20T18:54:29Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006264046",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006264046"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006264046"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006264046\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":62.0,
    "original_line":58,
    "side":"RIGHT",
    "original_position":58,
    "position":62,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006281296",
    "pull_request_review_id":2703826276,
    "id":2006281296,
    "node_id":"PRRC_kwDOAlVrjc53lWxQ",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I think there needs to be more definition on what does\/does not constitute a \"single change\".",
    "created_at":"2025-03-20T19:03:50Z",
    "updated_at":"2025-03-20T19:03:50Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006281296",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006281296"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006281296"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006281296\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":149,
    "side":"RIGHT",
    "original_position":149,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006285485",
    "pull_request_review_id":2703833407,
    "id":2006285485,
    "node_id":"PRRC_kwDOAlVrjc53lXyt",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period length based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\r\n```",
    "created_at":"2025-03-20T19:07:07Z",
    "updated_at":"2025-03-20T19:07:07Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006285485",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006285485"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006285485"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006285485\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":152,
    "side":"RIGHT",
    "original_position":152,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006286226",
    "pull_request_review_id":2703834577,
    "id":2006286226,
    "node_id":"PRRC_kwDOAlVrjc53lX-S",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  ",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n* The community engages in discussions to refine the proposal.\r\n```",
    "created_at":"2025-03-20T19:07:42Z",
    "updated_at":"2025-03-20T19:07:42Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006286226",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006286226"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006286226"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006286226\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":57,
    "side":"RIGHT",
    "original_position":57,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006405571",
    "pull_request_review_id":2704028828,
    "id":2006405571,
    "node_id":"PRRC_kwDOAlVrjc53l1HD",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Will a -1 vote count if the contributor does not provide actionable feedback? If not, this scenario should be listed under Invalid Votes.",
    "created_at":"2025-03-20T20:27:30Z",
    "updated_at":"2025-03-20T20:27:30Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006405571",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006405571"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006405571"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006405571\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":263.0,
    "original_line":261,
    "side":"RIGHT",
    "original_position":261,
    "position":263,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006414225",
    "pull_request_review_id":2704042601,
    "id":2006414225,
    "node_id":"PRRC_kwDOAlVrjc53l3OR",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  ",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes and provide commentary in the Pull Request comment section.\r\n```",
    "created_at":"2025-03-20T20:32:31Z",
    "updated_at":"2025-03-20T20:32:31Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006414225",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006414225"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006414225"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006414225\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":280,
    "side":"RIGHT",
    "original_position":280,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006421816",
    "pull_request_review_id":2704055476,
    "id":2006421816,
    "node_id":"PRRC_kwDOAlVrjc53l5E4",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  ",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Should be specific about what \"public-facing environment\" is. Not confident on this language, but perhaps:\r\n\r\n```suggestion\r\n    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment. For the Producer, this means a public GTFS feed; for the Consumer, this means a public-facing, production version of an application.\r\n```",
    "created_at":"2025-03-20T20:39:02Z",
    "updated_at":"2025-03-20T20:39:03Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006421816",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006421816"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006421816"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006421816\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":284,
    "side":"RIGHT",
    "original_position":284,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006427639",
    "pull_request_review_id":2704064361,
    "id":2006427639,
    "node_id":"PRRC_kwDOAlVrjc53l6f3",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  \n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"See my earlier comment about Voting Against.",
    "created_at":"2025-03-20T20:43:37Z",
    "updated_at":"2025-03-20T20:43:37Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006427639",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006427639"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2006427639"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2006427639\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":349.0,
    "original_line":349,
    "side":"RIGHT",
    "original_position":349,
    "position":349,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009146569",
    "pull_request_review_id":2708620019,
    "id":2009146569,
    "node_id":"PRRC_kwDOAlVrjc53wSTJ",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***\n+\n+## TL;DR\n+*(Provide a brief summary of this proposal and the changes it introduces.)* \n+\n+## Describe the Problem\n+*(Describe what you are trying to achieve. If this is linked to an existing issue, please provide the issue link.)* \n+\n+## Use Cases\n+*(Share examples of the scenarios you want the proposal to address, e.g., GTFS-Fares v2 makes it possible to display the cost of a monthly pass. Include visuals of how this change will appear to riders, if applicable.)*\n+\n+## Proposed Solution\n+*(Provide a clear and concise description of the intended change.)*\n+\n+## Type of change\n+\n+*Please select the relevant change type.*\n+\n+GTFS Schedule\n+- [ ] Functional Change\n+- [ ] Non-Functional Change\n+- [ ] Documentation Maintenance\n+\n+GTFS Realtime\n+- [ ] Specification Change\n+- [ ] Specification Change (Experimental Field)\n+\n+## Additional Information\n+*(Include any relevant background, context, or supporting details that may help reviewers understand the rationale behind this proposal. This could include links to discussions, technical documentation, or related proposals.)*\n+\n+## Proposed Discussion Period\n+*(Please specify a minimum estimated discussion period length based on the scope of the proposed change.* \n+- *Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d)*\n+\n+## Testing Details\n+*(If applicable, confirm the identity of the Consumer(s) and Producer(s) who will test the changes in the Pull Request comment section and document them below.)*\n+\n+- Consumer(s): *(List the entities that will consume the data and test the proposed change.)*\n+- Producer(s): *(List the entities that will produce the data and test the proposed change.)*\n+- Estimated Testing Period: *(Specify the duration for testing.)*\n+\n+## Proposal Update Tracker \n+*(Track changes to this Pull Request post over time, including edits and updates to the proposal. Regularly update this section to summarize major points discussed in the PR, ensuring a clear record of key decisions and modifications.)*\n+\n+| Date       | Update Description |\n+|------------|--------------------|\n+| (YYYY-MM-DD) | (Brief description of the update) |\n+\n+## Checklist\n+\n+- [ ] I have read and understood the GTFS Change Process.\n+- [ ] I have read and understood the GTFS Guiding Principles. \n+- [ ] I understand the Role of Advocate and the Responsibilities attached to it. \n+- [ ] I have signed the Contributor License Agreement (CLA).\n+- [ ] I have ensured that this proposal is not covered by an existing Pull Request.",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"AdrianaCeric",
      "id":62163307,
      "node_id":"MDQ6VXNlcjYyMTYzMzA3",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/62163307?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/AdrianaCeric",
      "html_url":"https:\/\/github.com\/AdrianaCeric",
      "followers_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/followers",
      "following_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/repos",
      "events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Links to the GTFS Change Process \/ GTFS Guiding Principles \/ Role of Advocate \/ CLA \/ PR tab would be helpful here",
    "created_at":"2025-03-23T15:32:17Z",
    "updated_at":"2025-03-23T15:37:17Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009146569",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009146569"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009146569"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009146569\/reactions",
      "total_count":1,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":1,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":51.0,
    "start_side":"RIGHT",
    "line":null,
    "original_line":55,
    "side":"RIGHT",
    "original_position":55,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009146644",
    "pull_request_review_id":2708620019,
    "id":2009146644,
    "node_id":"PRRC_kwDOAlVrjc53wSUU",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***\n+\n+## TL;DR",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"AdrianaCeric",
      "id":62163307,
      "node_id":"MDQ6VXNlcjYyMTYzMzA3",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/62163307?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/AdrianaCeric",
      "html_url":"https:\/\/github.com\/AdrianaCeric",
      "followers_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/followers",
      "following_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/repos",
      "events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"\"Summary\" instead of TL;DR? ",
    "created_at":"2025-03-23T15:32:38Z",
    "updated_at":"2025-03-23T15:37:17Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009146644",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009146644"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009146644"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009146644\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":3,
    "side":"RIGHT",
    "original_position":3,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009147324",
    "pull_request_review_id":2708620019,
    "id":2009147324,
    "node_id":"PRRC_kwDOAlVrjc53wSe8",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"AdrianaCeric",
      "id":62163307,
      "node_id":"MDQ6VXNlcjYyMTYzMzA3",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/62163307?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/AdrianaCeric",
      "html_url":"https:\/\/github.com\/AdrianaCeric",
      "followers_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/followers",
      "following_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/repos",
      "events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Wouldn't using HTML comments (`<!-- -->`) be a better idea for the placeholder text of this PR template? This way, instructions won\u2019t show up in the final PR and PR-makers won't have to delete each set of parentheses to add their own text.",
    "created_at":"2025-03-23T15:35:49Z",
    "updated_at":"2025-03-23T15:37:18Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009147324",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009147324"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009147324"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009147324\/reactions",
      "total_count":1,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":1,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":1,
    "side":"RIGHT",
    "original_position":1,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009147825",
    "pull_request_review_id":2708621440,
    "id":2009147825,
    "node_id":"PRRC_kwDOAlVrjc53wSmx",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***\n+\n+## TL;DR",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"AdrianaCeric",
      "id":62163307,
      "node_id":"MDQ6VXNlcjYyMTYzMzA3",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/62163307?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/AdrianaCeric",
      "html_url":"https:\/\/github.com\/AdrianaCeric",
      "followers_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/followers",
      "following_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/repos",
      "events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/AdrianaCeric\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"just saw that https:\/\/github.com\/google\/transit\/pull\/544#issuecomment-2741646507 also had the same opinon!",
    "created_at":"2025-03-23T15:38:19Z",
    "updated_at":"2025-03-23T15:38:19Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009147825",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"NONE",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009147825"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2009147825"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2009147825\/reactions",
      "total_count":2,
      "+1":0,
      "-1":0,
      "laugh":2,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":3,
    "side":"RIGHT",
    "original_position":3,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2009146644.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014781811",
    "pull_request_review_id":2718258136,
    "id":2014781811,
    "node_id":"PRRC_kwDOAlVrjc54FyFz",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |\n+| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA. |\n \n ## _message_ StopTimeUpdate\n \n Realtime update for arrival and\/or departure events for a given stop on a trip. Please also refer to the general discussion of stop time updates in the [TripDescriptor](#message-tripdescriptor) and [trip updates entities](trip-updates.md) documentation.\n \n-Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events.\n+Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events, unless if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, in such case past stops must not be dropped as they define the trip the vehicle is on, until the whole trip has been finished.\n The update is linked to a specific stop either through stop_sequence or stop_id, so one of these fields must necessarily be set.  If the same stop_id is visited more than once in a trip, then stop_sequence should be provided in all StopTimeUpdates for that stop_id on that trip.\n \n+In new or replacement trips, updates are used to specify the stops visited by the trip without referring to an existing trip in the GTFS Static. In such trips, `stop_id`, `stop_sequence`, `departure` and `arrival` must all be set.\n+\n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. |\n-| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. |\n-| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n-| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n+| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, and the value must be increasing along the trip. |\n+| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"`departure_time` is optional in the static gtfs, shouldn't it be the same here? ",
    "created_at":"2025-03-26T18:24:46Z",
    "updated_at":"2025-03-26T18:34:06Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014781811",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014781811"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014781811"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014781811\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":209.0,
    "original_line":208,
    "side":"RIGHT",
    "original_position":63,
    "position":71,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014798892",
    "pull_request_review_id":2718286646,
    "id":2014798892,
    "node_id":"PRRC_kwDOAlVrjc54F2Qs",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |\n+| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA. |\n \n ## _message_ StopTimeUpdate\n \n Realtime update for arrival and\/or departure events for a given stop on a trip. Please also refer to the general discussion of stop time updates in the [TripDescriptor](#message-tripdescriptor) and [trip updates entities](trip-updates.md) documentation.\n \n-Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events.\n+Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events, unless if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, in such case past stops must not be dropped as they define the trip the vehicle is on, until the whole trip has been finished.\n The update is linked to a specific stop either through stop_sequence or stop_id, so one of these fields must necessarily be set.  If the same stop_id is visited more than once in a trip, then stop_sequence should be provided in all StopTimeUpdates for that stop_id on that trip.\n \n+In new or replacement trips, updates are used to specify the stops visited by the trip without referring to an existing trip in the GTFS Static. In such trips, `stop_id`, `stop_sequence`, `departure` and `arrival` must all be set.\n+\n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. |\n-| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. |\n-| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n-| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n+| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, and the value must be increasing along the trip. |\n+| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"It is required unless for some flex trips where pick up \/ drop off window is defined, so it is required here as well as this original doesn't support adding such flex trips directly at this moment.",
    "created_at":"2025-03-26T18:36:53Z",
    "updated_at":"2025-03-26T18:36:53Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014798892",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014798892"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014798892"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014798892\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":209.0,
    "original_line":208,
    "side":"RIGHT",
    "original_position":63,
    "position":71,
    "subject_type":"line",
    "in_reply_to_id":2014781811.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014801905",
    "pull_request_review_id":2718291664,
    "id":2014801905,
    "node_id":"PRRC_kwDOAlVrjc54F2_x",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |\n+| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA. |\n \n ## _message_ StopTimeUpdate\n \n Realtime update for arrival and\/or departure events for a given stop on a trip. Please also refer to the general discussion of stop time updates in the [TripDescriptor](#message-tripdescriptor) and [trip updates entities](trip-updates.md) documentation.\n \n-Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events.\n+Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events, unless if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, in such case past stops must not be dropped as they define the trip the vehicle is on, until the whole trip has been finished.\n The update is linked to a specific stop either through stop_sequence or stop_id, so one of these fields must necessarily be set.  If the same stop_id is visited more than once in a trip, then stop_sequence should be provided in all StopTimeUpdates for that stop_id on that trip.\n \n+In new or replacement trips, updates are used to specify the stops visited by the trip without referring to an existing trip in the GTFS Static. In such trips, `stop_id`, `stop_sequence`, `departure` and `arrival` must all be set.\n+\n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. |\n-| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. |\n-| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n-| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n+| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, and the value must be increasing along the trip. |\n+| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"that's arrival_time, departure_time is always optional or forbidden unless it's inside a timepoint. ",
    "created_at":"2025-03-26T18:39:09Z",
    "updated_at":"2025-03-26T18:39:10Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014801905",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014801905"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014801905"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014801905\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":209.0,
    "original_line":208,
    "side":"RIGHT",
    "original_position":63,
    "position":71,
    "subject_type":"line",
    "in_reply_to_id":2014781811.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014815521",
    "pull_request_review_id":2718315381,
    "id":2014815521,
    "node_id":"PRRC_kwDOAlVrjc54F6Uh",
    "diff_hunk":"@@ -164,43 +165,47 @@ Note that the update can describe a trip that has already completed.To this end,\n |------------------|------------|----------------|-------------------|-------------------|\n | **trip** | [TripDescriptor](#message-tripdescriptor) | Required | One | The Trip that this message applies to. There can be at most one TripUpdate entity for each actual trip instance. If there is none, that means there is no prediction information available. It does *not* mean that the trip is progressing according to schedule. |\n | **vehicle** | [VehicleDescriptor](#message-vehicledescriptor) | Optional | One | Additional information on the vehicle that is serving this trip. |\n-| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.  At least one stop_time_update must be provided for the trip unless the trip.schedule_relationship is CANCELED, DELETED, or DUPLICATED. If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n+| **stop_time_update** | [StopTimeUpdate](#message-stoptimeupdate) | Conditionally required | Many | Updates to StopTimes for the trip (both future, i.e., predictions, and in some cases, past ones, i.e., those that already happened). The updates must be sorted by stop_sequence, and apply for all the following stops of the trip up to the next specified stop_time_update.<br>If trip.schedule_relationship is SCHEDULED, at least one stop_time_update must be provided for the trip.<br>If trip.schedule_relationship is NEW or REPLACEMENT, stop_time_updates must be provided for all stops in the new or replacement trip, including stops with times in the past, and the stop times in the static GTFS are not used.<br>If the trip is canceled or deleted, no stop_time_updates need to be provided. If stop_time_updates are provided for a canceled or deleted trip then the trip.schedule_relationship takes precedence over any stop_time_updates and their associated schedule_relationship. If the trip is duplicated, stop_time_updates may be provided to indicate real-time information for the new trip. |\n | **timestamp** | [uint64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The most recent moment at which the vehicle's real-time progress was measured to estimate StopTimes in the future. When StopTimes in the past are provided, arrival\/departure times may be earlier than this value. In POSIX time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). |\n | **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | The current schedule deviation for the trip. Delay should only be specified when the prediction is given relative to some existing schedule in GTFS.<br>Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>Delay information in StopTimeUpdates take precedent of trip-level delay information, such that trip-level delay is only propagated until the next stop along the trip with a StopTimeUpdate delay value specified.<br>Feed providers are strongly encouraged to provide a TripUpdate.timestamp value indicating when the delay value was last updated, in order to evaluate the freshness of the data.<br><br>**Caution:** this field is still **experimental**, and subject to change. It may be formally adopted in the future.|\n | **trip_properties** | [TripProperties](#message-tripproperties) | Optional | One | Provides the updated properties for the trip. <br><br>**Caution:** this message is still **experimental**, and subject to change. It may be formally adopted in the future. |\n \n ## _message_ StopTimeEvent\n \n-Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty.\n+Timing information for a single predicted event (either arrival or departure). Timing consists of delay and\/or estimated time, and uncertainty. A scheduled time can also be added for added, replacement or duplicated trips.\n \n *   delay should be used when the prediction is given relative to some existing schedule in GTFS.\n-*   time should be given whether there is a predicted schedule or not. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   time should be given whether there is a predicted schedule or not, and must be given for new or replacement trips. If both time and delay are specified, time will take precedence (although normally, time, if given for a scheduled trip, should be equal to scheduled time in GTFS + delay).\n+*   scheduled time may be given if the trip is a new, replacement or duplicated trip.\n \n Uncertainty applies equally to both time and delay. The uncertainty roughly specifies the expected error in true delay (but note, we don't yet define its precise statistical meaning). It's possible for the uncertainty to be 0, for example for trains that are driven under computer timing control.\n \n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.  Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC). Either delay or time must be provided within a StopTimeEvent - both fields cannot be empty. |\n-| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0. |\n+| **delay** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Delay (in seconds) can be positive (meaning that the vehicle is late) or negative (meaning that the vehicle is ahead of schedule). Delay of 0 means that the vehicle is exactly on time.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if delay is not given. |\n+| **time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Estimated or actual event as absolute time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA.<br>**Required** otherwise if time is not given. |\n+| **scheduled_time** | [int64](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally forbidden | One | Scheduled time. In POSIX time (i.e., number of seconds since January 1st 1970 00:00:00 UTC).<br>**Optional** if TripUpdate.schedule_relationship is NEW, REPLACEMENT or DUPLICATED, **forbidden** otherwise. |\n+| **uncertainty** | [int32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Optional | One | If uncertainty is omitted, it is interpreted as unknown. To specify a completely certain prediction, set its uncertainty to 0.<br>**Forbidden** if StopTimeUpdate.schedule_relationship is NO_DATA. |\n \n ## _message_ StopTimeUpdate\n \n Realtime update for arrival and\/or departure events for a given stop on a trip. Please also refer to the general discussion of stop time updates in the [TripDescriptor](#message-tripdescriptor) and [trip updates entities](trip-updates.md) documentation.\n \n-Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events.\n+Updates can be supplied for both past and future events. The producer is allowed, although not required, to drop past events, unless if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, in such case past stops must not be dropped as they define the trip the vehicle is on, until the whole trip has been finished.\n The update is linked to a specific stop either through stop_sequence or stop_id, so one of these fields must necessarily be set.  If the same stop_id is visited more than once in a trip, then stop_sequence should be provided in all StopTimeUpdates for that stop_id on that trip.\n \n+In new or replacement trips, updates are used to specify the stops visited by the trip without referring to an existing trip in the GTFS Static. In such trips, `stop_id`, `stop_sequence`, `departure` and `arrival` must all be set.\n+\n **Fields**\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. |\n-| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. |\n-| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n-| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED.  If schedule_relationship is NO_DATA, arrival and departure must be empty. |\n+| **stop_sequence** | [uint32](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stop_times.txt in the corresponding GTFS feed.  Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty.  stop_sequence is required for trips that visit the same stop_id more than once (e.g., a loop) to disambiguate which stop the prediction is for. If `StopTimeProperties.assigned_stop_id` is populated, then `stop_sequence` must be populated. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT, and the value must be increasing along the trip. |\n+| **stop_id** | [string](https:\/\/protobuf.dev\/programming-guides\/proto2\/#scalar) | Conditionally required | One | Must be the same as in stops.txt in the corresponding GTFS feed. Either stop_sequence or stop_id must be provided within a StopTimeUpdate - both fields cannot be empty. If `StopTimeProperties.assigned_stop_id` is populated, it is preferred to omit `stop_id` and use only `stop_sequence`. If `StopTimeProperties.assigned_stop_id` and `stop_id` are populated, `stop_id` must match `assigned_stop_id`. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **arrival** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |\n+| **departure** | [StopTimeEvent](#message-stoptimeevent) | Conditionally required | One | If schedule_relationship is empty or SCHEDULED, either arrival or departure must be provided within a StopTimeUpdate - both fields cannot be empty. arrival and departure may both be empty when schedule_relationship is SKIPPED. **Required** if `TripUpdate.schedule_relationship` is NEW or REPLACEMENT. |",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"ff994c026268565d7f52484531eeb949bdfc6143",
    "original_commit_id":"010c9761616a810531e297d90697145c1097f1ec",
    "user":{
      "login":"miklcct",
      "id":2827264,
      "node_id":"MDQ6VXNlcjI4MjcyNjQ=",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/2827264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/miklcct",
      "html_url":"https:\/\/github.com\/miklcct",
      "followers_url":"https:\/\/api.github.com\/users\/miklcct\/followers",
      "following_url":"https:\/\/api.github.com\/users\/miklcct\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/miklcct\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/miklcct\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/miklcct\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/miklcct\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/miklcct\/repos",
      "events_url":"https:\/\/api.github.com\/users\/miklcct\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/miklcct\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Ok I see your point, however I do not wish to change this now as missing arrival \/ departure times can cause headaches by the consumers how to fill the missing one, when used for passenger information and routing purposes. \r\n\r\nWe can always relax it in the future if needed.",
    "created_at":"2025-03-26T18:49:12Z",
    "updated_at":"2025-03-26T18:49:12Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014815521",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014815521"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/504#discussion_r2014815521"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/504"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014815521\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":209.0,
    "original_line":208,
    "side":"RIGHT",
    "original_position":63,
    "position":71,
    "subject_type":"line",
    "in_reply_to_id":2014781811.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014821583",
    "pull_request_review_id":2718328220,
    "id":2014821583,
    "node_id":"PRRC_kwDOAlVrjc54F7zP",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  ",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"paulswartz",
      "id":214921,
      "node_id":"MDQ6VXNlcjIxNDkyMQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/214921?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/paulswartz",
      "html_url":"https:\/\/github.com\/paulswartz",
      "followers_url":"https:\/\/api.github.com\/users\/paulswartz\/followers",
      "following_url":"https:\/\/api.github.com\/users\/paulswartz\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/paulswartz\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/paulswartz\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/paulswartz\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/paulswartz\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/paulswartz\/repos",
      "events_url":"https:\/\/api.github.com\/users\/paulswartz\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/paulswartz\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Could an agency who is not the feed picked by the Producer vote separately?",
    "created_at":"2025-03-26T18:53:39Z",
    "updated_at":"2025-03-26T18:53:39Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014821583",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014821583"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014821583"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014821583\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":23,
    "side":"RIGHT",
    "original_position":23,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2006107726.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014895280",
    "pull_request_review_id":2718450477,
    "id":2014895280,
    "node_id":"PRRC_kwDOAlVrjc54GNyw",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  ",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@westontrillium We think Producers representing multiple GTFS feeds can pick any feed they manage, as long as they choose only one and ensure it is not represented twice. The feed does not need to be relevant to the proposed change, as determining relevance would be complicated to uphold and moderate.\r\n\r\nOur intention is to convey a principle along the lines of: \"**One organization, one feed, one vote**\", in hopes that this ensures fair representation while keeping the process practical and inclusive. Maybe the language can be changed to reflect this a bit better. \r\n\r\n@paulswartz Yes. As long as a it is a unique feed, the agency can represent itself. We are trying to avoid double representation.",
    "created_at":"2025-03-26T19:41:38Z",
    "updated_at":"2025-03-26T19:41:38Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014895280",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014895280"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014895280"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014895280\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":23,
    "side":"RIGHT",
    "original_position":23,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2006107726.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014910574",
    "pull_request_review_id":2718477527,
    "id":2014910574,
    "node_id":"PRRC_kwDOAlVrjc54GRhu",
    "diff_hunk":"@@ -0,0 +1,18 @@\n+# Guiding principles\n+\n+In order to preserve the original vision of GTFS, a number of guiding principles have been established to take into consideration when changing the specification:\n+\n+**Feeds should be easy to create and edit**  \n+We chose CSV as the basis for the specification because it's easy to view and edit using spreadsheet programs and text editors, which is helpful for smaller agencies. It's also straightforward to generate from most programming languages and databases, which is good for publishers of larger feeds.\n+\n+**Feeds should be easy to parse**  \n+Feed readers should be able to extract the information they're looking for with as little work as possible. Changes and additions to the feed should be as broadly useful as possible, to minimize the number of code paths that readers of the feed need to implement. (However, making creation easier should be given precedence, since there will ultimately be more feed publishers than feed readers.)",
    "path":"gtfs\/Governance\/guiding-principles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@abyrd These are great points. We've decided to keep the Guiding Principles unchanged for now, as we believe that addressing this topic would require a separate discussion altogether. We would like to wait until this proposal is finalized before initiating that conversation with the community. In the meantime, we will add it as an item in the governance backlog.",
    "created_at":"2025-03-26T19:54:31Z",
    "updated_at":"2025-03-26T19:54:31Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014910574",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014910574"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014910574"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014910574\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":9.0,
    "original_line":9,
    "side":"RIGHT",
    "original_position":9,
    "position":9,
    "subject_type":"line",
    "in_reply_to_id":1994836460.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014912313",
    "pull_request_review_id":2718480304,
    "id":2014912313,
    "node_id":"PRRC_kwDOAlVrjc54GR85",
    "diff_hunk":"@@ -0,0 +1,18 @@\n+# Guiding principles\n+\n+In order to preserve the original vision of GTFS, a number of guiding principles have been established to take into consideration when changing the specification:\n+\n+**Feeds should be easy to create and edit**  \n+We chose CSV as the basis for the specification because it's easy to view and edit using spreadsheet programs and text editors, which is helpful for smaller agencies. It's also straightforward to generate from most programming languages and databases, which is good for publishers of larger feeds.\n+\n+**Feeds should be easy to parse**  \n+Feed readers should be able to extract the information they're looking for with as little work as possible. Changes and additions to the feed should be as broadly useful as possible, to minimize the number of code paths that readers of the feed need to implement. (However, making creation easier should be given precedence, since there will ultimately be more feed publishers than feed readers.)\n+\n+**The spec is about passenger information**  \n+GTFS is primarily concerned with passenger information. That is, the spec should include information that can help power tools for riders, first and foremost. There is potentially a large amount of operations-oriented information that transit agencies might want to transmit internally between systems. GTFS is not intended for that purpose and there are potentially other operations-oriented data-standards that may be more appropriate.",
    "path":"gtfs\/Governance\/guiding-principles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@abyrd Please [view reply above](https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014910574) regarding Guiding Principles.  ",
    "created_at":"2025-03-26T19:55:49Z",
    "updated_at":"2025-03-26T19:55:49Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014912313",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014912313"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014912313"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014912313\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":12.0,
    "original_line":12,
    "side":"RIGHT",
    "original_position":12,
    "position":12,
    "subject_type":"line",
    "in_reply_to_id":1994840717.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014937353",
    "pull_request_review_id":2718522135,
    "id":2014937353,
    "node_id":"PRRC_kwDOAlVrjc54GYEJ",
    "diff_hunk":"@@ -340,7 +340,9 @@ An alert, indicating some sort of incident in the public transit network.\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **active_period** | [TimeRange](#message-timerange) | Optional | Many | Time when the alert should be shown to the user. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. |\n+| **active_period** | [TimeRange](#message-timerange) | Conditionally Forbidden | Many | Time when the alert should be shown to the user. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. <br><br> - **Forbidden** if communication_period and impact_period exist |\n+| **communication_period** | [TimeRange](#message-timerange) | Conditionally Required | Many | Time when the alert should be shown to the user strictly for informative reasons. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. <br><br> - **Required** If impact_period is specified.<br> - **Forbidden** otherwise.|",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"2faff738b51703fea62b28b3d60b9b3047b20103",
    "original_commit_id":"b4daae011ed3168a8a100fabaa13f052356718df",
    "user":{
      "login":"gcamp",
      "id":129745,
      "node_id":"MDQ6VXNlcjEyOTc0NQ==",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/129745?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/gcamp",
      "html_url":"https:\/\/github.com\/gcamp",
      "followers_url":"https:\/\/api.github.com\/users\/gcamp\/followers",
      "following_url":"https:\/\/api.github.com\/users\/gcamp\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/gcamp\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/gcamp\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/gcamp\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/gcamp\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/gcamp\/repos",
      "events_url":"https:\/\/api.github.com\/users\/gcamp\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/gcamp\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"```suggestion\r\n| **communication_period** | [TimeRange](#message-timerange) | Conditionally Forbidden | Many | Time when the alert should be shown to the user strictly for informative reasons. If missing, the consuming application can decide when it's appropriate to be shown. If multiple ranges are given, the alert will be shown during all of them. <br><br> - **Optional** If impact_period is specified.<br> - **Forbidden** otherwise.|\r\n```",
    "created_at":"2025-03-26T20:15:53Z",
    "updated_at":"2025-03-26T20:16:42Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#discussion_r2014937353",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/546",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014937353"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/546#discussion_r2014937353"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/546"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014937353\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":344,
    "side":"RIGHT",
    "original_position":6,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014941268",
    "pull_request_review_id":2718527851,
    "id":2014941268,
    "node_id":"PRRC_kwDOAlVrjc54GZBU",
    "diff_hunk":"@@ -0,0 +1,76 @@\n+# Roles and Responsibilities\n+\n+The community is composed of two main stakeholder categories: [Contributors](#contributors) and the [Maintainer](#maintainer). \n+\n+![](assets\/governance-roles-1.svg)\n+\n+## Contributors\n+\n+Anyone can become a Contributor by participating in discussions within the official GTFS repository, regardless of their technical skills or experience with GTFS.\n+\n+**Responsibilities**\n+\n+* Track development progress, participate in discussions, and review Issues and Pull Requests.   \n+* Express their views with respect and understanding, adhering to the GTFS Guiding Principles.\n+\n+### Contributor Types\n+\n+#### Producers\n+\n+A GTFS Producer is an individual or organization responsible for generating GTFS data. This may include transit agencies, data vendors, aggregators, or planners.\n+\n+* If an individual or organization assigns GTFS feed production to another party, only one of them can be recognized as the Producer.  \n+* To vote, Producers must reference the GTFS feed they represent to confirm their role as Producer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### Consumers\n+\n+A GTFS Consumer is an individual or organization that ingests GTFS data, typically to provide and distribute rider-facing transit information through platforms such as software applications.\n+\n+* In some cases, contributors may consume GTFS data for research, data analysis, operations, planning, etc. However, they are considered Consumers only if their work is publicly accessible or shared in a public-facing context.  \n+* To vote, consumers must reference the GTFS consuming application they represent to confirm their role as Consumer.  \n+* In the case where a contributor is both a Consumer and Producer, they can only count as one, thus they must select a single role to represent during testing and voting.\n+\n+#### General Contributors\n+\n+Individuals or organizations that do not qualify as either Producers or Consumers are considered as General Contributors or simply referred to as Contributors. ",
    "path":"gtfs\/Governance\/roles.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Thanks, @westontrillium, we\u2019ve added a short note explicitly stating that General Contributors can vote. However, we chose not to elaborate on the limitations of their votes (e.g., not counting toward the minimum required Producers and Consumers), as this is already covered in the voting requirements.",
    "created_at":"2025-03-26T20:18:40Z",
    "updated_at":"2025-03-26T20:18:40Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014941268",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014941268"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014941268"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014941268\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":36,
    "side":"RIGHT",
    "original_position":36,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2006123143.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014973865",
    "pull_request_review_id":2718581745,
    "id":2014973865,
    "node_id":"PRRC_kwDOAlVrjc54Gg-p",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@westontrillium Thanks for bringing this up. Yes, it would invalidate the vote. We applied your suggestion in the Invalid Votes part of the table. ",
    "created_at":"2025-03-26T20:45:40Z",
    "updated_at":"2025-03-26T20:45:40Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014973865",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014973865"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014973865"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014973865\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":263.0,
    "original_line":261,
    "side":"RIGHT",
    "original_position":261,
    "position":263,
    "subject_type":"line",
    "in_reply_to_id":2006405571.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014978802",
    "pull_request_review_id":2718589327,
    "id":2014978802,
    "node_id":"PRRC_kwDOAlVrjc54GiLy",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  \n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"@westontrillium As mentioned above. We clarified this ",
    "created_at":"2025-03-26T20:49:35Z",
    "updated_at":"2025-03-26T20:49:35Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014978802",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014978802"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014978802"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014978802\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":349.0,
    "original_line":349,
    "side":"RIGHT",
    "original_position":349,
    "position":349,
    "subject_type":"line",
    "in_reply_to_id":2006427639.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014984613",
    "pull_request_review_id":2718598649,
    "id":2014984613,
    "node_id":"PRRC_kwDOAlVrjc54Gjml",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Great suggestion, we have updated the bullet point lists to reflect this in all tracks.",
    "created_at":"2025-03-26T20:54:22Z",
    "updated_at":"2025-03-26T20:54:23Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014984613",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014984613"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014984613"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014984613\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":39.0,
    "original_line":37,
    "side":"RIGHT",
    "original_position":37,
    "position":39,
    "subject_type":"line",
    "in_reply_to_id":2006252944.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014985825",
    "pull_request_review_id":2718600394,
    "id":2014985825,
    "node_id":"PRRC_kwDOAlVrjc54Gj5h",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Same as [above](https:\/\/github.com\/google\/transit\/pull\/544\/files#r2014984613), we have updated the text.",
    "created_at":"2025-03-26T20:55:18Z",
    "updated_at":"2025-03-26T20:55:18Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014985825",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014985825"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014985825"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014985825\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":51.0,
    "original_line":48,
    "side":"RIGHT",
    "original_position":48,
    "position":51,
    "subject_type":"line",
    "in_reply_to_id":2006261163.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014986682",
    "pull_request_review_id":2718601834,
    "id":2014986682,
    "node_id":"PRRC_kwDOAlVrjc54GkG6",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Same as [above](https:\/\/github.com\/google\/transit\/pull\/544\/files#r2014984613), we have updated the text.",
    "created_at":"2025-03-26T20:56:04Z",
    "updated_at":"2025-03-26T20:56:04Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014986682",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014986682"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2014986682"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2014986682\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":62.0,
    "original_line":58,
    "side":"RIGHT",
    "original_position":58,
    "position":62,
    "subject_type":"line",
    "in_reply_to_id":2006264046.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016796400",
    "pull_request_review_id":2721919350,
    "id":2016796400,
    "node_id":"PRRC_kwDOAlVrjc54Nd7w",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |\n+| **Extended Description**  | The Pull Request must contain an extended description of the proposed change. It is recommended to follow the provided Pull Request templates. |\n+| **Change type** | The Advocate must specify the type of change (Functional, Non-Functional, or Documentation Maintenance) in the opening post of the Pull Request.  <br>- Any contributor can flag a misclassified change at any time to ensure it follows the correct adoption track. <br>- If no consensus is reached, the Maintainer can provide clarification and recommend the appropriate track. |\n+| **Proposed Discussion Period** | The Advocate should specify a minimum estimated discussion period lenght based on the scope of the proposed change.  <br>- Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d |\n+| **Mailing List Announcement** | The Advocate must announce the creation of the Pull Request in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes), including: A brief description of the change and a link to the Pull Request. |\n+\n+### Step 2.2: Pull Request Discussion\n+\n+![](assets\/governance-process-step-2.2.svg)\n+  \n+> Note: Applicable to all Tracks \n+\n+The community engages in conversations to help refine and develop the proposal.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Proposal Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) discuss the proposal in the Pull Request comment section.\n+\n+2. **Proposal Updates**\n+\n+    * The [Advocate](roles.md\/#advocate) updates the proposal\u2019s contents based on the comments received.\n+\n+3. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by either the [Advocate](roles.md\/#advocate) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Pull Request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Discussion Period**  | The discussion lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. |\n+| **Contributor License Agreement** | All contributors, including the Advocate, who make edits to the proposal must sign the [Contributor License Agreement](https:\/\/github.com\/google\/transit\/blob\/master\/CONTRIBUTING.md#before-you-contribute). |\n+\n+### Step 2.3: Pull Request Review\n+\n+![](assets\/governance-process-step-2.3.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+The community provides feedback to the [Advocate](roles.md\/#advocate) to prepare the proposal for testing. \n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Review Period Announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the start of the review period in the Pull Request comment section.\n+\n+2. **Maintainer\u2019s Review**\n+\n+    * The [Maintainer](roles.md\/#maintainer) reviews the Pull Request to ensure the terminology aligns with the current specification.   \n+    * The [Maintainer](roles.md\/#maintainer) can either suggest changes in the comments or confirm the language is correct, prompting the [Advocate](roles.md\/#advocate) to adjust as needed and proceed to the next step.\n+\n+3. **Contributor Feedback**\n+\n+    * [Contributors](roles.md\/#contributors) can also review the Pull Request during this period and provide feedback to help the [Advocate](roles.md\/#advocate) make any final adjustments before testing.\n+\n+**<ins>Requirements<\/ins>** \n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Review Period**  | The review lasts for as long as the Advocate deems necessary, but must be at least 7 full calendar days. <br>- No minimum review period requirement for Documentation Maintenance Track. |\n+\n+### Step 2.4: Vote to Test \n+\n+![](assets\/governance-process-step-2.4.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+The community votes to confirm consensus on the proposal\u2019s scope and to ensure it is technically sound enough to proceed to testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Vote announcement**\n+\n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.\n+\n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.\n+\n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period. Any other change would require restarting the voting process.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to:  \n+        1. Continue working on the proposal, or  \n+        2. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **unanimous consensus**. |\n+| **Vote Passing Criteria** | The vote passes when all contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when any contributor votes **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |\n+| **Advocate's Vote** | The Advocate cannot vote for their own proposal. |\n+| **Invalid Votes** | Votes are considered invalid if:  <br>- A contributor casts their vote outside (before or after) the official voting period. <br>- An individual or organization votes more than once (Only one vote per individual or organization is permitted.)  |\n+| **Minimum Voting Period**  | The voting period must last at least **14 full calendar days** and end at **23:59:59 UTC**. |\n+\n+### Step 2.5: Testing\n+\n+![](assets\/governance-process-step-2.5.svg)\n+\n+> Note: Not applicable to Track B: Non-Functional Changes and Track C: Documentation Maintenance\n+\n+One GTFS [Producer](roles.md\/#producers) and one GTFS [Consumer](roles.md\/#consumers) volunteer to serve as [First Adopters](roles.md\/#first-adopter) by implementing the proposed changes for testing.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Tester Confirmation**  \n+     \n+    * The [Advocate](roles.md\/#advocate) confirms the identity of the [First Adopters](roles.md\/#first-adopter) which will test the changes in the Pull Request comment section.  \n+    \n+2. **Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) apply and test the changes in a public-facing environment.  \n+    * Testing lasts as long as necessary to ensure that all requirements are met before calling a vote to adopt.\n+\n+3. **Proof of Testing**\n+\n+    * The [First Adopters](roles.md\/#first-adopter) show proof of testing by sharing a link to the implemented changes in the pull request comments.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The [Advocate](roles.md\/#advocate) can proceed with a Vote to Adopt ([step 2.6](#step-26-vote-to-adopt)) only after all requirements of the testing period have been completed.\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Minimum Testing Period**  | The testing period must last **at least 7 full calendar days**. |\n+| **Tester Participation** | At least 1 Consumer and 1 Producer must apply and test the proposed changes. |\n+| **Problem identification during testing** | First Adopters testing the changes must report any identified issues by commenting on the Pull Request, ideally with a suggested solution, to allow the Advocate to make necessary adjustments to the proposal. <br>- If the change significantly impacts the proposal\u2019s scope, any Contributor may flag it, prompting the Advocate to either return the proposal to the discussion step ([step 2.2](#step-22-pull-request-discussion)) or consider withdrawing it. |\n+| **Testing Proof** | First Adopters must apply, test, and share changes in a public-facing environment:  <br>- a link to a public-facing GTFS feed for Producers <br>- a public-facing link to a GTFS consuming application for Consumers.  |\n+\n+### Step 2.6: Vote to Adopt\n+\n+![](assets\/governance-process-step-2.6.svg)\n+\n+> Note: Not applicable to Track C: Documentation Maintenance\n+\n+The community votes to confirm whether or not the proposed changes are to be officially adopted into the specification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Announcement of Vote**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the beginning of the vote in the Pull Request comment section, specifying the end time of the vote.  \n+    * The [Advocate](roles.md\/#advocate) announces the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread providing a link to the Pull Request comment and the end time of the vote.  \n+    \n+2. **Voting Process**  \n+     \n+    * [Contributors](roles.md\/#contributors) must vote in the comment section of the Pull Request.  \n+    \n+3. **Editing and Canceling**  \n+     \n+    * The [Advocate](roles.md\/#advocate) can edit the proposal only for editorial purposes during the voting period.  \n+    * The [Advocate](roles.md\/#advocate) can cancel the vote at any time.  \n+    \n+4. **End of Vote Announcement**  \n+     \n+    * The [Advocate](roles.md\/#advocate) announces the end of the vote in the Pull Request comment section and includes the result.  \n+    * The [Advocate](roles.md\/#advocate) also announces the end of the vote in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread, including the result.\n+\n+5. **Failed Vote**  \n+     \n+    * If the vote fails, the [Advocate](roles.md\/#advocate) can choose to either:  \n+        1. Adjust proposal based on actionable feedback provided and call another vote,  \n+        2. Go back to the discussion step ([step 2.2](#step-22-pull-request-discussion)) and redefine the scope, or  \n+        3. Abandon the proposal.  \n+    * The [Advocate](roles.md\/#advocate) must announce their decision in the Pull Request comment section and in the [GTFS Changes mailing list](https:\/\/groups.google.com\/g\/gtfs-changes) discussion thread.\n+\n+**<ins>Requirements<\/ins>** \n+\n+The vote must meet the following conditions:\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Consensus Principle** | The vote is based on **a qualified majority** (80% majority) |\n+| **Vote Passing Criteria** | The vote passes when 80% or more of contributors vote **\\+1**. |\n+| **Vote Failing Criteria** | The vote fails when more than 20% of contributors vote **\\-1**. |\n+| **Voting Format** | Votes must be formatted as follows: <br>- *\u201c+1 or \\-1, Organization Name, Contributor Type (Consumer, Producer, or General Contributor), Link to Produced Feed or Consuming Application\u201d* |\n+| **Voting Against** | Contributors providing a negative vote (-1) must give actionable feedback. <br>- Actionable feedback is practical and constructive, providing concrete observations or suggestions to help solve the identified issue:  <br> - \u201c*This proposal does not respect the backward compatibility principle of GTFS and we propose to create a separate file instead.*\u201d |\n+| **Minimum Votes** | At least 5 votes must be cast. |\n+| **Participant Composition** | At least 2 consumers and 2 producers must participate in the vote. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Thanks @gcamp and @westontrillium, we slightly changed the suggested text and made sure to include it in step 2.4 (vote to test) as well. \r\n\r\nThe updated text reads: `Each of these contributors can only be considered either a Consumer or Producer even if they are able to represent both roles.`",
    "created_at":"2025-03-27T14:25:04Z",
    "updated_at":"2025-03-27T14:25:04Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2016796400",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016796400"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2016796400"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016796400\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":351,
    "side":"RIGHT",
    "original_position":351,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2004208576.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016851316",
    "pull_request_review_id":2722024408,
    "id":2016851316,
    "node_id":"PRRC_kwDOAlVrjc54NrV0",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"Sergiodero",
      "id":104692200,
      "node_id":"U_kgDOBj156A",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/104692200?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/Sergiodero",
      "html_url":"https:\/\/github.com\/Sergiodero",
      "followers_url":"https:\/\/api.github.com\/users\/Sergiodero\/followers",
      "following_url":"https:\/\/api.github.com\/users\/Sergiodero\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/Sergiodero\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/Sergiodero\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/Sergiodero\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/Sergiodero\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/Sergiodero\/repos",
      "events_url":"https:\/\/api.github.com\/users\/Sergiodero\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/Sergiodero\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Thanks, @westontrillium, that\u2019s a good point. We tried to draft a preliminary definition for a \"single change\":\r\n\r\n`A \"single change\" is a self-contained modification with a focused scope, addressing one concept, feature, or rule without bundling unrelated updates.`\r\n\r\nWhat do you think? Our goal is to keep this definition somewhat open, encouraging the advocate to provide a reasonable argument on why a change should be separate or bundled, while at the same nudging contributors to default toward individual changes ideally. \r\n\r\nIt\u2019s also important to note that this is a \"should\" guideline, leaving room for the advocate\u2019s judgment.",
    "created_at":"2025-03-27T14:47:16Z",
    "updated_at":"2025-03-27T14:47:17Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2016851316",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016851316"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2016851316"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016851316\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":149,
    "side":"RIGHT",
    "original_position":149,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2006281296.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016920963",
    "pull_request_review_id":2722155119,
    "id":2016920963,
    "node_id":"PRRC_kwDOAlVrjc54N8WD",
    "diff_hunk":"@@ -0,0 +1,379 @@\n+# Change Process\n+\n+## Overview\n+\n+The specification Change Process guides how the community proposes, reviews, and adopts changes to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+The specification Change Process is divided into **2 main stages** and categorized into **3 tracks** according to the three [change types](change-types.md): [functional changes](change-types.md\/#1-functional-changes), [non-functional changes](change-types.md\/#2-non-functional-changes), and [documentation maintenance](change-types.md\/#3-documentation-maintenance). \n+\n+![](assets\/governance-process-overview.svg)\n+\n+### Stage 1: Issue \n+\n+The Issue Stage is meant for discussing new ideas, identifying needs, and proposing improvements to the specification. Issues help evaluate the necessity and support for a change, while organizing the resources required to proceed to the Pull Request Stage. \n+\n+It\u2019s recommended to start at the Issue stage to build consensus around new ideas. However, if the proposal\u2019s scope is already well-defined, beginning directly at the Pull Request Stage is appropriate.\n+\n+### Stage 2: Pull Request \n+\n+The Pull Request Stage is where ideas from the Issue Stage are developed and implemented into the specification. This stage is divided into 3 tracks depending on the change type. \n+\n+The entire process happens within the [GitHub google\/transit repository](https:\/\/github.com\/google\/transit\/pulls) and ensures that all changes are thoroughly evaluated before being adopted.\n+\n+## Process Tracks\n+\n+Depending on the type of the proposed change, different tracks apply to the Change Process. While the Issue Stage remains the same across all three tracks, the Pull Request Stage varies for each track.\n+\n+### Track A: Functional Changes\n+\n+![](assets\/governance-process-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Functional changes](change-types.md\/#1-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal and reviews it before testing.   \n+* After a preliminary vote, [First Adopters](roles.md\/#first-adopter) test the proposed changes.   \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track B: Non-Functional Changes\n+\n+![](assets\/governance-process-non-functional.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [Non-Functional changes](change-types.md\/#2-non-functional-changes) to the specification in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal.  \n+* The community votes to decide whether the changes should be officially adopted.  \n+* Finally, changes are implemented into the specification.\n+\n+### Track C: Documentation Maintenance\n+\n+![](assets\/governance-process-documentation.svg)\n+\n+This process guides how the community proposes, reviews, and adopts [changes to maintain the documentation](change-types.md\/#3-documentation-maintenance) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls).\n+\n+* A proposal is submitted by opening a Pull Request in the GTFS Repository.   \n+* The community engages in discussions to refine the proposal  \n+* Finally, changes are implemented into the specification.\n+\n+## Process Steps\n+\n+All of the steps in the Issue and Pull Request Stages are highlighted below. Consider that only Track A utilizes all the steps. Track B and Track C utilize a shortened version of the process: \n+\n+|  | Track A: Functional Changes | Track B: Non-Functional Changes | Track C: Documentation Maintenance |\n+| ----- | :---: | :---: | :---: |\n+| **[Step 1.1: Issue Publication](#step-11-issue-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 1.2: Issue Discussion](#step-12-issue-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.1: Pull Request Publication](#step-21-pull-request-publication)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.2: Pull Request Discussion](#step-22-pull-request-discussion)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.3: Pull Request Review](#step-23-pull-request-review)** | \u2713 | \u2713 | \u2713 |\n+| **[Step 2.4: Vote to Test](#step-24-vote-to-test)** | \u2713 |  |  |\n+| **[Step 2.5: Testing](#step-25-testing)** | \u2713 |  |  |\n+| **[Step 2.6: Vote to Adopt](#step-26-vote-to-adopt)** | \u2713 | \u2713 |  |\n+| **[Step 2.7: Adoption](#step-27-adoption)** | \u2713 | \u2713 | \u2713 |\n+\n+### Step 1.1: Issue Publication\n+\n+![](assets\/governance-process-step-1.1.svg)\n+\n+A [Contributor](roles.md\/#contributors) shares their idea to improve the specification by opening an Issue in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). \n+\n+* Anyone can open an Issue to start a discussion.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Submission**\n+\n+    * A [Contributor](roles.md\/#contributors) posts an Issue describing an idea and the problem it would solve.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Use the Specification Change Template** | Fill in the fields with high-level descriptions using [the provided template](https:\/\/github.com\/google\/transit\/issues\/new?assignees=&labels=spec-change&projects=&template=spec_change.yml). |\n+| **Encourage Discussion** | The content doesn't have to be perfect; it should stimulate discussion and change as the conversation moves forward. |\n+| **Tag Interested Contributors** | Tag other contributors who might be interested in the discussion and share the issue on relevant platforms. |\n+\n+### Step 1.2: Issue Discussion\n+\n+![](assets\/governance-process-step-1.2.svg)\n+\n+The community engages in discussions to help develop a proposal for modifying the specification, which will be submitted as a Pull Request in the next stage.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Issue Discussion**\n+\n+    * [Contributors](roles.md\/#contributors) reply to the original Issue post and share their feedback.\n+\n+2. **Working Group Proposal**\n+\n+    * If necessary, any [Contributor](roles.md\/#contributors) can propose the creation of a Working Group to facilitate a discussion between all interested parties using video-conferencing software.  \n+    * The Working Group can be organized by any [Contributor](roles.md\/#contributors) or the [Maintainer](roles.md\/#maintainer).  \n+    * Discussions held in Working Group meetings should be summarized in the Issue comments.\n+\n+**<ins>Suggestions<\/ins>** \n+\n+| Suggestion | Details |\n+| :---- | :---- |\n+| **Refine the Discussion Scope** | Focus the discussion on refining the scope of the proposal. |\n+| **Confirm Requirements** | Ensure that all necessary requirements for developing the proposal are confirmed. |\n+| **Gather Input** | Collect feedback from multiple contributors and assess overall support for the proposal. |\n+| **Summarize Discussions** | Regularly update the original post with the most recent points of discussion, such as: consensus reached, agreed scope, announcement of advocate and \/ or interested parties for testing.  |\n+| **Identify a potential Advocate** | Identify a contributor willing to develop the full proposal and take on the role of Advocate in the Pull Request Stage. |\n+\n+### Step 2.1: Pull Request Publication\n+\n+![](assets\/governance-process-step-2.1.svg)\n+\n+> Note: Applicable to all Tracks \n+\n+A proposal to change the specification is published by opening a Pull Request in [the GTFS Repository](https:\/\/github.com\/google\/transit\/pulls). The [Advocate](roles.md\/#advocate) who publishes the proposal must focus on a single change; anyone is welcome to propose a modification.\n+\n+**<ins>Actions<\/ins>** \n+\n+1. **Applying the Changes**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [fork](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/working-with-forks\/fork-a-repo#forking-a-repository) of the original [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) to either their personal or their organization\u2019s account.  \n+    * The [Advocate](roles.md\/#advocate) creates a branch in their fork and applies the proposed changes. \n+\n+2. **Pull Request Submission**\n+\n+    * The [Advocate](roles.md\/#advocate) creates a [Pull Request](https:\/\/docs.github.com\/en\/pull-requests\/collaborating-with-pull-requests\/proposing-changes-to-your-work-with-pull-requests\/creating-a-pull-request-from-a-fork) in the [GTFS Repository](https:\/\/github.com\/google\/transit\/pulls) from their fork. \n+\n+**<ins>Requirements<\/ins>**\n+\n+| Requirement | Details |\n+| :---- | :---- |\n+| **Single Change** | The Pull Request should focus on a single change at a time. |",
    "path":"gtfs\/Governance\/change-process.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"westontrillium",
      "id":57922264,
      "node_id":"MDQ6VXNlcjU3OTIyMjY0",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/57922264?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/westontrillium",
      "html_url":"https:\/\/github.com\/westontrillium",
      "followers_url":"https:\/\/api.github.com\/users\/westontrillium\/followers",
      "following_url":"https:\/\/api.github.com\/users\/westontrillium\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/westontrillium\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/westontrillium\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/westontrillium\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/westontrillium\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/westontrillium\/repos",
      "events_url":"https:\/\/api.github.com\/users\/westontrillium\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/westontrillium\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I think it's worth including the definition just to avoid the literal interpretation that \"single change to the spec\" means, for instance, one \"diff\" per PR. Especially for newcomers\/observers.",
    "created_at":"2025-03-27T15:19:10Z",
    "updated_at":"2025-03-27T15:19:10Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2016920963",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016920963"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2016920963"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2016920963\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":149,
    "side":"RIGHT",
    "original_position":149,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2006281296.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017014819",
    "pull_request_review_id":2722330622,
    "id":2017014819,
    "node_id":"PRRC_kwDOAlVrjc54OTQj",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***\n+\n+## TL;DR\n+*(Provide a brief summary of this proposal and the changes it introduces.)* \n+\n+## Describe the Problem\n+*(Describe what you are trying to achieve. If this is linked to an existing issue, please provide the issue link.)* \n+\n+## Use Cases\n+*(Share examples of the scenarios you want the proposal to address, e.g., GTFS-Fares v2 makes it possible to display the cost of a monthly pass. Include visuals of how this change will appear to riders, if applicable.)*\n+\n+## Proposed Solution\n+*(Provide a clear and concise description of the intended change.)*\n+\n+## Type of change\n+\n+*Please select the relevant change type.*\n+\n+GTFS Schedule\n+- [ ] Functional Change\n+- [ ] Non-Functional Change\n+- [ ] Documentation Maintenance\n+\n+GTFS Realtime\n+- [ ] Specification Change\n+- [ ] Specification Change (Experimental Field)\n+\n+## Additional Information\n+*(Include any relevant background, context, or supporting details that may help reviewers understand the rationale behind this proposal. This could include links to discussions, technical documentation, or related proposals.)*\n+\n+## Proposed Discussion Period\n+*(Please specify a minimum estimated discussion period length based on the scope of the proposed change.* \n+- *Example: \u201cI recommend reserving at least one month for discussion to ensure everyone has sufficient time to discuss the proposal.\u201d)*\n+\n+## Testing Details\n+*(If applicable, confirm the identity of the Consumer(s) and Producer(s) who will test the changes in the Pull Request comment section and document them below.)*\n+\n+- Consumer(s): *(List the entities that will consume the data and test the proposed change.)*\n+- Producer(s): *(List the entities that will produce the data and test the proposed change.)*\n+- Estimated Testing Period: *(Specify the duration for testing.)*\n+\n+## Proposal Update Tracker \n+*(Track changes to this Pull Request post over time, including edits and updates to the proposal. Regularly update this section to summarize major points discussed in the PR, ensuring a clear record of key decisions and modifications.)*\n+\n+| Date       | Update Description |\n+|------------|--------------------|\n+| (YYYY-MM-DD) | (Brief description of the update) |\n+\n+## Checklist\n+\n+- [ ] I have read and understood the GTFS Change Process.\n+- [ ] I have read and understood the GTFS Guiding Principles. \n+- [ ] I understand the Role of Advocate and the Responsibilities attached to it. \n+- [ ] I have signed the Contributor License Agreement (CLA).\n+- [ ] I have ensured that this proposal is not covered by an existing Pull Request.",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Great suggestion. Added it to the template. ",
    "created_at":"2025-03-27T16:01:28Z",
    "updated_at":"2025-03-27T16:01:28Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2017014819",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017014819"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2017014819"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017014819\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":51.0,
    "start_side":"RIGHT",
    "line":null,
    "original_line":55,
    "side":"RIGHT",
    "original_position":55,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2009146569.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017015863",
    "pull_request_review_id":2722332515,
    "id":2017015863,
    "node_id":"PRRC_kwDOAlVrjc54OTg3",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***\n+\n+## TL;DR",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"Yes, agreed. We just changed that. Thanks for bringing this to light. ",
    "created_at":"2025-03-27T16:02:04Z",
    "updated_at":"2025-03-27T16:02:05Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2017015863",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017015863"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2017015863"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017015863\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":3,
    "side":"RIGHT",
    "original_position":3,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2009146644.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017016774",
    "pull_request_review_id":2722334156,
    "id":2017016774,
    "node_id":"PRRC_kwDOAlVrjc54OTvG",
    "diff_hunk":"@@ -0,0 +1,55 @@\n+***REPLACE ALL THE TEXT IN (PARENTHESES) WITH YOUR OWN. USE THIS TEMPLATE AS A REFERENCE AND MODIFY AND REMOVE SECTIONS TO BEST FIT YOUR PROPOSAL***",
    "path":".github\/PULL_REQUEST_TEMPLATE.md",
    "commit_id":"4d58ce24a08412600a907d4ea048a33affa7615c",
    "original_commit_id":"67432c47d861a93fd8b609e54210635ba6e5ed7c",
    "user":{
      "login":"eliasmbd",
      "id":130911698,
      "node_id":"U_kgDOB82N0g",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/130911698?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/eliasmbd",
      "html_url":"https:\/\/github.com\/eliasmbd",
      "followers_url":"https:\/\/api.github.com\/users\/eliasmbd\/followers",
      "following_url":"https:\/\/api.github.com\/users\/eliasmbd\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/eliasmbd\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/eliasmbd\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/eliasmbd\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/eliasmbd\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/eliasmbd\/repos",
      "events_url":"https:\/\/api.github.com\/users\/eliasmbd\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/eliasmbd\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"This improves the template so much. Thanks! ",
    "created_at":"2025-03-27T16:02:33Z",
    "updated_at":"2025-03-27T16:02:34Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2017016774",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544",
    "author_association":"COLLABORATOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017016774"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/544#discussion_r2017016774"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/544"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017016774\/reactions",
      "total_count":0,
      "+1":0,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":1,
    "side":"RIGHT",
    "original_position":1,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":2009147324.0
  },
  {
    "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017199187",
    "pull_request_review_id":2722750546,
    "id":2017199187,
    "node_id":"PRRC_kwDOAlVrjc54PART",
    "diff_hunk":"@@ -340,7 +340,9 @@ An alert, indicating some sort of incident in the public transit network.\n \n | _**Field Name**_ | _**Type**_ | _**Required**_ | _**Cardinality**_ | _**Description**_ |\n |------------------|------------|----------------|-------------------|-------------------|\n-| **active_period** | [TimeRange](#message-timerange) | Optional | Many | Time when the alert should be shown to the user. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. |\n+| **active_period** | [TimeRange](#message-timerange) | Conditionally Forbidden | Many | Time when the alert should be shown to the user. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. <br><br> - **Forbidden** if communication_period and impact_period exist |\n+| **communication_period** | [TimeRange](#message-timerange) | Conditionally Required | Many | Time when the alert should be shown to the user strictly for informative reasons. If missing, the alert will be shown as long as it appears in the feed. If multiple ranges are given, the alert will be shown during all of them. <br><br> - **Required** If impact_period is specified.<br> - **Forbidden** otherwise.|\n+| **impact_period** | [TimeRange](#message-timerange) | Conditionally Required | Many | Time when the services are affected by the disruption mentioned in the alert. <br><br> - **Required** If communication_period is specified.<br> - **Forbidden** otherwise.|",
    "path":"gtfs-realtime\/spec\/en\/reference.md",
    "commit_id":"2faff738b51703fea62b28b3d60b9b3047b20103",
    "original_commit_id":"b4daae011ed3168a8a100fabaa13f052356718df",
    "user":{
      "login":"stevenmwhite",
      "id":43826990,
      "node_id":"MDQ6VXNlcjQzODI2OTkw",
      "avatar_url":"https:\/\/avatars.githubusercontent.com\/u\/43826990?v=4",
      "gravatar_id":"",
      "url":"https:\/\/api.github.com\/users\/stevenmwhite",
      "html_url":"https:\/\/github.com\/stevenmwhite",
      "followers_url":"https:\/\/api.github.com\/users\/stevenmwhite\/followers",
      "following_url":"https:\/\/api.github.com\/users\/stevenmwhite\/following{\/other_user}",
      "gists_url":"https:\/\/api.github.com\/users\/stevenmwhite\/gists{\/gist_id}",
      "starred_url":"https:\/\/api.github.com\/users\/stevenmwhite\/starred{\/owner}{\/repo}",
      "subscriptions_url":"https:\/\/api.github.com\/users\/stevenmwhite\/subscriptions",
      "organizations_url":"https:\/\/api.github.com\/users\/stevenmwhite\/orgs",
      "repos_url":"https:\/\/api.github.com\/users\/stevenmwhite\/repos",
      "events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/events{\/privacy}",
      "received_events_url":"https:\/\/api.github.com\/users\/stevenmwhite\/received_events",
      "type":"User",
      "user_view_type":"public",
      "site_admin":false
    },
    "body":"I'd remove the word \"disruption\" since alerts come in a lot of different flavors...\r\n\r\n>Time when the services are affected by this alert.",
    "created_at":"2025-03-27T17:13:39Z",
    "updated_at":"2025-03-27T17:13:40Z",
    "html_url":"https:\/\/github.com\/google\/transit\/pull\/546#discussion_r2017199187",
    "pull_request_url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/546",
    "author_association":"CONTRIBUTOR",
    "_links":{
      "self":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017199187"
      },
      "html":{
        "href":"https:\/\/github.com\/google\/transit\/pull\/546#discussion_r2017199187"
      },
      "pull_request":{
        "href":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/546"
      }
    },
    "reactions":{
      "url":"https:\/\/api.github.com\/repos\/google\/transit\/pulls\/comments\/2017199187\/reactions",
      "total_count":1,
      "+1":1,
      "-1":0,
      "laugh":0,
      "hooray":0,
      "confused":0,
      "heart":0,
      "rocket":0,
      "eyes":0
    },
    "start_line":null,
    "original_start_line":null,
    "start_side":null,
    "line":null,
    "original_line":345,
    "side":"RIGHT",
    "original_position":7,
    "position":1,
    "subject_type":"line",
    "in_reply_to_id":null
  }
]